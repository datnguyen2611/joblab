[{"/home/ubuntu/environment/jobslab-web/src/index.js":"1","/home/ubuntu/environment/jobslab-web/src/AdminRoutes.js":"2","/home/ubuntu/environment/jobslab-web/src/redux_store/index.js":"3","/home/ubuntu/environment/jobslab-web/src/styles/style.js":"4","/home/ubuntu/environment/jobslab-web/src/actions/Auth.js":"5","/home/ubuntu/environment/jobslab-web/src/actions/List.js":"6","/home/ubuntu/environment/jobslab-web/src/PrivateRoute.js":"7","/home/ubuntu/environment/jobslab-web/src/app/general/NotFound.js":"8","/home/ubuntu/environment/jobslab-web/src/app/job/JobList.js":"9","/home/ubuntu/environment/jobslab-web/src/app/job/Job.js":"10","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminHome.js":"11","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminDashboard.js":"12","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminClientList.js":"13","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminCompanyList.js":"14","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminCandidateRegister.js":"15","/home/ubuntu/environment/jobslab-web/src/app/user/UserSettings.js":"16","/home/ubuntu/environment/jobslab-web/src/app/user/Login.js":"17","/home/ubuntu/environment/jobslab-web/src/app/user/PasswordReset.js":"18","/home/ubuntu/environment/jobslab-web/src/app/general/FAQ.js":"19","/home/ubuntu/environment/jobslab-web/src/app/general/ContactUs.js":"20","/home/ubuntu/environment/jobslab-web/src/app/resume/Resume.js":"21","/home/ubuntu/environment/jobslab-web/src/app/application/Application.js":"22","/home/ubuntu/environment/jobslab-web/src/app/general/TermsOfUse.js":"23","/home/ubuntu/environment/jobslab-web/src/app/general/PrivacyPolicy.js":"24","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminJobList.js":"25","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminCandidateList.js":"26","/home/ubuntu/environment/jobslab-web/src/app/job/PostJob.js":"27","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminApplicationList.js":"28","/home/ubuntu/environment/jobslab-web/src/actions/index.js":"29","/home/ubuntu/environment/jobslab-web/src/styles/themes/cyanTheme.js":"30","/home/ubuntu/environment/jobslab-web/src/constants/ActionTypes.js":"31","/home/ubuntu/environment/jobslab-web/src/util/asyncComponent.js":"32","/home/ubuntu/environment/jobslab-web/src/util/ScrollToTop.js":"33","/home/ubuntu/environment/jobslab-web/src/components/sideBar/SideNav/index.js":"34","/home/ubuntu/environment/jobslab-web/src/lngProvider/index.js":"35","/home/ubuntu/environment/jobslab-web/src/components/Footer/index.js":"36","/home/ubuntu/environment/jobslab-web/src/components/Header/index.js":"37","/home/ubuntu/environment/jobslab-web/src/actions/UploadCV.js":"38","/home/ubuntu/environment/jobslab-web/src/actions/Status.js":"39","/home/ubuntu/environment/jobslab-web/src/util/functions.js":"40","/home/ubuntu/environment/jobslab-web/src/reducers/index.js":"41","/home/ubuntu/environment/jobslab-web/src/redux_saga/Saga.js":"42","/home/ubuntu/environment/jobslab-web/src/actions/Notification.js":"43","/home/ubuntu/environment/jobslab-web/src/util/Auxiliary.js":"44","/home/ubuntu/environment/jobslab-web/src/constants/ApplicationState.js":"45","/home/ubuntu/environment/jobslab-web/src/styles/modalStyle.js":"46","/home/ubuntu/environment/jobslab-web/src/components/popup/CandidateApplicationListForm.js":"47","/home/ubuntu/environment/jobslab-web/src/components/sideBar/SideNav/SidenavContent.js":"48","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/index.js":"49","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/index.js":"50","/home/ubuntu/environment/jobslab-web/src/components/ContainerHeader/index.js":"51","/home/ubuntu/environment/jobslab-web/src/reducers/UploadCV.js":"52","/home/ubuntu/environment/jobslab-web/src/reducers/Status.js":"53","/home/ubuntu/environment/jobslab-web/src/reducers/List.js":"54","/home/ubuntu/environment/jobslab-web/src/reducers/Auth.js":"55","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminApplicationFilter/AdminApplicationFilter.js":"56","/home/ubuntu/environment/jobslab-web/src/reducers/Settings.js":"57","/home/ubuntu/environment/jobslab-web/src/components/Widget/index.js":"58","/home/ubuntu/environment/jobslab-web/src/components/Header/CardHeader/index.js":"59","/home/ubuntu/environment/jobslab-web/src/actions/Setting.js":"60","/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/fr_FR.js":"61","/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/es_ES.js":"62","/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/it_IT.js":"63","/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/ar_SA.js":"64","/home/ubuntu/environment/jobslab-web/src/util/IntlMessages.js":"65","/home/ubuntu/environment/jobslab-web/src/constants/PictureUrl.js":"66","/home/ubuntu/environment/jobslab-web/src/components/popup/SignupForm.js":"67","/home/ubuntu/environment/jobslab-web/src/components/popup/LoginForm.js":"68","/home/ubuntu/environment/jobslab-web/src/constants/Status.js":"69","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/CareerItem.js":"70","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/CareerEdit.js":"71","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminApplicationFilter/App.styles.js":"72","/home/ubuntu/environment/jobslab-web/src/components/Header/AppNotification/index.js":"73","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/EducationEdit.js":"74","/home/ubuntu/environment/jobslab-web/src/redux_saga/UploadCV.js":"75","/home/ubuntu/environment/jobslab-web/src/redux_saga/List.js":"76","/home/ubuntu/environment/jobslab-web/src/redux_saga/Auth.js":"77","/home/ubuntu/environment/jobslab-web/src/components/UserInfo/UserInfoPopup.js":"78","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/EducationItem.js":"79","/home/ubuntu/environment/jobslab-web/src/constants/ThemeColors.js":"80","/home/ubuntu/environment/jobslab-web/src/components/Header/CardHeader/CardMenu.js":"81","/home/ubuntu/environment/jobslab-web/src/util/CustomScrollbars.js":"82","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/Detail.js":"83","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/Detail.js":"84","/home/ubuntu/environment/jobslab-web/src/components/Header/AppNotification/NotificationItem.js":"85","/home/ubuntu/environment/jobslab-web/src/components/UserInfo/index.js":"86","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/Detail.styles.js":"87","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/Detail.styles.js":"88","/home/ubuntu/environment/jobslab-web/src/constants/List.js":"89","/home/ubuntu/environment/jobslab-web/src/components/auth/LoginContent.js":"90","/home/ubuntu/environment/jobslab-web/src/components/auth/SignupContent.js":"91","/home/ubuntu/environment/jobslab-web/src/components/SearchBox/index.js":"92","/home/ubuntu/environment/jobslab-web/src/components/SearchBox/functions.js":"93","/home/ubuntu/environment/jobslab-web/src/components/UploadButton/index.js":"94","/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/zh-Hans-CN.js":"95","/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/en-US.js":"96","/home/ubuntu/environment/jobslab-web/src/actions/Function.js":"97","/home/ubuntu/environment/jobslab-web/src/components/CircularProgress/index.js":"98","/home/ubuntu/environment/jobslab-web/src/constants/AutoSuggest.js":"99","/home/ubuntu/environment/jobslab-web/src/components/popup/ApplicationListForm.js":"100","/home/ubuntu/environment/jobslab-web/src/components/popup/OfferForm.js":"101","/home/ubuntu/environment/jobslab-web/src/components/InputNumber/InputSalary.js":"102","/home/ubuntu/environment/jobslab-web/src/components/application/ClientList.js":"103","/home/ubuntu/environment/jobslab-web/src/components/application/JobDescription.js":"104","/home/ubuntu/environment/jobslab-web/src/components/application/CandidateHeader.js":"105","/home/ubuntu/environment/jobslab-web/src/components/application/TimeLine.js":"106","/home/ubuntu/environment/jobslab-web/src/components/profile/SkillTag/index.js":"107","/home/ubuntu/environment/jobslab-web/src/components/profile/Contact/index.js":"108","/home/ubuntu/environment/jobslab-web/src/components/profile/Biography/index.js":"109","/home/ubuntu/environment/jobslab-web/src/components/profile/About/index.js":"110","/home/ubuntu/environment/jobslab-web/src/components/profile/ProfileHeader/index.js":"111","/home/ubuntu/environment/jobslab-web/src/components/settings/PhoneChange.js":"112","/home/ubuntu/environment/jobslab-web/src/components/settings/PasswordChange.js":"113","/home/ubuntu/environment/jobslab-web/src/components/settings/NameChange.js":"114","/home/ubuntu/environment/jobslab-web/src/components/settings/ProfilePictureChange.js":"115","/home/ubuntu/environment/jobslab-web/src/components/register/RegisterConfirmAdmin.js":"116","/home/ubuntu/environment/jobslab-web/src/components/register/ProfilePicture.js":"117","/home/ubuntu/environment/jobslab-web/src/components/register/DetailInfo.js":"118","/home/ubuntu/environment/jobslab-web/src/components/register/BasicInfo.js":"119","/home/ubuntu/environment/jobslab-web/src/components/register/AccountInfo.js":"120","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminCandidateFilter/AdminCandidateFilter.js":"121","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListFilter/AdminJobListFilter.js":"122","/home/ubuntu/environment/jobslab-web/src/components/CardBox/index.js":"123","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminCandidateFilter/App.styles.js":"124","/home/ubuntu/environment/jobslab-web/src/components/AdminTable/index.js":"125","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListFilter/App.styles.js":"126","/home/ubuntu/environment/jobslab-web/src/components/profile/SkillTag/SkillEdit.js":"127","/home/ubuntu/environment/jobslab-web/src/components/profile/Contact/ContactEdit.js":"128","/home/ubuntu/environment/jobslab-web/src/components/profile/About/AboutItem.js":"129","/home/ubuntu/environment/jobslab-web/src/components/profile/About/AboutEdit.js":"130","/home/ubuntu/environment/jobslab-web/src/components/JobContent/index.js":"131","/home/ubuntu/environment/jobslab-web/src/components/JobList/JobLeftList/index.js":"132","/home/ubuntu/environment/jobslab-web/src/components/popup/UserContactForm.js":"133","/home/ubuntu/environment/jobslab-web/src/components/application/TimeLineItem.js":"134","/home/ubuntu/environment/jobslab-web/src/components/popup/InterviewScheduleForm.js":"135","/home/ubuntu/environment/jobslab-web/src/components/WidgetHeader/index.js":"136","/home/ubuntu/environment/jobslab-web/src/components/popup/ProfilePictureEdit.js":"137","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListApplicationFilter/AdminJobListApplicationFilter.js":"138","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListApplicationFilter/App.styles.js":"139","/home/ubuntu/environment/jobslab-web/src/components/popup/ReferralForm.js":"140","/home/ubuntu/environment/jobslab-web/src/components/popup/ReferCandidateForm.js":"141","/home/ubuntu/environment/jobslab-web/src/components/ReportBox/index.js":"142","/home/ubuntu/environment/jobslab-web/src/components/ChartCard/ChartCard.js":"143","/home/ubuntu/environment/jobslab-web/src/components/JobList/SkillTag/index.js":"144","/home/ubuntu/environment/jobslab-web/src/components/JobList/Filter/Filter.js":"145","/home/ubuntu/environment/jobslab-web/src/components/JobList/Filter/App.styles.js":"146","/home/ubuntu/environment/jobslab-web/src/Routes.js":"147","/home/ubuntu/environment/jobslab-web/src/app/general/ComingSoon.js":"148","/home/ubuntu/environment/jobslab-web/src/app/client/ClientDashboard.js":"149","/home/ubuntu/environment/jobslab-web/src/app/candidate/CandidateRegister.js":"150","/home/ubuntu/environment/jobslab-web/src/app/user/Verification.js":"151","/home/ubuntu/environment/jobslab-web/src/app/test/Test.js":"152","/home/ubuntu/environment/jobslab-web/src/app/general/Employer.js":"153","/home/ubuntu/environment/jobslab-web/src/app/general/TestHome.js":"154","/home/ubuntu/environment/jobslab-web/src/app/client/ClientRegister.js":"155","/home/ubuntu/environment/jobslab-web/src/app/client/ClientJobList.js":"156","/home/ubuntu/environment/jobslab-web/src/app/candidate/CandidateDashboard.js":"157","/home/ubuntu/environment/jobslab-web/src/app/general/Home.js":"158","/home/ubuntu/environment/jobslab-web/src/app/general/IconWithTextCard.js":"159","/home/ubuntu/environment/jobslab-web/src/app/general/data.js":"160","/home/ubuntu/environment/jobslab-web/src/app/candidate/data.js":"161","/home/ubuntu/environment/jobslab-web/src/components/popup/Beta.js":"162","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/RewardCard.js":"163","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ReferralCard/index.js":"164","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/InterestedJobCard/index.js":"165","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ReferralCard/ReferralItem.js":"166","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/InterestedJobCard/InterestedJobItem.js":"167","/home/ubuntu/environment/jobslab-web/src/app/candidate/mdata.js":"168","/home/ubuntu/environment/jobslab-web/src/app/general/ItemSecond.js":"169","/home/ubuntu/environment/jobslab-web/src/app/general/ItemFirst.js":"170","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Common/ChartCard.js":"171","/home/ubuntu/environment/jobslab-web/src/components/Chart/SimpleRadarChart.js":"172","/home/ubuntu/environment/jobslab-web/src/components/register/RegisterConfirm.js":"173","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/RecommendedJobCard/index.js":"174","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ApplicationCard/index.js":"175","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Common/ExpertList/index.js":"176","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Common/Profile/index.js":"177","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/SalarySurvey/index.js":"178","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/RecommendedJobCard/RecommendedJobItem.js":"179","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ApplicationCard/ApplicationItem.js":"180","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/SalarySurvey/SalarySurveyChart.js":"181","/home/ubuntu/environment/jobslab-web/src/components/common/ExpandDetailBox/index.js":"182","/home/ubuntu/environment/jobslab-web/src/components/common/ExpandDetailBox/Detail.js":"183","/home/ubuntu/environment/jobslab-web/src/components/common/ExpandDetailBox/Detail.styles.js":"184","/home/ubuntu/environment/jobslab-web/src/components/LinkedinFollow/index.js":"185","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminNewDashboard.js":"186","/home/ubuntu/environment/jobslab-web/src/app/test/TestRecorder.js":"187","/home/ubuntu/environment/jobslab-web/src/components/Recorder/index.js":"188","/home/ubuntu/environment/jobslab-web/src/components/Recorder/MediaUtil.js":"189","/home/ubuntu/environment/jobslab-web/src/components/Recorder/WebCam.js":"190","/home/ubuntu/environment/jobslab-web/src/app/admin/NewDashboard/Detail.js":"191","/home/ubuntu/environment/jobslab-web/src/app/admin/NewDashboard/Detail.styles.js":"192","/home/ubuntu/environment/jobslab-web/src/components/popup/InterviewVideoRequestForm.js":"193","/home/ubuntu/environment/jobslab-web/src/app/application/VideoInterview.js":"194","/home/ubuntu/environment/jobslab-web/src/components/application/InterviewQuestion.js":"195","/home/ubuntu/environment/jobslab-web/src/components/TrueFalseIcon/index.js":"196","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/index.js":"197","/home/ubuntu/environment/jobslab-web/src/components/application/InterviewVideo.js":"198","/home/ubuntu/environment/jobslab-web/src/components/CountdownTimer/index.js":"199","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateListCard/index.js":"200","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateListCard/CandidateListItem.js":"201","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/JobPostListCard/index.js":"202","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/JobPostListCard/JobPostListItem.js":"203","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/WelcomeCard.js":"204","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/ClientProfile.js":"205","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/ChartCard.js":"206","/home/ubuntu/environment/jobslab-web/src/app/client/data.js":"207","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateStatus/index.js":"208","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateStatus/LineIndicator.js":"209","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/YearlyStatus/index.js":"210","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/YearlyStatus/StatusChart.js":"211","/home/ubuntu/environment/jobslab-web/src/components/register/UploadCV.js":"212","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/Competitiveness/CompetitivenessGauge.js":"213","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/Competitiveness/Gauge.js":"214","/home/ubuntu/environment/jobslab-web/src/components/profile/Goal/index.js":"215","/home/ubuntu/environment/jobslab-web/src/components/profile/Goal/GoalEdit.js":"216","/home/ubuntu/environment/jobslab-web/src/app/candidate/CandidateJobAlert.js":"217","/home/ubuntu/environment/jobslab-web/src/app/candidate/AlertTable.js":"218","/home/ubuntu/environment/jobslab-web/src/app/candidate/DataTable.js":"219","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/JobAlertCard.js":"220","/home/ubuntu/environment/jobslab-web/src/components/Drift/index.js":"221","/home/ubuntu/environment/jobslab-web/src/app/general/HomeRemake.js":"222","/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/index.js":"223","/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/TableHeading.js":"224","/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/TableItem.js":"225","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/CmtCardHeader.js":"226","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/CmtCardContent.js":"227","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/index.js":"228","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/CmtCardHeader.style.js":"229","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtHelpers/JssHelper.js":"230","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtDropdownMenu/index.js":"231","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/CmtContentHead/index.js":"232","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/index.js":"233","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/CmtTitle/index.js":"234","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/CmtSubTitle/index.js":"235","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtObjectSummary/index.js":"236","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtAvatar/index.js":"237","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtAvatar/index.style.js":"238","/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/ClientApplicantTable.js":"239","/home/ubuntu/environment/jobslab-web/src/components/popup/ClientCandidateList/index.js":"240","/home/ubuntu/environment/jobslab-web/src/components/popup/Client/CandidateListCard/index.js":"241","/home/ubuntu/environment/jobslab-web/src/components/popup/Client/CandidateListCard/CandidateListItem.js":"242","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/index.tsx":"243","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/index.tsx":"244","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/ultis.ts":"245","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/styles.ts":"246","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/styles.ts":"247","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/Header/index.ts":"248","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/Header/index.ts":"249","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSearch/index.tsx":"250","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionWithholding/index.tsx":"251","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/index.tsx":"252","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSummary/index.tsx":"253","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionCompareAverageTax/index.tsx":"254","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTaxPerIncome/index.tsx":"255","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionEurope/index.tsx":"256","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNorthAmerica/index.tsx":"257","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAsiaPacific/index.tsx":"258","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionLatinAmerica/index.tsx":"259","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAfrica/index.tsx":"260","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionMiddleEast/index.tsx":"261","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNote/index.tsx":"262","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTheTaxberg/index.tsx":"263","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionConvert/index.tsx":"264","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionGetPaidMore/index.tsx":"265","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/Header/Header.tsx":"266","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/constants.ts":"267","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSearch/styles.ts":"268","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionWithholding/styles.ts":"269","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/styles.ts":"270","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSummary/styles.ts":"271","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionCompareAverageTax/styles.ts":"272","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTaxPerIncome/styles.ts":"273","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionEurope/styles.ts":"274","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNorthAmerica/styles.ts":"275","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAsiaPacific/styles.ts":"276","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionLatinAmerica/styles.ts":"277","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAfrica/styles.ts":"278","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionMiddleEast/styles.ts":"279","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNote/styles.ts":"280","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTheTaxberg/styles.ts":"281","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/Header/Header.tsx":"282","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionConvert/styles.ts":"283","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionGetPaidMore/styles.ts":"284","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/Header/styles.ts":"285","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/Header/styles.ts":"286","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/TableCountries/index.tsx":"287","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/TableCountries/styles.ts":"288","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/styles.ts":"289","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/index.tsx":"290","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/index.tsx":"291","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/index.js":"292","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/styles.ts":"293","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/styles.ts":"294","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/styles.ts":"295","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/index.tsx":"296","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/styles.ts":"297","/home/ubuntu/environment/jobslab-web/src/util/MediaUtil.js":"298","/home/ubuntu/environment/jobslab-web_extract/src/index.js":"299","/home/ubuntu/environment/jobslab-web_extract/src/Routes.js":"300","/home/ubuntu/environment/jobslab-web_extract/src/PrivateRoute.js":"301","/home/ubuntu/environment/jobslab-web_extract/src/app/general/NotFound.js":"302","/home/ubuntu/environment/jobslab-web_extract/src/app/job/JobList.js":"303","/home/ubuntu/environment/jobslab-web_extract/src/app/job/Job.js":"304","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ComingSoon.js":"305","/home/ubuntu/environment/jobslab-web_extract/src/app/user/UserSettings.js":"306","/home/ubuntu/environment/jobslab-web_extract/src/app/user/Login.js":"307","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/CandidateJobAlert.js":"308","/home/ubuntu/environment/jobslab-web_extract/src/app/user/PasswordReset.js":"309","/home/ubuntu/environment/jobslab-web_extract/src/app/application/VideoInterview.js":"310","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/CandidateRegister.js":"311","/home/ubuntu/environment/jobslab-web_extract/src/app/user/Verification.js":"312","/home/ubuntu/environment/jobslab-web_extract/src/app/test/Test.js":"313","/home/ubuntu/environment/jobslab-web_extract/src/app/test/TestRecorder.js":"314","/home/ubuntu/environment/jobslab-web_extract/src/app/general/Employer.js":"315","/home/ubuntu/environment/jobslab-web_extract/src/app/general/FAQ.js":"316","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ContactUs.js":"317","/home/ubuntu/environment/jobslab-web_extract/src/app/resume/Resume.js":"318","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TestHome.js":"319","/home/ubuntu/environment/jobslab-web_extract/src/app/application/Application.js":"320","/home/ubuntu/environment/jobslab-web_extract/src/app/general/HomeRemake.js":"321","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TermsOfUse.js":"322","/home/ubuntu/environment/jobslab-web_extract/src/app/general/PrivacyPolicy.js":"323","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/CandidateDashboard.js":"324","/home/ubuntu/environment/jobslab-web_extract/src/actions/Auth.js":"325","/home/ubuntu/environment/jobslab-web_extract/src/actions/List.js":"326","/home/ubuntu/environment/jobslab-web_extract/src/styles/style.js":"327","/home/ubuntu/environment/jobslab-web_extract/src/redux_store/index.js":"328","/home/ubuntu/environment/jobslab-web_extract/src/app/general/Home.js":"329","/home/ubuntu/environment/jobslab-web_extract/src/actions/index.js":"330","/home/ubuntu/environment/jobslab-web_extract/src/styles/themes/cyanTheme.js":"331","/home/ubuntu/environment/jobslab-web_extract/src/app/general/IconWithTextCard.js":"332","/home/ubuntu/environment/jobslab-web_extract/src/constants/ActionTypes.js":"333","/home/ubuntu/environment/jobslab-web_extract/src/util/asyncComponent.js":"334","/home/ubuntu/environment/jobslab-web_extract/src/util/ScrollToTop.js":"335","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/index.tsx":"336","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/index.tsx":"337","/home/ubuntu/environment/jobslab-web_extract/src/components/sideBar/SideNav/index.js":"338","/home/ubuntu/environment/jobslab-web_extract/src/app/general/data.js":"339","/home/ubuntu/environment/jobslab-web_extract/src/util/functions.js":"340","/home/ubuntu/environment/jobslab-web_extract/src/actions/UploadCV.js":"341","/home/ubuntu/environment/jobslab-web_extract/src/constants/PictureUrl.js":"342","/home/ubuntu/environment/jobslab-web_extract/src/actions/Notification.js":"343","/home/ubuntu/environment/jobslab-web_extract/src/constants/ApplicationState.js":"344","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/index.js":"345","/home/ubuntu/environment/jobslab-web_extract/src/components/Footer/index.js":"346","/home/ubuntu/environment/jobslab-web_extract/src/components/Header/index.js":"347","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/Beta.js":"348","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ApplicationListForm.js":"349","/home/ubuntu/environment/jobslab-web_extract/src/components/auth/SignupContent.js":"350","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/styles.ts":"351","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/styles.ts":"352","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/ultis.ts":"353","/home/ubuntu/environment/jobslab-web_extract/src/components/sideBar/SideNav/SidenavContent.js":"354","/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/Saga.js":"355","/home/ubuntu/environment/jobslab-web_extract/src/reducers/index.js":"356","/home/ubuntu/environment/jobslab-web_extract/src/components/Widget/index.js":"357","/home/ubuntu/environment/jobslab-web_extract/src/components/Recorder/index.js":"358","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListFilter/AdminJobListFilter.js":"359","/home/ubuntu/environment/jobslab-web_extract/src/components/Drift/index.js":"360","/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/JobLeftList/index.js":"361","/home/ubuntu/environment/jobslab-web_extract/src/components/JobContent/index.js":"362","/home/ubuntu/environment/jobslab-web_extract/src/components/CircularProgress/index.js":"363","/home/ubuntu/environment/jobslab-web_extract/src/actions/Setting.js":"364","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/Header/index.ts":"365","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionGetPaidMore/index.tsx":"366","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionConvert/index.tsx":"367","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNote/index.tsx":"368","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionMiddleEast/index.tsx":"369","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAfrica/index.tsx":"370","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionLatinAmerica/index.tsx":"371","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAsiaPacific/index.tsx":"372","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNorthAmerica/index.tsx":"373","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionEurope/index.tsx":"374","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTaxPerIncome/index.tsx":"375","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionCompareAverageTax/index.tsx":"376","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSummary/index.tsx":"377","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/Header/index.ts":"378","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/index.tsx":"379","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionWithholding/index.tsx":"380","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSearch/index.tsx":"381","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTheTaxberg/index.tsx":"382","/home/ubuntu/environment/jobslab-web_extract/src/util/CustomScrollbars.js":"383","/home/ubuntu/environment/jobslab-web_extract/src/util/IntlMessages.js":"384","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionEurope/styles.ts":"385","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/Header/Header.tsx":"386","/home/ubuntu/environment/jobslab-web_extract/src/components/CountdownTimer/index.js":"387","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSummary/styles.ts":"388","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/styles.ts":"389","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionCompareAverageTax/styles.ts":"390","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTaxPerIncome/styles.ts":"391","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionWithholding/styles.ts":"392","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTheTaxberg/styles.ts":"393","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/constants.ts":"394","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/Header/Header.tsx":"395","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSearch/styles.ts":"396","/home/ubuntu/environment/jobslab-web_extract/src/components/TrueFalseIcon/index.js":"397","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListApplicationFilter/AdminJobListApplicationFilter.js":"398","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ReferralForm.js":"399","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/SignupForm.js":"400","/home/ubuntu/environment/jobslab-web_extract/src/components/UploadButton/index.js":"401","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/LoginForm.js":"402","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ReferCandidateForm.js":"403","/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/SkillTag/index.js":"404","/home/ubuntu/environment/jobslab-web_extract/src/components/LinkedinFollow/index.js":"405","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListApplicationFilter/App.styles.js":"406","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/Header/styles.ts":"407","/home/ubuntu/environment/jobslab-web_extract/src/components/UserInfo/index.js":"408","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/TableCountries/index.tsx":"409","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/Header/styles.ts":"410","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/TableCountries/styles.ts":"411","/home/ubuntu/environment/jobslab-web_extract/src/components/auth/LoginContent.js":"412","/home/ubuntu/environment/jobslab-web_extract/src/styles/modalStyle.js":"413","/home/ubuntu/environment/jobslab-web_extract/src/components/SearchBox/index.js":"414","/home/ubuntu/environment/jobslab-web_extract/src/components/SearchBox/functions.js":"415","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListFilter/App.styles.js":"416","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNorthAmerica/styles.ts":"417","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAsiaPacific/styles.ts":"418","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionLatinAmerica/styles.ts":"419","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAfrica/styles.ts":"420","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionMiddleEast/styles.ts":"421","/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNote/styles.ts":"422","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionConvert/styles.ts":"423","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionGetPaidMore/styles.ts":"424","/home/ubuntu/environment/jobslab-web_extract/src/components/Recorder/WebCam.js":"425","/home/ubuntu/environment/jobslab-web_extract/src/components/Recorder/MediaUtil.js":"426","/home/ubuntu/environment/jobslab-web_extract/src/components/ChartCard/ChartCard.js":"427","/home/ubuntu/environment/jobslab-web_extract/src/components/ReportBox/index.js":"428","/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/Filter/Filter.js":"429","/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/Filter/App.styles.js":"430","/home/ubuntu/environment/jobslab-web_extract/src/reducers/UploadCV.js":"431","/home/ubuntu/environment/jobslab-web_extract/src/reducers/Status.js":"432","/home/ubuntu/environment/jobslab-web_extract/src/reducers/List.js":"433","/home/ubuntu/environment/jobslab-web_extract/src/reducers/Auth.js":"434","/home/ubuntu/environment/jobslab-web_extract/src/reducers/Settings.js":"435","/home/ubuntu/environment/jobslab-web_extract/src/components/Header/CardHeader/index.js":"436","/home/ubuntu/environment/jobslab-web_extract/src/constants/Status.js":"437","/home/ubuntu/environment/jobslab-web_extract/src/constants/ThemeColors.js":"438","/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/UploadCV.js":"439","/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/List.js":"440","/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/Auth.js":"441","/home/ubuntu/environment/jobslab-web_extract/src/components/UserInfo/UserInfoPopup.js":"442","/home/ubuntu/environment/jobslab-web_extract/src/components/Header/AppNotification/index.js":"443","/home/ubuntu/environment/jobslab-web_extract/src/components/Header/CardHeader/CardMenu.js":"444","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/fr_FR.js":"445","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/es_ES.js":"446","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/it_IT.js":"447","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/ar_SA.js":"448","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/zh-Hans-CN.js":"449","/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/en-US.js":"450","/home/ubuntu/environment/jobslab-web_extract/src/actions/Status.js":"451","/home/ubuntu/environment/jobslab-web_extract/src/actions/Function.js":"452","/home/ubuntu/environment/jobslab-web_extract/src/components/Header/AppNotification/NotificationItem.js":"453","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/data.js":"454","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/mdata.js":"455","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ItemSecond.js":"456","/home/ubuntu/environment/jobslab-web_extract/src/app/general/ItemFirst.js":"457","/home/ubuntu/environment/jobslab-web_extract/src/components/Chart/SimpleRadarChart.js":"458","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/JobAlertCard.js":"459","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/RewardCard.js":"460","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/Competitiveness/CompetitivenessGauge.js":"461","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/Competitiveness/Gauge.js":"462","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Common/ChartCard.js":"463","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/OfferForm.js":"464","/home/ubuntu/environment/jobslab-web_extract/src/util/Auxiliary.js":"465","/home/ubuntu/environment/jobslab-web_extract/src/components/application/ClientList.js":"466","/home/ubuntu/environment/jobslab-web_extract/src/components/application/JobDescription.js":"467","/home/ubuntu/environment/jobslab-web_extract/src/components/application/CandidateHeader.js":"468","/home/ubuntu/environment/jobslab-web_extract/src/components/application/TimeLine.js":"469","/home/ubuntu/environment/jobslab-web_extract/src/components/ContainerHeader/index.js":"470","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/SkillTag/index.js":"471","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Contact/index.js":"472","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Goal/index.js":"473","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Biography/index.js":"474","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/About/index.js":"475","/home/ubuntu/environment/jobslab-web_extract/src/components/register/RegisterConfirm.js":"476","/home/ubuntu/environment/jobslab-web_extract/src/components/register/ProfilePicture.js":"477","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/ProfileHeader/index.js":"478","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/index.js":"479","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ReferralCard/index.js":"480","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/RecommendedJobCard/index.js":"481","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ApplicationCard/index.js":"482","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/InterestedJobCard/index.js":"483","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/SalarySurvey/index.js":"484","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Common/ExpertList/index.js":"485","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Common/Profile/index.js":"486","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/index.js":"487","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/index.js":"488","/home/ubuntu/environment/jobslab-web_extract/src/components/register/DetailInfo.js":"489","/home/ubuntu/environment/jobslab-web_extract/src/components/register/BasicInfo.js":"490","/home/ubuntu/environment/jobslab-web_extract/src/components/application/InterviewVideo.js":"491","/home/ubuntu/environment/jobslab-web_extract/src/components/application/InterviewQuestion.js":"492","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/SalarySurvey/SalarySurveyChart.js":"493","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/InterestedJobCard/InterestedJobItem.js":"494","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ApplicationCard/ApplicationItem.js":"495","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/RecommendedJobCard/RecommendedJobItem.js":"496","/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ReferralCard/ReferralItem.js":"497","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/About/AboutItem.js":"498","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Goal/GoalEdit.js":"499","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Contact/ContactEdit.js":"500","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/SkillTag/SkillEdit.js":"501","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/About/AboutEdit.js":"502","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/CareerItem.js":"503","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/EducationEdit.js":"504","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/CareerEdit.js":"505","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/EducationItem.js":"506","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/styles.ts":"507","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/DataTable.js":"508","/home/ubuntu/environment/jobslab-web_extract/src/components/WidgetHeader/index.js":"509","/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/AlertTable.js":"510","/home/ubuntu/environment/jobslab-web_extract/src/components/CardBox/index.js":"511","/home/ubuntu/environment/jobslab-web_extract/src/components/InputNumber/InputSalary.js":"512","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/InterviewVideoRequestForm.js":"513","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/UserContactForm.js":"514","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/InterviewScheduleForm.js":"515","/home/ubuntu/environment/jobslab-web_extract/src/components/application/TimeLineItem.js":"516","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/Detail.js":"517","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ProfilePictureEdit.js":"518","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/Detail.js":"519","/home/ubuntu/environment/jobslab-web_extract/src/components/register/UploadCV.js":"520","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/index.tsx":"521","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/index.tsx":"522","/home/ubuntu/environment/jobslab-web_extract/src/constants/AutoSuggest.js":"523","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/Detail.styles.js":"524","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/Detail.styles.js":"525","/home/ubuntu/environment/jobslab-web_extract/src/constants/List.js":"526","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/index.js":"527","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/styles.ts":"528","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/styles.ts":"529","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ClientCandidateList/index.js":"530","/home/ubuntu/environment/jobslab-web_extract/src/components/common/ExpandDetailBox/index.js":"531","/home/ubuntu/environment/jobslab-web_extract/src/components/common/ExpandDetailBox/Detail.js":"532","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/index.tsx":"533","/home/ubuntu/environment/jobslab-web_extract/src/components/common/ExpandDetailBox/Detail.styles.js":"534","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/styles.ts":"535","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/Client/CandidateListCard/index.js":"536","/home/ubuntu/environment/jobslab-web_extract/src/components/popup/Client/CandidateListCard/CandidateListItem.js":"537","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/CmtCardContent.js":"538","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/CmtCardHeader.js":"539","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/CmtCardHeader.style.js":"540","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/index.js":"541","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtHelpers/JssHelper.js":"542","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtDropdownMenu/index.js":"543","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/CmtContentHead/index.js":"544","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtAvatar/index.js":"545","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtObjectSummary/index.js":"546","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/index.js":"547","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtAvatar/index.style.js":"548","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/CmtSubTitle/index.js":"549","/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/CmtTitle/index.js":"550","/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/styles.ts":"551","/home/ubuntu/environment/jobslab-web_extract/src/util/MediaUtil.js":"552","/home/ubuntu/environment/jobslab-web_extract/src/components/settings/PhoneChange.js":"553","/home/ubuntu/environment/jobslab-web_extract/src/components/settings/PasswordChange.js":"554","/home/ubuntu/environment/jobslab-web_extract/src/components/settings/NameChange.js":"555","/home/ubuntu/environment/jobslab-web_extract/src/components/settings/ProfilePictureChange.js":"556"},{"size":2259,"mtime":1632584314937,"results":"557","hashOfConfig":"558"},{"size":8350,"mtime":1611473484278,"results":"559","hashOfConfig":"560"},{"size":816,"mtime":1592110631683,"results":"561","hashOfConfig":"558"},{"size":237,"mtime":1592110639560,"results":"562","hashOfConfig":"558"},{"size":1155,"mtime":1592110625739,"results":"563","hashOfConfig":"558"},{"size":3355,"mtime":1593097106652,"results":"564","hashOfConfig":"558"},{"size":3536,"mtime":1624695178416,"results":"565","hashOfConfig":"558"},{"size":915,"mtime":1612180454269,"results":"566","hashOfConfig":"558"},{"size":3463,"mtime":1598544758048,"results":"567","hashOfConfig":"558"},{"size":1846,"mtime":1592110627031,"results":"568","hashOfConfig":"558"},{"size":1901,"mtime":1593875310236,"results":"569","hashOfConfig":"560"},{"size":3002,"mtime":1603372446921,"results":"570","hashOfConfig":"560"},{"size":6966,"mtime":1613835958220,"results":"571","hashOfConfig":"560"},{"size":6985,"mtime":1613836027093,"results":"572","hashOfConfig":"560"},{"size":5285,"mtime":1624689975027,"results":"573","hashOfConfig":"560"},{"size":1681,"mtime":1592110627207,"results":"574","hashOfConfig":"558"},{"size":7142,"mtime":1624709554813,"results":"575","hashOfConfig":"558"},{"size":4611,"mtime":1612181085623,"results":"576","hashOfConfig":"558"},{"size":9578,"mtime":1612180289318,"results":"577","hashOfConfig":"558"},{"size":11910,"mtime":1612180419099,"results":"578","hashOfConfig":"558"},{"size":11784,"mtime":1624712596097,"results":"579","hashOfConfig":"558"},{"size":9297,"mtime":1624993634921,"results":"580","hashOfConfig":"558"},{"size":16961,"mtime":1612180516493,"results":"581","hashOfConfig":"558"},{"size":18822,"mtime":1612180494660,"results":"582","hashOfConfig":"558"},{"size":22879,"mtime":1616336119583,"results":"583","hashOfConfig":"560"},{"size":23619,"mtime":1616336740914,"results":"584","hashOfConfig":"560"},{"size":31370,"mtime":1626784146408,"results":"585","hashOfConfig":"560"},{"size":26554,"mtime":1605542269800,"results":"586","hashOfConfig":"560"},{"size":247,"mtime":1592110625739,"results":"587","hashOfConfig":"558"},{"size":812,"mtime":1631441898330,"results":"588","hashOfConfig":"558"},{"size":8545,"mtime":1592110630487,"results":"589","hashOfConfig":"558"},{"size":1308,"mtime":1592110640552,"results":"590","hashOfConfig":"558"},{"size":366,"mtime":1592110640688,"results":"591","hashOfConfig":"558"},{"size":2216,"mtime":1592110630319,"results":"592","hashOfConfig":"558"},{"size":637,"mtime":1592110630939,"results":"593","hashOfConfig":"558"},{"size":1758,"mtime":1618755673059,"results":"594","hashOfConfig":"558"},{"size":14227,"mtime":1632571451366,"results":"595","hashOfConfig":"558"},{"size":528,"mtime":1592110625935,"results":"596","hashOfConfig":"558"},{"size":339,"mtime":1592110625895,"results":"597","hashOfConfig":"558"},{"size":927,"mtime":1630428346377,"results":"598","hashOfConfig":"558"},{"size":503,"mtime":1592110631395,"results":"599","hashOfConfig":"558"},{"size":1753,"mtime":1593097960409,"results":"600","hashOfConfig":"558"},{"size":1512,"mtime":1592110625879,"results":"601","hashOfConfig":"558"},{"size":75,"mtime":1592110640560,"results":"602","hashOfConfig":"558"},{"size":697,"mtime":1617793541294,"results":"603","hashOfConfig":"558"},{"size":3736,"mtime":1592110637924,"results":"604","hashOfConfig":"558"},{"size":8526,"mtime":1613836325558,"results":"605","hashOfConfig":"560"},{"size":32990,"mtime":1632569373574,"results":"606","hashOfConfig":"558"},{"size":3613,"mtime":1624689024660,"results":"607","hashOfConfig":"558"},{"size":3913,"mtime":1624689009105,"results":"608","hashOfConfig":"558"},{"size":1302,"mtime":1592110627667,"results":"609","hashOfConfig":"558"},{"size":753,"mtime":1592110631547,"results":"610","hashOfConfig":"558"},{"size":718,"mtime":1592110631535,"results":"611","hashOfConfig":"558"},{"size":5177,"mtime":1626189434110,"results":"612","hashOfConfig":"558"},{"size":2537,"mtime":1592110631403,"results":"613","hashOfConfig":"558"},{"size":13125,"mtime":1605542400787,"results":"614","hashOfConfig":"560"},{"size":2255,"mtime":1592110631535,"results":"615","hashOfConfig":"558"},{"size":583,"mtime":1592110630459,"results":"616","hashOfConfig":"558"},{"size":1580,"mtime":1592110628263,"results":"617","hashOfConfig":"558"},{"size":1167,"mtime":1592110625891,"results":"618","hashOfConfig":"558"},{"size":236,"mtime":1592110630755,"results":"619","hashOfConfig":"558"},{"size":233,"mtime":1592110630751,"results":"620","hashOfConfig":"558"},{"size":236,"mtime":1592110630919,"results":"621","hashOfConfig":"558"},{"size":236,"mtime":1592110630747,"results":"622","hashOfConfig":"558"},{"size":220,"mtime":1592110640560,"results":"623","hashOfConfig":"558"},{"size":566,"mtime":1612182366563,"results":"624","hashOfConfig":"558"},{"size":3064,"mtime":1603371305719,"results":"625","hashOfConfig":"558"},{"size":6462,"mtime":1597939349545,"results":"626","hashOfConfig":"558"},{"size":102,"mtime":1592110630611,"results":"627","hashOfConfig":"558"},{"size":7179,"mtime":1624691667274,"results":"628","hashOfConfig":"558"},{"size":14671,"mtime":1624691287425,"results":"629","hashOfConfig":"558"},{"size":1242,"mtime":1592110628775,"results":"630","hashOfConfig":"560"},{"size":1248,"mtime":1592110628263,"results":"631","hashOfConfig":"558"},{"size":7524,"mtime":1624693085160,"results":"632","hashOfConfig":"558"},{"size":868,"mtime":1592110631723,"results":"633","hashOfConfig":"558"},{"size":3740,"mtime":1593097459507,"results":"634","hashOfConfig":"558"},{"size":656,"mtime":1592110631547,"results":"635","hashOfConfig":"558"},{"size":2755,"mtime":1592110630459,"results":"636","hashOfConfig":"558"},{"size":6007,"mtime":1597581736094,"results":"637","hashOfConfig":"558"},{"size":665,"mtime":1592110630611,"results":"638","hashOfConfig":"558"},{"size":1060,"mtime":1592110628263,"results":"639","hashOfConfig":"558"},{"size":519,"mtime":1592110640556,"results":"640","hashOfConfig":"558"},{"size":1164,"mtime":1592110629439,"results":"641","hashOfConfig":"558"},{"size":1164,"mtime":1592110629603,"results":"642","hashOfConfig":"558"},{"size":839,"mtime":1592110628263,"results":"643","hashOfConfig":"558"},{"size":3434,"mtime":1592110630451,"results":"644","hashOfConfig":"558"},{"size":1242,"mtime":1592110629451,"results":"645","hashOfConfig":"558"},{"size":1242,"mtime":1592110629603,"results":"646","hashOfConfig":"558"},{"size":1531,"mtime":1592110630607,"results":"647","hashOfConfig":"558"},{"size":6074,"mtime":1597086737493,"results":"648","hashOfConfig":"558"},{"size":19561,"mtime":1603371257646,"results":"649","hashOfConfig":"558"},{"size":5177,"mtime":1630170321829,"results":"650","hashOfConfig":"558"},{"size":577,"mtime":1592110630119,"results":"651","hashOfConfig":"558"},{"size":1144,"mtime":1592110630379,"results":"652","hashOfConfig":"558"},{"size":241,"mtime":1592110630919,"results":"653","hashOfConfig":"558"},{"size":236,"mtime":1592110630751,"results":"654","hashOfConfig":"558"},{"size":474,"mtime":1608301987918,"results":"655","hashOfConfig":"558"},{"size":323,"mtime":1592110627663,"results":"656","hashOfConfig":"558"},{"size":36,"mtime":1592110630603,"results":"657","hashOfConfig":"558"},{"size":15678,"mtime":1613835230425,"results":"658","hashOfConfig":"558"},{"size":5979,"mtime":1617793364787,"results":"659","hashOfConfig":"558"},{"size":1505,"mtime":1592110628467,"results":"660","hashOfConfig":"558"},{"size":2460,"mtime":1592110627347,"results":"661","hashOfConfig":"558"},{"size":2186,"mtime":1605721693220,"results":"662","hashOfConfig":"558"},{"size":3932,"mtime":1616326434630,"results":"663","hashOfConfig":"558"},{"size":12481,"mtime":1624993808061,"results":"664","hashOfConfig":"558"},{"size":3568,"mtime":1624712983275,"results":"665","hashOfConfig":"558"},{"size":3603,"mtime":1597547114179,"results":"666","hashOfConfig":"558"},{"size":4983,"mtime":1624688941425,"results":"667","hashOfConfig":"558"},{"size":4586,"mtime":1624697187122,"results":"668","hashOfConfig":"558"},{"size":13146,"mtime":1625074137759,"results":"669","hashOfConfig":"558"},{"size":3475,"mtime":1597086078290,"results":"670","hashOfConfig":"558"},{"size":3960,"mtime":1597086001258,"results":"671","hashOfConfig":"558"},{"size":3480,"mtime":1597085695823,"results":"672","hashOfConfig":"558"},{"size":5118,"mtime":1592110630299,"results":"673","hashOfConfig":"558"},{"size":2404,"mtime":1598276247925,"results":"674","hashOfConfig":"560"},{"size":2414,"mtime":1624687622837,"results":"675","hashOfConfig":"558"},{"size":7474,"mtime":1624689277855,"results":"676","hashOfConfig":"558"},{"size":15090,"mtime":1624686036709,"results":"677","hashOfConfig":"558"},{"size":11046,"mtime":1597931191768,"results":"678","hashOfConfig":"560"},{"size":13086,"mtime":1605542420595,"results":"679","hashOfConfig":"560"},{"size":12098,"mtime":1610890982504,"results":"680","hashOfConfig":"558"},{"size":1080,"mtime":1592110627487,"results":"681","hashOfConfig":"558"},{"size":1242,"mtime":1592110628895,"results":"682","hashOfConfig":"560"},{"size":2259,"mtime":1592110627327,"results":"683","hashOfConfig":"560"},{"size":1242,"mtime":1592110628907,"results":"684","hashOfConfig":"558"},{"size":6384,"mtime":1615309909832,"results":"685","hashOfConfig":"558"},{"size":4917,"mtime":1597581713182,"results":"686","hashOfConfig":"558"},{"size":654,"mtime":1592110629299,"results":"687","hashOfConfig":"558"},{"size":13094,"mtime":1624991131641,"results":"688","hashOfConfig":"558"},{"size":36303,"mtime":1624994601635,"results":"689","hashOfConfig":"558"},{"size":23597,"mtime":1618409858267,"results":"690","hashOfConfig":"558"},{"size":4828,"mtime":1633872871450,"results":"691","hashOfConfig":"558"},{"size":15408,"mtime":1624993064947,"results":"692","hashOfConfig":"558"},{"size":8959,"mtime":1617792224797,"results":"693","hashOfConfig":"558"},{"size":498,"mtime":1592110630475,"results":"694","hashOfConfig":"558"},{"size":5921,"mtime":1612608326912,"results":"695","hashOfConfig":"558"},{"size":6822,"mtime":1607834863940,"results":"696","hashOfConfig":"558"},{"size":1242,"mtime":1592110628775,"results":"697","hashOfConfig":"558"},{"size":7291,"mtime":1595805557603,"results":"698","hashOfConfig":"558"},{"size":13471,"mtime":1605704463351,"results":"699","hashOfConfig":"558"},{"size":885,"mtime":1592110630015,"results":"700","hashOfConfig":"558"},{"size":337,"mtime":1592110627571,"results":"701","hashOfConfig":"558"},{"size":1961,"mtime":1592110628683,"results":"702","hashOfConfig":"558"},{"size":13991,"mtime":1632057675190,"results":"703","hashOfConfig":"558"},{"size":1242,"mtime":1592110628487,"results":"704","hashOfConfig":"558"},{"size":10055,"mtime":1633872454519,"results":"705","hashOfConfig":"558"},{"size":3174,"mtime":1612182130926,"results":"706","hashOfConfig":"558"},{"size":23647,"mtime":1633872383986,"results":"707","hashOfConfig":"558"},{"size":5122,"mtime":1624711114633,"results":"708","hashOfConfig":"558"},{"size":2837,"mtime":1612181332792,"results":"709","hashOfConfig":"558"},{"size":7969,"mtime":1630133156084,"results":"710","hashOfConfig":"558"},{"size":10766,"mtime":1612182229672,"results":"711","hashOfConfig":"558"},{"size":12726,"mtime":1592110626959,"results":"712","hashOfConfig":"558"},{"size":11915,"mtime":1612181018857,"results":"713","hashOfConfig":"558"},{"size":18312,"mtime":1605542312745,"results":"714","hashOfConfig":"558"},{"size":18771,"mtime":1632564150670,"results":"715","hashOfConfig":"558"},{"size":29221,"mtime":1630424719389,"results":"716","hashOfConfig":"558"},{"size":686,"mtime":1592110626747,"results":"717","hashOfConfig":"558"},{"size":6884,"mtime":1592110626563,"results":"718","hashOfConfig":"558"},{"size":323,"mtime":1592110626291,"results":"719","hashOfConfig":"558"},{"size":3161,"mtime":1612181712320,"results":"720","hashOfConfig":"558"},{"size":865,"mtime":1592110627871,"results":"721","hashOfConfig":"558"},{"size":2214,"mtime":1612181517334,"results":"722","hashOfConfig":"558"},{"size":4092,"mtime":1612181424907,"results":"723","hashOfConfig":"558"},{"size":2340,"mtime":1594696483033,"results":"724","hashOfConfig":"558"},{"size":2781,"mtime":1594696446948,"results":"725","hashOfConfig":"558"},{"size":3259,"mtime":1592110626291,"results":"726","hashOfConfig":"558"},{"size":2503,"mtime":1592110626743,"results":"727","hashOfConfig":"558"},{"size":1857,"mtime":1592110626743,"results":"728","hashOfConfig":"558"},{"size":2018,"mtime":1592110628067,"results":"729","hashOfConfig":"558"},{"size":791,"mtime":1592110627571,"results":"730","hashOfConfig":"558"},{"size":3032,"mtime":1624710860159,"results":"731","hashOfConfig":"558"},{"size":7988,"mtime":1627481470565,"results":"732","hashOfConfig":"558"},{"size":5289,"mtime":1630169840227,"results":"733","hashOfConfig":"558"},{"size":2849,"mtime":1592110628159,"results":"734","hashOfConfig":"558"},{"size":2442,"mtime":1624696947672,"results":"735","hashOfConfig":"558"},{"size":5057,"mtime":1592110627991,"results":"736","hashOfConfig":"558"},{"size":3906,"mtime":1592110627871,"results":"737","hashOfConfig":"558"},{"size":2241,"mtime":1630170702190,"results":"738","hashOfConfig":"558"},{"size":2977,"mtime":1592110628067,"results":"739","hashOfConfig":"558"},{"size":1411,"mtime":1608981665705,"results":"740","hashOfConfig":"558"},{"size":1245,"mtime":1608981189616,"results":"741","hashOfConfig":"558"},{"size":1305,"mtime":1608981657897,"results":"742","hashOfConfig":"558"},{"size":712,"mtime":1609334208352,"results":"743","hashOfConfig":"558"},{"size":23837,"mtime":1611120288571,"results":"744","hashOfConfig":"560"},{"size":318,"mtime":1611394553921,"results":"745","hashOfConfig":"558"},{"size":9493,"mtime":1619885243255,"results":"746","hashOfConfig":"558"},{"size":444,"mtime":1610890608652,"results":"747","hashOfConfig":"558"},{"size":532,"mtime":1611402924008,"results":"748","hashOfConfig":"558"},{"size":1164,"mtime":1592110629439,"results":"749","hashOfConfig":"560"},{"size":1242,"mtime":1592110629451,"results":"750","hashOfConfig":"560"},{"size":7765,"mtime":1611401878466,"results":"751","hashOfConfig":"558"},{"size":7938,"mtime":1619935553079,"results":"752","hashOfConfig":"558"},{"size":1744,"mtime":1611990270970,"results":"753","hashOfConfig":"558"},{"size":403,"mtime":1613835444846,"results":"754","hashOfConfig":"558"},{"size":9731,"mtime":1633792149047,"results":"755","hashOfConfig":"558"},{"size":2764,"mtime":1619944736850,"results":"756","hashOfConfig":"558"},{"size":3091,"mtime":1617457744062,"results":"757","hashOfConfig":"558"},{"size":8016,"mtime":1630250344536,"results":"758","hashOfConfig":"558"},{"size":3627,"mtime":1630939801218,"results":"759","hashOfConfig":"558"},{"size":3878,"mtime":1632052732521,"results":"760","hashOfConfig":"558"},{"size":2878,"mtime":1632569345674,"results":"761","hashOfConfig":"558"},{"size":1079,"mtime":1620550845281,"results":"762","hashOfConfig":"558"},{"size":801,"mtime":1620586876018,"results":"763","hashOfConfig":"558"},{"size":322,"mtime":1620536203734,"results":"764","hashOfConfig":"558"},{"size":1694,"mtime":1620548432509,"results":"765","hashOfConfig":"558"},{"size":2732,"mtime":1632571286851,"results":"766","hashOfConfig":"558"},{"size":800,"mtime":1620538885278,"results":"767","hashOfConfig":"558"},{"size":2129,"mtime":1632842054528,"results":"768","hashOfConfig":"558"},{"size":2159,"mtime":1620572890607,"results":"769","hashOfConfig":"558"},{"size":1478,"mtime":1624687976495,"results":"770","hashOfConfig":"558"},{"size":3133,"mtime":1624685600463,"results":"771","hashOfConfig":"558"},{"size":5006,"mtime":1624894933689,"results":"772","hashOfConfig":"558"},{"size":2086,"mtime":1630329344688,"results":"773","hashOfConfig":"558"},{"size":3065,"mtime":1624714094267,"results":"774","hashOfConfig":"558"},{"size":7505,"mtime":1627484586866,"results":"775","hashOfConfig":"558"},{"size":11002,"mtime":1627215519185,"results":"776","hashOfConfig":"558"},{"size":3651,"mtime":1627314314589,"results":"777","hashOfConfig":"558"},{"size":878,"mtime":1627483420827,"results":"778","hashOfConfig":"558"},{"size":3948,"mtime":1629895072314,"results":"779","hashOfConfig":"558"},{"size":23465,"mtime":1631120352037,"results":"780","hashOfConfig":"558"},{"size":2131,"mtime":1632056959082,"results":"781","hashOfConfig":"558"},{"size":1047,"mtime":1631453057804,"results":"782","hashOfConfig":"558"},{"size":6926,"mtime":1632058013081,"results":"783","hashOfConfig":"558"},{"size":5163,"mtime":1616317344040,"results":"784","hashOfConfig":"558"},{"size":497,"mtime":1616317343848,"results":"785","hashOfConfig":"558"},{"size":2381,"mtime":1616317344232,"results":"786","hashOfConfig":"558"},{"size":2611,"mtime":1616317344040,"results":"787","hashOfConfig":"558"},{"size":3180,"mtime":1631437551377,"results":"788","hashOfConfig":"558"},{"size":1991,"mtime":1616317344996,"results":"789","hashOfConfig":"558"},{"size":2118,"mtime":1616317352704,"results":"790","hashOfConfig":"558"},{"size":115,"mtime":1616317352876,"results":"791","hashOfConfig":"558"},{"size":571,"mtime":1616317352876,"results":"792","hashOfConfig":"558"},{"size":578,"mtime":1616317352704,"results":"793","hashOfConfig":"558"},{"size":4406,"mtime":1632048785816,"results":"794","hashOfConfig":"558"},{"size":1764,"mtime":1616317342156,"results":"795","hashOfConfig":"558"},{"size":1573,"mtime":1616317342332,"results":"796","hashOfConfig":"558"},{"size":941,"mtime":1632055455093,"results":"797","hashOfConfig":"558"},{"size":10664,"mtime":1632303471511,"results":"798","hashOfConfig":"558"},{"size":2759,"mtime":1632305885872,"results":"799","hashOfConfig":"558"},{"size":3180,"mtime":1632569212639,"results":"800","hashOfConfig":"558"},{"size":6842,"mtime":1632567579499,"results":"801","hashOfConfig":"558"},{"size":6792,"mtime":1632568806182,"results":"802","hashOfConfig":"558"},{"size":5556,"mtime":1632289731000,"results":"803","hashOfConfig":"558"},{"size":482,"mtime":1631711463000,"results":"804","hashOfConfig":"558"},{"size":284,"mtime":1632151862000,"results":"805","hashOfConfig":"558"},{"size":54,"mtime":1632150165000,"results":"806","hashOfConfig":"558"},{"size":54,"mtime":1632151245000,"results":"807","hashOfConfig":"558"},{"size":2868,"mtime":1632567378704,"results":"808","hashOfConfig":"558"},{"size":7893,"mtime":1632561182314,"results":"809","hashOfConfig":"558"},{"size":2207,"mtime":1632568858774,"results":"810","hashOfConfig":"558"},{"size":4050,"mtime":1632325556000,"results":"811","hashOfConfig":"558"},{"size":2674,"mtime":1632146910000,"results":"812","hashOfConfig":"558"},{"size":1678,"mtime":1632108779000,"results":"813","hashOfConfig":"558"},{"size":3385,"mtime":1631448852000,"results":"814","hashOfConfig":"558"},{"size":793,"mtime":1631448857000,"results":"815","hashOfConfig":"558"},{"size":2539,"mtime":1631449575000,"results":"816","hashOfConfig":"558"},{"size":2029,"mtime":1631449993000,"results":"817","hashOfConfig":"558"},{"size":2011,"mtime":1631450356000,"results":"818","hashOfConfig":"558"},{"size":1654,"mtime":1631450638000,"results":"819","hashOfConfig":"558"},{"size":748,"mtime":1632196087000,"results":"820","hashOfConfig":"558"},{"size":10457,"mtime":1632566217576,"results":"821","hashOfConfig":"558"},{"size":5062,"mtime":1632568934865,"results":"822","hashOfConfig":"558"},{"size":825,"mtime":1632569085728,"results":"823","hashOfConfig":"558"},{"size":708,"mtime":1632150165000,"results":"824","hashOfConfig":"558"},{"size":1566,"mtime":1632188282000,"results":"825","hashOfConfig":"558"},{"size":4255,"mtime":1632566711528,"results":"826","hashOfConfig":"558"},{"size":4280,"mtime":1632566751532,"results":"827","hashOfConfig":"558"},{"size":1150,"mtime":1632566705856,"results":"828","hashOfConfig":"558"},{"size":882,"mtime":1632566716876,"results":"829","hashOfConfig":"558"},{"size":974,"mtime":1632566686561,"results":"830","hashOfConfig":"558"},{"size":1339,"mtime":1632566731592,"results":"831","hashOfConfig":"558"},{"size":831,"mtime":1632566689993,"results":"832","hashOfConfig":"558"},{"size":810,"mtime":1632566702641,"results":"833","hashOfConfig":"558"},{"size":831,"mtime":1632566683025,"results":"834","hashOfConfig":"558"},{"size":831,"mtime":1632566696181,"results":"835","hashOfConfig":"558"},{"size":831,"mtime":1632566674221,"results":"836","hashOfConfig":"558"},{"size":831,"mtime":1632566699233,"results":"837","hashOfConfig":"558"},{"size":449,"mtime":1631969872000,"results":"838","hashOfConfig":"558"},{"size":5058,"mtime":1632563835314,"results":"839","hashOfConfig":"558"},{"size":828,"mtime":1632568558068,"results":"840","hashOfConfig":"558"},{"size":2450,"mtime":1632569072312,"results":"841","hashOfConfig":"558"},{"size":1941,"mtime":1632569121652,"results":"842","hashOfConfig":"558"},{"size":655,"mtime":1632567659622,"results":"843","hashOfConfig":"558"},{"size":697,"mtime":1632568832442,"results":"844","hashOfConfig":"558"},{"size":3383,"mtime":1632561934799,"results":"845","hashOfConfig":"558"},{"size":4039,"mtime":1632566762855,"results":"846","hashOfConfig":"558"},{"size":1167,"mtime":1633616515141,"results":"847","hashOfConfig":"558"},{"size":1110,"mtime":1633616514833,"results":"848","hashOfConfig":"558"},{"size":4220,"mtime":1635434410038,"results":"849","hashOfConfig":"558"},{"size":8085,"mtime":1635434154431,"results":"850","hashOfConfig":"558"},{"size":1194,"mtime":1633616514833,"results":"851","hashOfConfig":"558"},{"size":3852,"mtime":1635434540383,"results":"852","hashOfConfig":"558"},{"size":3558,"mtime":1635435048398,"results":"853","hashOfConfig":"558"},{"size":1066,"mtime":1633616514673,"results":"854","hashOfConfig":"558"},{"size":1043,"mtime":1633616514673,"results":"855","hashOfConfig":"558"},{"size":444,"mtime":1610890608652,"results":"856","hashOfConfig":"558"},{"size":2259,"mtime":1632584314937,"results":"857","hashOfConfig":"858"},{"size":9373,"mtime":1635685843682,"results":"859","hashOfConfig":"858"},{"size":3536,"mtime":1624695178416,"results":"860","hashOfConfig":"858"},{"size":915,"mtime":1612180454269,"results":"861","hashOfConfig":"858"},{"size":3463,"mtime":1598544758048,"results":"862","hashOfConfig":"858"},{"size":1846,"mtime":1592110627031,"results":"863","hashOfConfig":"858"},{"size":3174,"mtime":1612182130926,"results":"864","hashOfConfig":"858"},{"size":1681,"mtime":1592110627207,"results":"865","hashOfConfig":"858"},{"size":7142,"mtime":1624709554813,"results":"866","hashOfConfig":"858"},{"size":7505,"mtime":1627484586866,"results":"867","hashOfConfig":"858"},{"size":4611,"mtime":1612181085623,"results":"868","hashOfConfig":"858"},{"size":7938,"mtime":1619935553079,"results":"869","hashOfConfig":"858"},{"size":5122,"mtime":1624711114633,"results":"870","hashOfConfig":"858"},{"size":2837,"mtime":1612181332792,"results":"871","hashOfConfig":"858"},{"size":7969,"mtime":1630133156084,"results":"872","hashOfConfig":"858"},{"size":318,"mtime":1611394553921,"results":"873","hashOfConfig":"858"},{"size":10766,"mtime":1612182229672,"results":"874","hashOfConfig":"858"},{"size":9578,"mtime":1612180289318,"results":"875","hashOfConfig":"858"},{"size":11910,"mtime":1612180419099,"results":"876","hashOfConfig":"858"},{"size":11784,"mtime":1624712596097,"results":"877","hashOfConfig":"858"},{"size":12726,"mtime":1592110626959,"results":"878","hashOfConfig":"858"},{"size":9297,"mtime":1624993634921,"results":"879","hashOfConfig":"858"},{"size":23465,"mtime":1631120352037,"results":"880","hashOfConfig":"858"},{"size":16961,"mtime":1612180516493,"results":"881","hashOfConfig":"858"},{"size":18822,"mtime":1612180494660,"results":"882","hashOfConfig":"858"},{"size":18771,"mtime":1632564150670,"results":"883","hashOfConfig":"858"},{"size":1155,"mtime":1592110625739,"results":"884","hashOfConfig":"858"},{"size":3355,"mtime":1593097106652,"results":"885","hashOfConfig":"858"},{"size":237,"mtime":1592110639560,"results":"886","hashOfConfig":"858"},{"size":816,"mtime":1592110631683,"results":"887","hashOfConfig":"858"},{"size":29221,"mtime":1630424719389,"results":"888","hashOfConfig":"858"},{"size":247,"mtime":1592110625739,"results":"889","hashOfConfig":"858"},{"size":812,"mtime":1631441898330,"results":"890","hashOfConfig":"858"},{"size":686,"mtime":1592110626747,"results":"891","hashOfConfig":"858"},{"size":8545,"mtime":1592110630487,"results":"892","hashOfConfig":"858"},{"size":1308,"mtime":1592110640552,"results":"893","hashOfConfig":"858"},{"size":366,"mtime":1592110640688,"results":"894","hashOfConfig":"858"},{"size":6842,"mtime":1632567579499,"results":"895","hashOfConfig":"858"},{"size":6792,"mtime":1632568806182,"results":"896","hashOfConfig":"858"},{"size":2216,"mtime":1592110630319,"results":"897","hashOfConfig":"858"},{"size":6884,"mtime":1592110626563,"results":"898","hashOfConfig":"858"},{"size":927,"mtime":1630428346377,"results":"899","hashOfConfig":"858"},{"size":528,"mtime":1592110625935,"results":"900","hashOfConfig":"858"},{"size":566,"mtime":1612182366563,"results":"901","hashOfConfig":"858"},{"size":1512,"mtime":1592110625879,"results":"902","hashOfConfig":"858"},{"size":697,"mtime":1617793541294,"results":"903","hashOfConfig":"858"},{"size":637,"mtime":1592110630939,"results":"904","hashOfConfig":"858"},{"size":1758,"mtime":1618755673059,"results":"905","hashOfConfig":"858"},{"size":14227,"mtime":1632571451366,"results":"906","hashOfConfig":"858"},{"size":3161,"mtime":1612181712320,"results":"907","hashOfConfig":"858"},{"size":15678,"mtime":1613835230425,"results":"908","hashOfConfig":"858"},{"size":19561,"mtime":1603371257646,"results":"909","hashOfConfig":"858"},{"size":284,"mtime":1632151862000,"results":"910","hashOfConfig":"858"},{"size":482,"mtime":1631711463000,"results":"911","hashOfConfig":"858"},{"size":5556,"mtime":1632289731000,"results":"912","hashOfConfig":"858"},{"size":32990,"mtime":1632569373574,"results":"913","hashOfConfig":"858"},{"size":1753,"mtime":1593097960409,"results":"914","hashOfConfig":"858"},{"size":503,"mtime":1592110631395,"results":"915","hashOfConfig":"858"},{"size":583,"mtime":1592110630459,"results":"916","hashOfConfig":"858"},{"size":9493,"mtime":1619885243255,"results":"917","hashOfConfig":"858"},{"size":12098,"mtime":1610890982504,"results":"918","hashOfConfig":"858"},{"size":3948,"mtime":1629895072314,"results":"919","hashOfConfig":"858"},{"size":23597,"mtime":1618409858267,"results":"920","hashOfConfig":"858"},{"size":36303,"mtime":1624994601635,"results":"921","hashOfConfig":"858"},{"size":323,"mtime":1592110627663,"results":"922","hashOfConfig":"858"},{"size":1167,"mtime":1592110625891,"results":"923","hashOfConfig":"858"},{"size":54,"mtime":1632151245000,"results":"924","hashOfConfig":"858"},{"size":825,"mtime":1632569085728,"results":"925","hashOfConfig":"858"},{"size":5062,"mtime":1632568934865,"results":"926","hashOfConfig":"858"},{"size":748,"mtime":1632196087000,"results":"927","hashOfConfig":"858"},{"size":1654,"mtime":1631450638000,"results":"928","hashOfConfig":"858"},{"size":2011,"mtime":1631450356000,"results":"929","hashOfConfig":"858"},{"size":2029,"mtime":1631449993000,"results":"930","hashOfConfig":"858"},{"size":2539,"mtime":1631449575000,"results":"931","hashOfConfig":"858"},{"size":793,"mtime":1631448857000,"results":"932","hashOfConfig":"858"},{"size":3385,"mtime":1631448852000,"results":"933","hashOfConfig":"858"},{"size":1678,"mtime":1632108779000,"results":"934","hashOfConfig":"858"},{"size":2674,"mtime":1632146910000,"results":"935","hashOfConfig":"858"},{"size":4050,"mtime":1632325556000,"results":"936","hashOfConfig":"858"},{"size":54,"mtime":1632150165000,"results":"937","hashOfConfig":"858"},{"size":2207,"mtime":1632568858774,"results":"938","hashOfConfig":"858"},{"size":7893,"mtime":1632561182314,"results":"939","hashOfConfig":"858"},{"size":2868,"mtime":1632567378704,"results":"940","hashOfConfig":"858"},{"size":10457,"mtime":1632566217576,"results":"941","hashOfConfig":"858"},{"size":519,"mtime":1592110640556,"results":"942","hashOfConfig":"858"},{"size":220,"mtime":1592110640560,"results":"943","hashOfConfig":"858"},{"size":831,"mtime":1632566689993,"results":"944","hashOfConfig":"858"},{"size":828,"mtime":1632568558068,"results":"945","hashOfConfig":"858"},{"size":3091,"mtime":1617457744062,"results":"946","hashOfConfig":"858"},{"size":882,"mtime":1632566716876,"results":"947","hashOfConfig":"858"},{"size":1150,"mtime":1632566705856,"results":"948","hashOfConfig":"858"},{"size":974,"mtime":1632566686561,"results":"949","hashOfConfig":"858"},{"size":1339,"mtime":1632566731592,"results":"950","hashOfConfig":"858"},{"size":4280,"mtime":1632566751532,"results":"951","hashOfConfig":"858"},{"size":5058,"mtime":1632563835314,"results":"952","hashOfConfig":"858"},{"size":1566,"mtime":1632188282000,"results":"953","hashOfConfig":"858"},{"size":708,"mtime":1632150165000,"results":"954","hashOfConfig":"858"},{"size":4255,"mtime":1632566711528,"results":"955","hashOfConfig":"858"},{"size":403,"mtime":1613835444846,"results":"956","hashOfConfig":"858"},{"size":6822,"mtime":1607834863940,"results":"957","hashOfConfig":"858"},{"size":7291,"mtime":1595805557603,"results":"958","hashOfConfig":"858"},{"size":3064,"mtime":1603371305719,"results":"959","hashOfConfig":"858"},{"size":1144,"mtime":1592110630379,"results":"960","hashOfConfig":"858"},{"size":6462,"mtime":1597939349545,"results":"961","hashOfConfig":"858"},{"size":13471,"mtime":1605704463351,"results":"962","hashOfConfig":"858"},{"size":1961,"mtime":1592110628683,"results":"963","hashOfConfig":"858"},{"size":712,"mtime":1609334208352,"results":"964","hashOfConfig":"858"},{"size":1242,"mtime":1592110628775,"results":"965","hashOfConfig":"858"},{"size":697,"mtime":1632568832442,"results":"966","hashOfConfig":"858"},{"size":3434,"mtime":1592110630451,"results":"967","hashOfConfig":"858"},{"size":3383,"mtime":1632561934799,"results":"968","hashOfConfig":"858"},{"size":655,"mtime":1632567659622,"results":"969","hashOfConfig":"858"},{"size":4039,"mtime":1632566762855,"results":"970","hashOfConfig":"858"},{"size":6074,"mtime":1597086737493,"results":"971","hashOfConfig":"858"},{"size":3736,"mtime":1592110637924,"results":"972","hashOfConfig":"858"},{"size":5177,"mtime":1630170321829,"results":"973","hashOfConfig":"858"},{"size":577,"mtime":1592110630119,"results":"974","hashOfConfig":"858"},{"size":1242,"mtime":1592110628907,"results":"975","hashOfConfig":"858"},{"size":810,"mtime":1632566702641,"results":"976","hashOfConfig":"858"},{"size":831,"mtime":1632566683025,"results":"977","hashOfConfig":"858"},{"size":831,"mtime":1632566696181,"results":"978","hashOfConfig":"858"},{"size":831,"mtime":1632566674221,"results":"979","hashOfConfig":"858"},{"size":831,"mtime":1632566699233,"results":"980","hashOfConfig":"858"},{"size":449,"mtime":1631969872000,"results":"981","hashOfConfig":"858"},{"size":2450,"mtime":1632569072312,"results":"982","hashOfConfig":"858"},{"size":1941,"mtime":1632569121652,"results":"983","hashOfConfig":"858"},{"size":532,"mtime":1611402924008,"results":"984","hashOfConfig":"858"},{"size":444,"mtime":1610890608652,"results":"985","hashOfConfig":"858"},{"size":337,"mtime":1592110627571,"results":"986","hashOfConfig":"858"},{"size":885,"mtime":1592110630015,"results":"987","hashOfConfig":"858"},{"size":13991,"mtime":1632057675190,"results":"988","hashOfConfig":"858"},{"size":1242,"mtime":1592110628487,"results":"989","hashOfConfig":"858"},{"size":753,"mtime":1592110631547,"results":"990","hashOfConfig":"858"},{"size":718,"mtime":1592110631535,"results":"991","hashOfConfig":"858"},{"size":5177,"mtime":1626189434110,"results":"992","hashOfConfig":"858"},{"size":2537,"mtime":1592110631403,"results":"993","hashOfConfig":"858"},{"size":2255,"mtime":1592110631535,"results":"994","hashOfConfig":"858"},{"size":1580,"mtime":1592110628263,"results":"995","hashOfConfig":"858"},{"size":102,"mtime":1592110630611,"results":"996","hashOfConfig":"858"},{"size":665,"mtime":1592110630611,"results":"997","hashOfConfig":"858"},{"size":868,"mtime":1592110631723,"results":"998","hashOfConfig":"858"},{"size":3740,"mtime":1593097459507,"results":"999","hashOfConfig":"858"},{"size":656,"mtime":1592110631547,"results":"1000","hashOfConfig":"858"},{"size":2755,"mtime":1592110630459,"results":"1001","hashOfConfig":"858"},{"size":1248,"mtime":1592110628263,"results":"1002","hashOfConfig":"858"},{"size":1060,"mtime":1592110628263,"results":"1003","hashOfConfig":"858"},{"size":236,"mtime":1592110630755,"results":"1004","hashOfConfig":"858"},{"size":233,"mtime":1592110630751,"results":"1005","hashOfConfig":"858"},{"size":236,"mtime":1592110630919,"results":"1006","hashOfConfig":"858"},{"size":236,"mtime":1592110630747,"results":"1007","hashOfConfig":"858"},{"size":241,"mtime":1592110630919,"results":"1008","hashOfConfig":"858"},{"size":236,"mtime":1592110630751,"results":"1009","hashOfConfig":"858"},{"size":339,"mtime":1592110625895,"results":"1010","hashOfConfig":"858"},{"size":474,"mtime":1608301987918,"results":"1011","hashOfConfig":"858"},{"size":839,"mtime":1592110628263,"results":"1012","hashOfConfig":"858"},{"size":323,"mtime":1592110626291,"results":"1013","hashOfConfig":"858"},{"size":3259,"mtime":1592110626291,"results":"1014","hashOfConfig":"858"},{"size":2503,"mtime":1592110626743,"results":"1015","hashOfConfig":"858"},{"size":1857,"mtime":1592110626743,"results":"1016","hashOfConfig":"858"},{"size":791,"mtime":1592110627571,"results":"1017","hashOfConfig":"858"},{"size":878,"mtime":1627483420827,"results":"1018","hashOfConfig":"858"},{"size":865,"mtime":1592110627871,"results":"1019","hashOfConfig":"858"},{"size":3133,"mtime":1624685600463,"results":"1020","hashOfConfig":"858"},{"size":5006,"mtime":1624894933689,"results":"1021","hashOfConfig":"858"},{"size":2018,"mtime":1592110628067,"results":"1022","hashOfConfig":"858"},{"size":5979,"mtime":1617793364787,"results":"1023","hashOfConfig":"858"},{"size":75,"mtime":1592110640560,"results":"1024","hashOfConfig":"858"},{"size":2460,"mtime":1592110627347,"results":"1025","hashOfConfig":"858"},{"size":2186,"mtime":1605721693220,"results":"1026","hashOfConfig":"858"},{"size":3932,"mtime":1616326434630,"results":"1027","hashOfConfig":"858"},{"size":12481,"mtime":1624993808061,"results":"1028","hashOfConfig":"858"},{"size":1302,"mtime":1592110627667,"results":"1029","hashOfConfig":"858"},{"size":3568,"mtime":1624712983275,"results":"1030","hashOfConfig":"858"},{"size":3603,"mtime":1597547114179,"results":"1031","hashOfConfig":"858"},{"size":2086,"mtime":1630329344688,"results":"1032","hashOfConfig":"858"},{"size":4983,"mtime":1624688941425,"results":"1033","hashOfConfig":"858"},{"size":4586,"mtime":1624697187122,"results":"1034","hashOfConfig":"858"},{"size":3032,"mtime":1624710860159,"results":"1035","hashOfConfig":"858"},{"size":2414,"mtime":1624687622837,"results":"1036","hashOfConfig":"858"},{"size":13146,"mtime":1625074137759,"results":"1037","hashOfConfig":"858"},{"size":9731,"mtime":1633792149047,"results":"1038","hashOfConfig":"858"},{"size":2214,"mtime":1612181517334,"results":"1039","hashOfConfig":"858"},{"size":7988,"mtime":1627481470565,"results":"1040","hashOfConfig":"858"},{"size":5289,"mtime":1630169840227,"results":"1041","hashOfConfig":"858"},{"size":4092,"mtime":1612181424907,"results":"1042","hashOfConfig":"858"},{"size":5057,"mtime":1592110627991,"results":"1043","hashOfConfig":"858"},{"size":2849,"mtime":1592110628159,"results":"1044","hashOfConfig":"858"},{"size":2442,"mtime":1624696947672,"results":"1045","hashOfConfig":"858"},{"size":3613,"mtime":1624689024660,"results":"1046","hashOfConfig":"858"},{"size":3913,"mtime":1624689009105,"results":"1047","hashOfConfig":"858"},{"size":7474,"mtime":1624689277855,"results":"1048","hashOfConfig":"858"},{"size":15090,"mtime":1624686036709,"results":"1049","hashOfConfig":"858"},{"size":2764,"mtime":1619944736850,"results":"1050","hashOfConfig":"858"},{"size":1744,"mtime":1611990270970,"results":"1051","hashOfConfig":"858"},{"size":2977,"mtime":1592110628067,"results":"1052","hashOfConfig":"858"},{"size":2781,"mtime":1594696446948,"results":"1053","hashOfConfig":"858"},{"size":2241,"mtime":1630170702190,"results":"1054","hashOfConfig":"858"},{"size":3906,"mtime":1592110627871,"results":"1055","hashOfConfig":"858"},{"size":2340,"mtime":1594696483033,"results":"1056","hashOfConfig":"858"},{"size":654,"mtime":1592110629299,"results":"1057","hashOfConfig":"858"},{"size":3065,"mtime":1624714094267,"results":"1058","hashOfConfig":"858"},{"size":4917,"mtime":1597581713182,"results":"1059","hashOfConfig":"858"},{"size":6384,"mtime":1615309909832,"results":"1060","hashOfConfig":"858"},{"size":13094,"mtime":1624991131641,"results":"1061","hashOfConfig":"858"},{"size":7179,"mtime":1624691667274,"results":"1062","hashOfConfig":"858"},{"size":7524,"mtime":1624693085160,"results":"1063","hashOfConfig":"858"},{"size":14671,"mtime":1624691287425,"results":"1064","hashOfConfig":"858"},{"size":6007,"mtime":1597581736094,"results":"1065","hashOfConfig":"858"},{"size":1167,"mtime":1633616515141,"results":"1066","hashOfConfig":"858"},{"size":3651,"mtime":1627314314589,"results":"1067","hashOfConfig":"858"},{"size":498,"mtime":1592110630475,"results":"1068","hashOfConfig":"858"},{"size":11002,"mtime":1627215519185,"results":"1069","hashOfConfig":"858"},{"size":1080,"mtime":1592110627487,"results":"1070","hashOfConfig":"858"},{"size":1505,"mtime":1592110628467,"results":"1071","hashOfConfig":"858"},{"size":7765,"mtime":1611401878466,"results":"1072","hashOfConfig":"858"},{"size":4828,"mtime":1633872871450,"results":"1073","hashOfConfig":"858"},{"size":8959,"mtime":1617792224797,"results":"1074","hashOfConfig":"858"},{"size":15408,"mtime":1624993064947,"results":"1075","hashOfConfig":"858"},{"size":1164,"mtime":1592110629603,"results":"1076","hashOfConfig":"858"},{"size":5921,"mtime":1612608326912,"results":"1077","hashOfConfig":"858"},{"size":1164,"mtime":1592110629439,"results":"1078","hashOfConfig":"858"},{"size":1478,"mtime":1624687976495,"results":"1079","hashOfConfig":"858"},{"size":4220,"mtime":1635434410038,"results":"1080","hashOfConfig":"858"},{"size":1110,"mtime":1633616514833,"results":"1081","hashOfConfig":"858"},{"size":36,"mtime":1592110630603,"results":"1082","hashOfConfig":"858"},{"size":1242,"mtime":1592110629603,"results":"1083","hashOfConfig":"858"},{"size":1242,"mtime":1592110629451,"results":"1084","hashOfConfig":"858"},{"size":1531,"mtime":1592110630607,"results":"1085","hashOfConfig":"858"},{"size":8085,"mtime":1635434154431,"results":"1086","hashOfConfig":"858"},{"size":1194,"mtime":1633616514833,"results":"1087","hashOfConfig":"858"},{"size":3852,"mtime":1635434540383,"results":"1088","hashOfConfig":"858"},{"size":10664,"mtime":1632303471511,"results":"1089","hashOfConfig":"858"},{"size":1411,"mtime":1608981665705,"results":"1090","hashOfConfig":"858"},{"size":1245,"mtime":1608981189616,"results":"1091","hashOfConfig":"858"},{"size":1066,"mtime":1633616514673,"results":"1092","hashOfConfig":"858"},{"size":1305,"mtime":1608981657897,"results":"1093","hashOfConfig":"858"},{"size":1043,"mtime":1633616514673,"results":"1094","hashOfConfig":"858"},{"size":2759,"mtime":1632305885872,"results":"1095","hashOfConfig":"858"},{"size":3180,"mtime":1632569212639,"results":"1096","hashOfConfig":"858"},{"size":497,"mtime":1616317343848,"results":"1097","hashOfConfig":"858"},{"size":5163,"mtime":1616317344040,"results":"1098","hashOfConfig":"858"},{"size":2611,"mtime":1616317344040,"results":"1099","hashOfConfig":"858"},{"size":2381,"mtime":1616317344232,"results":"1100","hashOfConfig":"858"},{"size":3180,"mtime":1631437551377,"results":"1101","hashOfConfig":"858"},{"size":1991,"mtime":1616317344996,"results":"1102","hashOfConfig":"858"},{"size":2118,"mtime":1616317352704,"results":"1103","hashOfConfig":"858"},{"size":1764,"mtime":1616317342156,"results":"1104","hashOfConfig":"858"},{"size":4406,"mtime":1632048785816,"results":"1105","hashOfConfig":"858"},{"size":115,"mtime":1616317352876,"results":"1106","hashOfConfig":"858"},{"size":1573,"mtime":1616317342332,"results":"1107","hashOfConfig":"858"},{"size":578,"mtime":1616317352704,"results":"1108","hashOfConfig":"858"},{"size":571,"mtime":1616317352876,"results":"1109","hashOfConfig":"858"},{"size":3558,"mtime":1635435048398,"results":"1110","hashOfConfig":"858"},{"size":444,"mtime":1610890608652,"results":"1111","hashOfConfig":"858"},{"size":3475,"mtime":1597086078290,"results":"1112","hashOfConfig":"858"},{"size":3960,"mtime":1597086001258,"results":"1113","hashOfConfig":"858"},{"size":3480,"mtime":1597085695823,"results":"1114","hashOfConfig":"858"},{"size":5118,"mtime":1592110630299,"results":"1115","hashOfConfig":"858"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},"19h90ok",{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121","usedDeprecatedRules":"1122"},"167jv72",{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"1118"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"1118"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"1118"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"1118"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"1118"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"1122"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1122"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"1122"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"1122"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"1122"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"1118"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"1118"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"1118"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171","usedDeprecatedRules":"1118"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174","usedDeprecatedRules":"1118"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"1118"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"1118"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"1118"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"1122"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1189","usedDeprecatedRules":"1122"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"1122"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"1122"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"1118"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207","usedDeprecatedRules":"1118"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"1118"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"1118"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218","usedDeprecatedRules":"1118"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"1118"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"1122"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1243","usedDeprecatedRules":"1118"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246","usedDeprecatedRules":"1118"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"1118"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252","usedDeprecatedRules":"1118"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"1118"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"1118"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261","usedDeprecatedRules":"1118"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264","usedDeprecatedRules":"1118"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1267","usedDeprecatedRules":"1122"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"1118"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"1118"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1292","usedDeprecatedRules":"1118"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1295","usedDeprecatedRules":"1118"},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1300","usedDeprecatedRules":"1118"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1303","usedDeprecatedRules":"1118"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1122"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"1118"},{"filePath":"1310","messages":"1311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312","usedDeprecatedRules":"1118"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"1118"},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322","usedDeprecatedRules":"1118"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325","usedDeprecatedRules":"1118"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1328","messages":"1329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1330","messages":"1331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1332","messages":"1333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"1118"},{"filePath":"1335","messages":"1336","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"1118"},{"filePath":"1337","messages":"1338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"1118"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"1118"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1118"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1118"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"1118"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"1118"},{"filePath":"1355","messages":"1356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"1118"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"1118"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1377","messages":"1378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1379","messages":"1380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1381","usedDeprecatedRules":"1118"},{"filePath":"1382","messages":"1383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"1118"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"1118"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"1118"},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"1118"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"1118"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"1118"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"1118"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1407","messages":"1408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"1118"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"1118"},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415","usedDeprecatedRules":"1118"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1418","usedDeprecatedRules":"1122"},{"filePath":"1419","messages":"1420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"1118"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424","usedDeprecatedRules":"1118"},{"filePath":"1425","messages":"1426","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1427","usedDeprecatedRules":"1118"},{"filePath":"1428","messages":"1429","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1430","usedDeprecatedRules":"1122"},{"filePath":"1431","messages":"1432","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433","usedDeprecatedRules":"1122"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436","usedDeprecatedRules":"1118"},{"filePath":"1437","messages":"1438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1439","messages":"1440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1122"},{"filePath":"1441","messages":"1442","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1443","usedDeprecatedRules":"1122"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1118"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"1118"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1451","messages":"1452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455","usedDeprecatedRules":"1118"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"1118"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"1118"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1464","usedDeprecatedRules":"1118"},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1467","usedDeprecatedRules":"1118"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1470","usedDeprecatedRules":"1118"},{"filePath":"1471","messages":"1472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1475","usedDeprecatedRules":"1118"},{"filePath":"1476","messages":"1477","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1478","usedDeprecatedRules":"1118"},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1118"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"1118"},{"filePath":"1484","messages":"1485","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486","usedDeprecatedRules":"1118"},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1491","messages":"1492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495","usedDeprecatedRules":"1118"},{"filePath":"1496","messages":"1497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1118"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1500","usedDeprecatedRules":"1118"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1503","usedDeprecatedRules":"1118"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"1118"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"1118"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"1118"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"1118"},{"filePath":"1516","messages":"1517","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"1118"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"1118"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"1118"},{"filePath":"1525","messages":"1526","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527","usedDeprecatedRules":"1118"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1530","usedDeprecatedRules":"1118"},{"filePath":"1531","messages":"1532","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"1118"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1536","messages":"1537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1538","messages":"1539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1542","usedDeprecatedRules":"1118"},{"filePath":"1543","messages":"1544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1545","messages":"1546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1547","usedDeprecatedRules":"1118"},{"filePath":"1548","messages":"1549","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1550","usedDeprecatedRules":"1118"},{"filePath":"1551","messages":"1552","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1553","usedDeprecatedRules":"1118"},{"filePath":"1554","messages":"1555","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1556","usedDeprecatedRules":"1118"},{"filePath":"1557","messages":"1558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"1118"},{"filePath":"1562","messages":"1563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1564","usedDeprecatedRules":"1118"},{"filePath":"1565","messages":"1566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1567","messages":"1568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1569","messages":"1570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1571","messages":"1572","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1573","usedDeprecatedRules":"1118"},{"filePath":"1574","messages":"1575","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1576","usedDeprecatedRules":"1118"},{"filePath":"1577","messages":"1578","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1579","usedDeprecatedRules":"1118"},{"filePath":"1580","messages":"1581","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1582","usedDeprecatedRules":"1118"},{"filePath":"1583","messages":"1584","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1585","usedDeprecatedRules":"1118"},{"filePath":"1586","messages":"1587","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1588","usedDeprecatedRules":"1118"},{"filePath":"1589","messages":"1590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1591","messages":"1592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1593","messages":"1594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1595","messages":"1596","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1597","usedDeprecatedRules":"1118"},{"filePath":"1598","messages":"1599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1600","usedDeprecatedRules":"1118"},{"filePath":"1601","messages":"1602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1603","usedDeprecatedRules":"1118"},{"filePath":"1604","messages":"1605","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1606","usedDeprecatedRules":"1122"},{"filePath":"1607","messages":"1608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1609","messages":"1610","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"1118"},{"filePath":"1612","messages":"1613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1614","messages":"1615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1616","messages":"1617","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"1122"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1122"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1622","usedDeprecatedRules":"1118"},{"filePath":"1623","messages":"1624","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"1118"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1628","messages":"1629","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1630","usedDeprecatedRules":"1118"},{"filePath":"1631","messages":"1632","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1633","usedDeprecatedRules":"1118"},{"filePath":"1634","messages":"1635","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1636","usedDeprecatedRules":"1118"},{"filePath":"1637","messages":"1638","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1639","usedDeprecatedRules":"1118"},{"filePath":"1640","messages":"1641","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1642","usedDeprecatedRules":"1118"},{"filePath":"1643","messages":"1644","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1645","usedDeprecatedRules":"1118"},{"filePath":"1646","messages":"1647","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1648","usedDeprecatedRules":"1118"},{"filePath":"1649","messages":"1650","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1651","usedDeprecatedRules":"1118"},{"filePath":"1652","messages":"1653","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1654","usedDeprecatedRules":"1118"},{"filePath":"1655","messages":"1656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1657","usedDeprecatedRules":"1118"},{"filePath":"1658","messages":"1659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1660","messages":"1661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1662","messages":"1663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1664","messages":"1665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1666","messages":"1667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"1118"},{"filePath":"1669","messages":"1670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671","usedDeprecatedRules":"1118"},{"filePath":"1672","messages":"1673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1674","messages":"1675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1676","messages":"1677","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1678","usedDeprecatedRules":"1118"},{"filePath":"1679","messages":"1680","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681","usedDeprecatedRules":"1118"},{"filePath":"1682","messages":"1683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684","usedDeprecatedRules":"1118"},{"filePath":"1685","messages":"1686","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1687","usedDeprecatedRules":"1118"},{"filePath":"1688","messages":"1689","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1690","usedDeprecatedRules":"1118"},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693","usedDeprecatedRules":"1118"},{"filePath":"1694","messages":"1695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1696","messages":"1697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1698","messages":"1699","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1700","usedDeprecatedRules":"1118"},{"filePath":"1701","messages":"1702","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1703","usedDeprecatedRules":"1118"},{"filePath":"1704","messages":"1705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1706","messages":"1707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1708","messages":"1709","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1710","usedDeprecatedRules":"1118"},{"filePath":"1711","messages":"1712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1713","messages":"1714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1715","messages":"1716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1717","messages":"1718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1719","messages":"1720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1721","usedDeprecatedRules":"1118"},{"filePath":"1722","messages":"1723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1724","messages":"1725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1726","messages":"1727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1728"},{"filePath":"1729","messages":"1730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1731","messages":"1732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1733","messages":"1734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1735","messages":"1736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1737","messages":"1738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1739","messages":"1740","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1741","usedDeprecatedRules":"1118"},{"filePath":"1742","messages":"1743","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1744","usedDeprecatedRules":"1118"},{"filePath":"1745","messages":"1746","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1747","usedDeprecatedRules":"1118"},{"filePath":"1748","messages":"1749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1751","messages":"1752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1753","messages":"1754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1755","messages":"1756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1757","messages":"1758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1759","messages":"1760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1761","messages":"1762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1763","messages":"1764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1765","messages":"1766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1767","messages":"1768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1769","messages":"1770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1771","messages":"1772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1773","messages":"1774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1775","messages":"1776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1777","messages":"1778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1779","messages":"1780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1781","messages":"1782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1783","messages":"1784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1785","messages":"1786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1787","messages":"1788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1789","messages":"1790","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1791","usedDeprecatedRules":"1750"},{"filePath":"1792","messages":"1793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1794","messages":"1795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1796","messages":"1797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1798","messages":"1799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1800","messages":"1801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1802","messages":"1803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1804","messages":"1805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1806","messages":"1807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1808","messages":"1809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1810","messages":"1811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1812","messages":"1813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1814","messages":"1815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1816","messages":"1817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1818","messages":"1819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1820","messages":"1821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1822","messages":"1823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1824","messages":"1825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1826","messages":"1827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1828","messages":"1829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1830","messages":"1831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1832","messages":"1833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1834","messages":"1835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1836","messages":"1837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1838","messages":"1839","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1840","usedDeprecatedRules":"1750"},{"filePath":"1841","messages":"1842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1843","messages":"1844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1845","messages":"1846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1847","messages":"1848","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1849","usedDeprecatedRules":"1750"},{"filePath":"1850","messages":"1851","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1852","usedDeprecatedRules":"1118"},{"filePath":"1853","messages":"1854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1855","messages":"1856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1857","messages":"1858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1859","messages":"1860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1861","messages":"1862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1750"},{"filePath":"1863","messages":"1864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1118"},{"filePath":"1865","messages":"1866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},"1tj9lga",{"filePath":"1868","messages":"1869","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1870","usedDeprecatedRules":"1867"},{"filePath":"1871","messages":"1872","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"1867"},{"filePath":"1873","messages":"1874","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"1867"},{"filePath":"1875","messages":"1876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1877","messages":"1878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1879","messages":"1880","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1503","usedDeprecatedRules":"1867"},{"filePath":"1881","messages":"1882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1883","messages":"1884","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"1867"},{"filePath":"1885","messages":"1886","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1687","usedDeprecatedRules":"1867"},{"filePath":"1887","messages":"1888","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"1867"},{"filePath":"1889","messages":"1890","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"1867"},{"filePath":"1891","messages":"1892","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"1867"},{"filePath":"1893","messages":"1894","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"1867"},{"filePath":"1895","messages":"1896","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"1867"},{"filePath":"1897","messages":"1898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1899","messages":"1900","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"1867"},{"filePath":"1901","messages":"1902","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"1867"},{"filePath":"1903","messages":"1904","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171","usedDeprecatedRules":"1867"},{"filePath":"1905","messages":"1906","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174","usedDeprecatedRules":"1867"},{"filePath":"1907","messages":"1908","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"1867"},{"filePath":"1909","messages":"1910","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"1867"},{"filePath":"1911","messages":"1912","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1700","usedDeprecatedRules":"1867"},{"filePath":"1913","messages":"1914","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"1867"},{"filePath":"1915","messages":"1916","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"1867"},{"filePath":"1917","messages":"1918","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1530","usedDeprecatedRules":"1867"},{"filePath":"1919","messages":"1920","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"1867"},{"filePath":"1921","messages":"1922","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"1867"},{"filePath":"1923","messages":"1924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1925","messages":"1926","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"1867"},{"filePath":"1927","messages":"1928","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"1867"},{"filePath":"1929","messages":"1930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1931","messages":"1932","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"1867"},{"filePath":"1933","messages":"1934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1935","messages":"1936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1937","messages":"1938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1939","messages":"1940","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207","usedDeprecatedRules":"1867"},{"filePath":"1941","messages":"1942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"1944","messages":"1945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"1946","messages":"1947","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"1867"},{"filePath":"1948","messages":"1949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1950","messages":"1951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1952","messages":"1953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1954","messages":"1955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1956","messages":"1957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1958","messages":"1959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1960","messages":"1961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1962","messages":"1963","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"1867"},{"filePath":"1964","messages":"1965","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218","usedDeprecatedRules":"1867"},{"filePath":"1966","messages":"1967","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1542","usedDeprecatedRules":"1867"},{"filePath":"1968","messages":"1969","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1970","messages":"1971","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"1867"},{"filePath":"1972","messages":"1973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"1974","messages":"1975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"1976","messages":"1977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"1978","messages":"1979","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1243","usedDeprecatedRules":"1867"},{"filePath":"1980","messages":"1981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1982","messages":"1983","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"1867"},{"filePath":"1984","messages":"1985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1986","messages":"1987","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"1867"},{"filePath":"1988","messages":"1989","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1990","messages":"1991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1992","messages":"1993","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"1867"},{"filePath":"1994","messages":"1995","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"1867"},{"filePath":"1996","messages":"1997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"1998","messages":"1999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2000","messages":"2001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2002","messages":"2003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2004","messages":"2005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2006","messages":"2007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2008","messages":"2009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2010","messages":"2011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2012","messages":"2013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2014","messages":"2015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2016","messages":"2017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2018","messages":"2019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2020","messages":"2021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2022","messages":"2023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2024","messages":"2025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2026","messages":"2027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2028","messages":"2029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2030","messages":"2031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2032","messages":"2033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2034","messages":"2035","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1791","usedDeprecatedRules":"1943"},{"filePath":"2036","messages":"2037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2038","messages":"2039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2040","messages":"2041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2042","messages":"2043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2044","messages":"2045","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1639","usedDeprecatedRules":"1867"},{"filePath":"2046","messages":"2047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2048","messages":"2049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2050","messages":"2051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2052","messages":"2053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2054","messages":"2055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2056","messages":"2057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2058","messages":"2059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2060","messages":"2061","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2062","messages":"2063","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2064","messages":"2065","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2066","messages":"2067","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2068","messages":"2069","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"1867"},{"filePath":"2070","messages":"2071","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1292","usedDeprecatedRules":"1867"},{"filePath":"2072","messages":"2073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2074","messages":"2075","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1295","usedDeprecatedRules":"1867"},{"filePath":"2076","messages":"2077","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486","usedDeprecatedRules":"1867"},{"filePath":"2078","messages":"2079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2080","messages":"2081","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1603","usedDeprecatedRules":"1867"},{"filePath":"2082","messages":"2083","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2084","messages":"2085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2086","messages":"2087","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"1867"},{"filePath":"2088","messages":"2089","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1840","usedDeprecatedRules":"1943"},{"filePath":"2090","messages":"2091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2092","messages":"2093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2094","messages":"2095","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"1867"},{"filePath":"2096","messages":"2097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2098","messages":"2099","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"1867"},{"filePath":"2100","messages":"2101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2102","messages":"2103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2104","messages":"2105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2106","messages":"2107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2108","messages":"2109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2110","messages":"2111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2112","messages":"2113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2114","messages":"2115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2116","messages":"2117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2118","messages":"2119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2120","messages":"2121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2122","messages":"2123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2124","messages":"2125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2126","messages":"2127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2128","messages":"2129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495","usedDeprecatedRules":"1867"},{"filePath":"2130","messages":"2131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1867"},{"filePath":"2132","messages":"2133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"1867"},{"filePath":"2134","messages":"2135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"1867"},{"filePath":"2136","messages":"2137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261","usedDeprecatedRules":"1867"},{"filePath":"2138","messages":"2139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264","usedDeprecatedRules":"1867"},{"filePath":"2140","messages":"2141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"1867"},{"filePath":"2142","messages":"2143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"1867"},{"filePath":"2144","messages":"2145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2146","messages":"2147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2148","messages":"2149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"1867"},{"filePath":"2150","messages":"2151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2152","messages":"2153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2154","messages":"2155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322","usedDeprecatedRules":"1867"},{"filePath":"2156","messages":"2157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"1867"},{"filePath":"2158","messages":"2159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2160","messages":"2161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2162","messages":"2163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2164","messages":"2165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2166","messages":"2167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2168","messages":"2169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2170","messages":"2171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2172","messages":"2173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2174","messages":"2175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2176","messages":"2177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"1867"},{"filePath":"2178","messages":"2179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2180","messages":"2181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2182","messages":"2183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"1867"},{"filePath":"2184","messages":"2185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1564","usedDeprecatedRules":"1867"},{"filePath":"2186","messages":"2187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2188","messages":"2189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2190","messages":"2191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2192","messages":"2193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2194","messages":"2195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1678","usedDeprecatedRules":"1867"},{"filePath":"2196","messages":"2197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2198","messages":"2199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2200","messages":"2201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2202","messages":"2203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1381","usedDeprecatedRules":"1867"},{"filePath":"2204","messages":"2205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2206","messages":"2207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"1867"},{"filePath":"2208","messages":"2209","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"1867"},{"filePath":"2210","messages":"2211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252","usedDeprecatedRules":"1867"},{"filePath":"2212","messages":"2213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"1867"},{"filePath":"2214","messages":"2215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"1867"},{"filePath":"2216","messages":"2217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681","usedDeprecatedRules":"1867"},{"filePath":"2218","messages":"2219","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"1867"},{"filePath":"2220","messages":"2221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"1867"},{"filePath":"2222","messages":"2223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2224","messages":"2225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"1867"},{"filePath":"2226","messages":"2227","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"1867"},{"filePath":"2228","messages":"2229","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1633","usedDeprecatedRules":"1867"},{"filePath":"2230","messages":"2231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1547","usedDeprecatedRules":"1867"},{"filePath":"2232","messages":"2233","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1573","usedDeprecatedRules":"1867"},{"filePath":"2234","messages":"2235","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1576","usedDeprecatedRules":"1867"},{"filePath":"2236","messages":"2237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1550","usedDeprecatedRules":"1867"},{"filePath":"2238","messages":"2239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1585","usedDeprecatedRules":"1867"},{"filePath":"2240","messages":"2241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1579","usedDeprecatedRules":"1867"},{"filePath":"2242","messages":"2243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1582","usedDeprecatedRules":"1867"},{"filePath":"2244","messages":"2245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246","usedDeprecatedRules":"1867"},{"filePath":"2246","messages":"2247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"1867"},{"filePath":"2248","messages":"2249","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424","usedDeprecatedRules":"1867"},{"filePath":"2250","messages":"2251","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1427","usedDeprecatedRules":"1867"},{"filePath":"2252","messages":"2253","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1636","usedDeprecatedRules":"1867"},{"filePath":"2254","messages":"2255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2256","messages":"2257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2258","messages":"2259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1556","usedDeprecatedRules":"1867"},{"filePath":"2260","messages":"2261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2262","messages":"2263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1588","usedDeprecatedRules":"1867"},{"filePath":"2264","messages":"2265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1553","usedDeprecatedRules":"1867"},{"filePath":"2266","messages":"2267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2268","messages":"2269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684","usedDeprecatedRules":"1867"},{"filePath":"2270","messages":"2271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2272","messages":"2273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"1867"},{"filePath":"2274","messages":"2275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455","usedDeprecatedRules":"1867"},{"filePath":"2276","messages":"2277","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1300","usedDeprecatedRules":"1867"},{"filePath":"2278","messages":"2279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312","usedDeprecatedRules":"1867"},{"filePath":"2280","messages":"2281","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1303","usedDeprecatedRules":"1867"},{"filePath":"2282","messages":"2283","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325","usedDeprecatedRules":"1867"},{"filePath":"2284","messages":"2285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2286","messages":"2287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693","usedDeprecatedRules":"1867"},{"filePath":"2288","messages":"2289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2290","messages":"2291","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1690","usedDeprecatedRules":"1867"},{"filePath":"2292","messages":"2293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2294","messages":"2295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2296","messages":"2297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1622","usedDeprecatedRules":"1867"},{"filePath":"2298","messages":"2299","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1464","usedDeprecatedRules":"1867"},{"filePath":"2300","messages":"2301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1470","usedDeprecatedRules":"1867"},{"filePath":"2302","messages":"2303","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1467","usedDeprecatedRules":"1867"},{"filePath":"2304","messages":"2305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"1867"},{"filePath":"2306","messages":"2307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1475","usedDeprecatedRules":"1867"},{"filePath":"2308","messages":"2309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334","usedDeprecatedRules":"1867"},{"filePath":"2310","messages":"2311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2312","messages":"2313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1849","usedDeprecatedRules":"1943"},{"filePath":"2314","messages":"2315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2316","messages":"2317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2318","messages":"2319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1867"},{"filePath":"2320","messages":"2321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1867"},{"filePath":"2322","messages":"2323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2324","messages":"2325","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1852","usedDeprecatedRules":"1867"},{"filePath":"2326","messages":"2327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2328","messages":"2329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2330","messages":"2331","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2332","messages":"2333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2334","messages":"2335","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1597","usedDeprecatedRules":"1867"},{"filePath":"2336","messages":"2337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2338","messages":"2339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1600","usedDeprecatedRules":"1867"},{"filePath":"2340","messages":"2341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2342","messages":"2343","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2344","messages":"2345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2346","messages":"2347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2348","messages":"2349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2350","messages":"2351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2352","messages":"2353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2354","messages":"2355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2356","messages":"2357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2358","messages":"2359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2360","messages":"2361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2362","messages":"2363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2364","messages":"2365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2366","messages":"2367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2368","messages":"2369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2370","messages":"2371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2372","messages":"2373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1943"},{"filePath":"2374","messages":"2375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2376","messages":"2377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1867"},{"filePath":"2378","messages":"2379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"1867"},{"filePath":"2380","messages":"2381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"1867"},{"filePath":"2382","messages":"2383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415","usedDeprecatedRules":"1867"},"/home/ubuntu/environment/jobslab-web/src/index.js",[],["2384","2385"],"/home/ubuntu/environment/jobslab-web/src/AdminRoutes.js",["2386","2387","2388","2389","2390","2391","2392","2393","2394","2395"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n//import {MuiPickersUtilsProvider} from 'material-ui-pickers';\nimport MomentUtils from '@date-io/moment';\nimport cyanTheme from 'styles/themes/cyanTheme';\nimport asyncComponent from 'util/asyncComponent';\nimport ScrollToTop from 'util/ScrollToTop';\nimport {IntlProvider} from 'react-intl'\nimport AppLocale from 'lngProvider';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport Sidebar from 'components/sideBar/SideNav/index';\n\nimport TermsOfUse from './app/general/TermsOfUse';\nimport PrivacyPolicy from './app/general/PrivacyPolicy';\nimport FAQ from './app/general/FAQ';\nimport ContactUs from './app/general/ContactUs';\nimport JobList from './app/job/JobList';\nimport Job from './app/job/Job';\nimport PostJob from './app/job/PostJob';\nimport Resume from './app/resume/Resume';\n\nimport AdminHome from './app/admin/AdminHome';\nimport AdminDashboard from './app/admin/AdminDashboard';\nimport AdminNewDashboard from './app/admin/AdminNewDashboard';\nimport AdminJobList from './app/admin/AdminJobList';\nimport AdminApplicationList from './app/admin/AdminApplicationList';\nimport AdminCandidateList from './app/admin/AdminCandidateList';\nimport AdminClientList from './app/admin/AdminClientList';\nimport AdminCompanyList from './app/admin/AdminCompanyList';\nimport AdminCandidateRegister from './app/admin/AdminCandidateRegister';\n\n\nimport UserSettings from './app/user/UserSettings';\nimport Login from './app/user/Login';\nimport PasswordReset from './app/user/PasswordReset';\n\nimport Application from './app/application/Application';\nimport VideoInterview from './app/application/VideoInterview';\n\nimport NotFound from './app/general/NotFound';\n\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nimport { changeNavigationStyle } from 'actions/index';\n\nimport {\n  ABOVE_THE_HEADER,\n  BELOW_THE_HEADER,\n  COLLAPSED_DRAWER,\n  FIXED_DRAWER,\n  HORIZONTAL_NAVIGATION,\n  VERTICAL_NAVIGATION,\n} from 'constants/ActionTypes';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownSearchBar : true,\n      headerWidth : '100%',\n    }\n  }\n  \n  componentDidMount() {\n  }\n  \n  \n  updateHeaderStyle = (style, isShownSearch) => {\n    var headerType = (style == VERTICAL_NAVIGATION) ? VERTICAL_NAVIGATION : \n    (style == HORIZONTAL_NAVIGATION  ? HORIZONTAL_NAVIGATION : \"\");\n    if(headerType)\n      this.props.changeNavigationStyle(headerType);\n      \n    if(isShownSearch)\n      this.setState({\n        isShownSearchBar : true\n      })\n    else\n      this.setState({\n        isShownSearchBar : false\n      })\n  }\n  \n  render() {\n    const {navigationStyle} = this.props;\n    const {locale} = this.props;\n    //const Home = () => <Redirect to='/' />\n    let applyTheme = createMuiTheme(cyanTheme);\n    const currentAppLocale = AppLocale[locale.locale];\n    console.log(this.props.match);\n    return (\n      <div>\n       <ThemeProvider theme={applyTheme}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <IntlProvider\n            locale={currentAppLocale.locale}\n            messages={currentAppLocale.messages}>\n            <div className=\"app-main\">\n              <div className=\"app-main-container\">\n                <Sidebar />\n                <div className={`app-header ${navigationStyle === HORIZONTAL_NAVIGATION ? 'app-header-horizontal' : ''}`}>\n                  <Header enableSearchBar={this.state.isShownSearchBar} />\n                </div>\n                <main className={`app-main-content-wrapper ${navigationStyle === HORIZONTAL_NAVIGATION ? 'transparent-header' : ''} ${ window.location.pathname === \"/joblist\" ? 'joblist' : ''}`}>\n                  <div className=\"app-main-content\">\n                  <ScrollUpButton ToggledStyle={{bottom: 70}} />\n                    <Switch>\n                        <Route exact path='/terms-of-use' render={props => <TermsOfUse updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/privacy-policy' render={props => <PrivacyPolicy updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/faq' render={props => <FAQ updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/contact' render={props => <ContactUs updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/login' render={props => <Login updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route path=\"/joblist*\" render={props => <JobList {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/job/:jobId/:refId?' render={props => <Job {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/password/reset/:token' render={props => <PasswordReset {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <PrivateRoute path=\"/postjob/:jobId?\" component={PostJob} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        \n                        <PrivateRoute exact path=\"/resume/:Id\" component={Resume} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin,client\"} />\n                        <PrivateRoute exact path=\"/settings\" component={UserSettings} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        <PrivateRoute exact path=\"/application/:appId\" component={Application} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        <PrivateRoute exact path=\"/application/interview/video/:inVideoId\" component={VideoInterview} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        <PrivateRoute exact path=\"/candidate/register\" component={AdminCandidateRegister} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n    \n                        <PrivateRoute path=\"/admin/dashboard\" component={AdminDashboard} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        <PrivateRoute path=\"/admin/newdashboard\" component={AdminNewDashboard} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        <PrivateRoute path=\"/admin/editjoblist\" component={AdminJobList} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        <PrivateRoute path=\"/admin/clientlist\" component={AdminClientList} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        <PrivateRoute path=\"/admin/applicationlist/:jobId?\" component={AdminApplicationList} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        <PrivateRoute path=\"/admin/candidatelist\" component={AdminCandidateList} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        <PrivateRoute path=\"/admin/companylist\" component={AdminCompanyList} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin\"} />\n                        \n                        <Route exact path='/' render={props => <AdminHome updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route render={props => <AdminHome updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        {/*<Route path=\"*\"><NotFound updateHeaderStyle={this.updateHeaderStyle} /></Route>*/}\n                    </Switch>\n                  </div>\n                  <Footer/>                \n               </main>\n              </div>\n            </div>\n           </IntlProvider>\n         </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {locale, navigationStyle} = state.settings;\n  return { locale, navigationStyle}\n};\n\nexport default withRouter(connect(mapStateToProps, { changeNavigationStyle })(Routes));\n",["2396","2397"],"/home/ubuntu/environment/jobslab-web/src/redux_store/index.js",["2398"],"import {applyMiddleware, compose, createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport reducers from 'reducers/index'\nimport {createBrowserHistory} from 'history'\nimport {routerMiddleware} from 'connected-react-router';\nimport { sagaMiddleware,rootSaga } from 'redux_saga/Saga'\n\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\n\nconst middlewares = [sagaMiddleware, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducers(history), initialState,\n    composeWithDevTools(applyMiddleware(...middlewares)));\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nexport {history};\n","/home/ubuntu/environment/jobslab-web/src/styles/style.js",[],"/home/ubuntu/environment/jobslab-web/src/actions/Auth.js",["2399"],"import axios from 'axios';  \r\nimport {\r\n  REQUESTED_INIT_USER,\r\n  INIT_USER,\r\n  INIT_USER_SUCCESS,\r\n  INIT_USER_FAILED,\r\n  UPDATE_USER,\r\n} from 'constants/ActionTypes';\r\n\r\n\r\nexport const requestInitUser = () => {\r\n  return { type: REQUESTED_INIT_USER }\r\n};\r\n\r\nexport const initUser  = () => {\r\n  return {\r\n    type: INIT_USER,\r\n  };\r\n};\r\n\r\nexport const initUserSuccess  = (data) => {\r\n  return {\r\n    type: INIT_USER_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initUserError  = () => {\r\n  return {\r\n    type: INIT_USER_FAILED\r\n  };\r\n};\r\n\r\n/*\r\nexport const updateUser = (payload) => {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: payload\r\n  };\r\n};\r\n\r\n\r\nexport function updateUserStatus() {  \r\n  return axios.post('/api/redux/getUserData')\r\n    .then(response => {\r\n      console.log(\"updateUserStatus\");\r\n      console.log(response.data);\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n}\r\n*/\r\n\r\nexport function userSignOut() {\r\n  return axios.get('/api/auth/logout')\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n}; ","/home/ubuntu/environment/jobslab-web/src/actions/List.js",["2400"],"import axios from 'axios';  \r\nimport {\r\n  REQUESTED_INIT_LIST,\r\n  INIT_LIST,\r\n  INIT_LIST_SUCCESS,\r\n  INIT_LIST_FAILED,\r\n  \r\n  /*REQUESTED_INIT_COUNTRY,\r\n  INIT_COUNTRY,\r\n  INIT_COUNTRY_SUCCESS,\r\n  INIT_COUNTRY_FAILED,\r\n  \r\n  REQUESTED_INIT_DIALCODE,\r\n  INIT_DIALCODE,\r\n  INIT_DIALCODE_SUCCESS,\r\n  INIT_DIALCODE_FAILED,\r\n  \r\n  REQUESTED_INIT_COMPANY,\r\n  INIT_COMPANY,\r\n  INIT_COMPANY_SUCCESS,\r\n  INIT_COMPANY_FAILED,\r\n  \r\n  REQUESTED_INIT_INDUSTRY,\r\n  INIT_INDUSTRY,\r\n  INIT_INDUSTRY_SUCCESS,\r\n  INIT_INDUSTRY_FAILED,\r\n  \r\n  REQUESTED_INIT_JOBTYPE,\r\n  INIT_JOBTYPE,\r\n  INIT_JOBTYPE_SUCCESS,\r\n  INIT_JOBTYPE_FAILED*/\r\n} from 'constants/ActionTypes';\r\n\r\n\r\nexport const requestInitList = () => {\r\n  return { type: REQUESTED_INIT_LIST }\r\n};\r\n\r\nexport const initList = () => {\r\n  return {\r\n    type: INIT_LIST,\r\n  };\r\n};\r\n\r\nexport const initListSuccess  = (data) => {\r\n  return {\r\n    type: INIT_LIST_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initListError  = () => {\r\n  return {\r\n    type: INIT_LIST_FAILED\r\n  };\r\n};\r\n\r\n\r\n\r\n/*//Country List\r\nexport const requestInitCountry = () => {\r\n  return { type: REQUESTED_INIT_COUNTRY }\r\n};\r\n\r\nexport const initCountry  = () => {\r\n  return {\r\n    type: INIT_COUNTRY,\r\n  };\r\n};\r\n\r\nexport const initCountrySuccess  = (data) => {\r\n  return {\r\n    type: INIT_COUNTRY_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initCountryError  = () => {\r\n  return {\r\n    type: INIT_COUNTRY_FAILED\r\n  };\r\n};\r\n///////////////////////////////////////////////////////////\r\n\r\n//Industry List\r\nexport const requestInitIndustry = () => {\r\n  return { type: REQUESTED_INIT_INDUSTRY }\r\n};\r\n\r\nexport const initIndustry  = () => {\r\n  return {\r\n    type: INIT_INDUSTRY,\r\n  };\r\n};\r\n\r\nexport const initIndustrySuccess  = (data) => {\r\n  return {\r\n    type: INIT_INDUSTRY_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initIndustryError  = () => {\r\n  return {\r\n    type: INIT_INDUSTRY_FAILED\r\n  };\r\n};\r\n///////////////////////////////////////////////////////////\r\n\r\n//Job Type List\r\nexport const requestInitJobType = () => {\r\n  return { type: REQUESTED_INIT_JOBTYPE }\r\n};\r\n\r\nexport const initJobType  = () => {\r\n  return {\r\n    type: INIT_JOBTYPE,\r\n  };\r\n};\r\n\r\nexport const initJobTypeSuccess  = (data) => {\r\n  return {\r\n    type: INIT_JOBTYPE_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initJobTypeError  = () => {\r\n  return {\r\n    type: INIT_JOBTYPE_FAILED\r\n  };\r\n};\r\n///////////////////////////////////////////////////////////\r\n\r\n\r\n//Dial Code List\r\nexport const requestInitDialCode = () => {\r\n  return { type: REQUESTED_INIT_DIALCODE }\r\n};\r\n\r\nexport const initDialCode  = () => {\r\n  return {\r\n    type: INIT_DIALCODE,\r\n  };\r\n};\r\n\r\nexport const initDialCodeSuccess  = (data) => {\r\n  return {\r\n    type: INIT_DIALCODE_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initDialCodeError  = () => {\r\n  return {\r\n    type: INIT_DIALCODE_FAILED\r\n  };\r\n};\r\n\r\n///////////////////////////////////////////////////////////\r\n//Company List\r\nexport const requestInitCompany = () => {\r\n  return { type: REQUESTED_INIT_COMPANY }\r\n};\r\n\r\nexport const initCompany  = () => {\r\n  return {\r\n    type: INIT_COMPANY,\r\n  };\r\n};\r\n\r\nexport const initCompanySuccess  = (data) => {\r\n  return {\r\n    type: INIT_COMPANY_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const initCompanyError  = () => {\r\n  return {\r\n    type: INIT_COMPANY_FAILED\r\n  };\r\n};*/","/home/ubuntu/environment/jobslab-web/src/PrivateRoute.js",["2401","2402","2403","2404","2405","2406","2407","2408"],"import React from 'react';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass PrivateRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRedirect: \"\",\n      isLoggedin: false,\n      userType: '',\n      isVerified: true,//false,\n      isCompleted: true,//false,\n      isPageReady: false,\n      isLoadReady: false\n    }\n  }\n  \n  componentDidMount() {\n    \n    this.checkStatus();\n    \n    this.setState({\n      isPageReady: true,\n    });\n    \n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(oldProps !== newProps) {\n      this.checkStatus();\n    }\n  }\n  \n  checkStatus = () => {\n    //console.log(this.props.userType)\n    if(!this.props.userLoading) \n        { \n          this.setState({\n            userType: this.props.userType,\n            isLoggedin: this.props.isLoggedin, \n            isVerified: (this.props.userData.isVerified == null) ? false : this.props.userData.isVerified,\n            isCompleted: (this.props.candidateData.isCompleted == null) ? false : this.props.candidateData.isCompleted,\n            pageRole: (this.props.pageRole == null) ? \"\" : this.props.pageRole,\n            isRedirect: (this.props.isRedirect == null) ? \"\" : this.props.isRedirect,\n            isLoadReady: true\n          });\n        }\n        else\n        {\n          this.setState({\n            isLoadReady: false\n          });\n        }\n  }\n  \n  render() {\n    const { component: Component, ...rest } = this.props;\n    const { userType, isCompleted, isVerified, isLoggedin, pageRole, isRedirect, isPageReady, isLoadReady } = this.state;\n    //console.log(isPageReady+\",\"+isLoadReady +\",\"+isLoggedin);\n    return (\n        \n    <Route\n      {...rest}\n      render={props => \n        ((!isPageReady) || (!isLoadReady && !isLoggedin)) ? (null) : (\n          (isLoggedin) ? (\n            isVerified || (isRedirect == \"Verification\") || (isRedirect == \"Register\") ? (\n              (pageRole.includes(userType) || pageRole == 'all') ? (\n                (userType == 'candidate') ? (\n                  //isCompleted || (isRedirect == \"Verification\") || (isRedirect == \"Register\") ? (\n                    (isRedirect == \"Verification\" && isVerified) ? <Redirect to=\"/\" /> : (\n                                      (isRedirect == \"Register\" && isCompleted) ? <Redirect to=\"/\" />  \n                                                                                  : <Component {...rest} {...props} />)\n                  //) : (\n                  //  <Redirect to=\"/candidate/register\" />\n                  //)\n                ) : ( (isRedirect == \"Verification\" && isVerified) ? <Redirect to=\"/\" /> : (\n                                      (isRedirect == \"Register\" && isCompleted) ? <Redirect to=\"/\" />  \n                                                                                  : <Component {...rest} {...props} />)\n                )\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            ) : (\n              <Redirect to=\"/verification\" />\n            )\n          ) : (\n            <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n          )\n        )\n      }\n    />\n  );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  const { userLoading,isLoggedin,userType,userData,candidateData, } = state.auth;\n  return { userLoading,isLoggedin,userType,userData,candidateData }\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps\n  )(PrivateRoute)\n);\n","/home/ubuntu/environment/jobslab-web/src/app/general/NotFound.js",["2409"],"import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\nclass NotFound extends Component {\n  componentDidMount() {\n    //this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n  }\n\n  render() {\n    return (\n      <div className=\"app-wrapper termsofuse\">\n        <Helmet>\n              <title>404 Not Found | JobsLab</title>\n        </Helmet>\n        <div className=\"termsofuse-imgcontainer faq\">\n          <div className=\"termsofuse-wordcontainer\">\n            <h3>404 Not Found</h3>\n          </div>\n          <div className=\"color-overlay termsofuse\"></div>\n          <img src={encodeURI(WEB_IMAGE_URL+\"faq/Canva+-+Office+desk+(1).jpg\")}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NotFound;","/home/ubuntu/environment/jobslab-web/src/app/job/JobList.js",[],"/home/ubuntu/environment/jobslab-web/src/app/job/Job.js",[],"/home/ubuntu/environment/jobslab-web/src/app/admin/AdminHome.js",["2410","2411","2412"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport LoginContent from 'components/auth/LoginContent';\n\nimport Button from '@material-ui/core/Button';\nimport IntlMessages from 'util/IntlMessages';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes'\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\n\nimport { JOBSLAB_ICON_URL } from 'constants/PictureUrl';\n\nclass AdminHome extends Component {\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    \n    if (this.props.userType==\"admin\")\n      this.props.history.push(\"/admin/dashboard\");\n  }\n  \n  render() {\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"home-wrapper login\">\n      <div className=\"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">\n        <Helmet>\n            <title>JobsLab Admin</title>\n        </Helmet>\n        <div className=\"app-login-main-content\">\n\n          <div className=\"app-logo-content d-flex align-items-center justify-content-center\">\n            <Link className=\"logo-lg\" to=\"/\" title=\"Jambo\">\n              <img style={{'width': '200px'}} src={JOBSLAB_ICON_URL+\"jobslab_white.png\"} alt=\"Jobslab\" title=\"Jobslab\"/>\n            </Link>\n          </div>\n\n          <div className=\"app-login-content\">\n            <div className=\"app-login-header mb-4\">\n              <h1><IntlMessages id=\"appModule.email\"/></h1>\n            </div>\n            \n            <LoginContent isPopup={false} />\n          </div>\n\n        </div>\n      </div>\n      </div>\n      </div>\n      \n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(AdminHome));","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminDashboard.js",[],"/home/ubuntu/environment/jobslab-web/src/app/admin/AdminClientList.js",["2413","2414","2415","2416"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\n\nimport AdminTable from 'components/AdminTable';\nimport TrueFalseIcon from 'components/TrueFalseIcon';\n\nimport { Helmet } from 'react-helmet';\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport * as notification from 'actions/Notification';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\n\n\nvar tableFields = [\n  //{\"title\":\"Update Date\", \"columnName\":\"\"},\n  {\"title\":\"Company\", \"columnName\":\"\"},\n  {\"title\":\"Name\", \"columnName\":\"\"},\n  {\"title\":\"Email\", \"columnName\":\"\"},\n  {\"title\":\"Phone\", \"columnName\":\"\"},\n  {\"title\":\"Verified\", \"columnName\":\"\"},\n  {\"title\":\"\", \"columnName\":\"\"}\n]\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass AdminClientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      hasMore: false,\n      pageReady: false,\n      company: null,\n      clientList: [],\n    }\n  }\n\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ loader: false, pageReady: true });\n      this.getClientList(\"\");\n    }, 1000);\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    if(name == 'company' )\n      this.getClientList(value && value.name ? value.name : \"\")\n    console.log(value);\n    this.setState({ [name]: value });\n  }\n  \n\n  getClientList = (companyName) => {\n\n    if(this.state.pageReady)\n    {\n      var data = {};\n      if(companyName)\n        data = {company : companyName};\n      axios.post('/api/admins/get/client/list/more', data)\n        .then(resp => {\n          if(resp.data.isSuccess)\n          {\n            this.setState({ \n              clientList: resp.data.client_list\n            });\n            console.log(this.state.client);\n          }\n        })\n    }\n    \n  }\n  \n  verifyClient = (clientId) => {\n\n    if(clientId)\n    {\n      const data = {\n      clientId: clientId\n      };\n      axios.post('/api/admins/set/client/verify', data)\n      .then(res => {\n        console.log(res.data);\n        if (res.data.isSuccess) {\n          notification.success(\"You have approved successfully.\");\n          this.getClientList( this.state.company ? this.state.company.value : \"\" );\n        }\n        else {\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n      .catch(function (err) {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        console.log(err);\n      });\n    }\n  }\n  \n  \n  render() {\n    const { loader } = this.state;\n    const companyList = this.props.companyList ? this.props.companyList : [];\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.name ? option.name : \"\")),\n    });\n    \n    var items = [];\n    this.state.clientList.map((client, i) => {\n      items.push(\n                  <StyledTableRow key={i}>\n                    {/*<StyledTableCell align=\"center\">{client && client._id && client._id.updatedAt ? moment(client._id.updatedAt).format(\"YYYY/MM/DD\") : \"\"}</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">{client && client.company ? client.company : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{client && client._id && client._id.name ? client._id.name.firstName + \" \" + client._id.name.lastName : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{client && client._id && client._id.email ? client._id.email : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{client && client._id && client._id.phone ? client._id.phone.dial + \" \" + client._id.phone.number : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{client && client._id && <TrueFalseIcon checker={client._id.isVerified} /> /*client._id.isVerified ? \"Yes\" : \"No\"*/}</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                    {\n                      client && client._id && !client._id.isVerified &&\n                       <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.verifyClient(client && client._id && client._id._id ? client._id._id : \"\")}>\n                          Approve\n                       </Button>\n                    }\n\n                    </StyledTableCell>\n                </StyledTableRow>\n      )\n    });\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div>\n          <Helmet>\n              <title>My Client List | JobsLab</title>\n          </Helmet>\n          <div className=\"row\" style={{'z-index': '1'}}>\n              <div className=\"col-4 mb-4 mt-2\">\n                    <Autocomplete\n                      value={this.state.company}\n                      options={companyList ? companyList : []}\n                      getOptionLabel={option => option.name}\n                      filterOptions={filterOptions}\n                      id=\"company\"\n                      renderInput={params => (\n                        <TextField {...params} label=\"Company\" fullWidth />\n                      )}\n                      onChange={(e, value) => this.autocompleteChange(e, value, 'company')}\n                    />\n                  </div>\n          </div>\n          \n          <AdminTable hasMore={this.state.hasMore}\n                      getMoreItems={this.getClientList.bind(this)}\n                      tableFields={tableFields}\n                      items={items}\n          />\n          \n              \n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { listLoading, companyList} = state.list\n  return { \n    listLoading,\n    companyList,\n  }\n};\n\nexport default connect(mapStateToProps, null)(AdminClientList)\n","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminCompanyList.js",["2417","2418","2419"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\n\nimport AdminTable from 'components/AdminTable';\nimport TrueFalseIcon from 'components/TrueFalseIcon';\n\nimport { Helmet } from 'react-helmet';\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport * as notification from 'actions/Notification';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport { requestInitList } from 'actions/List';\n\nvar tableFields = [\n  //{\"title\":\"Update Date\", \"columnName\":\"\"},\n  {\"title\":\"Company\", \"columnName\":\"\"},\n  {\"title\":\"Verified\", \"columnName\":\"\"},\n  {\"title\":\"\", \"columnName\":\"\"},\n  {\"title\":\"\", \"columnName\":\"\"}\n]\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass AdminCompanyList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      hasMore: false,\n      pageReady: false,\n      company: null,\n      companyList: [],\n    }\n  }\n\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ loader: false, pageReady: true });\n      this.getCompanyList(\"\");\n    }, 1000);\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.getCompanyList(value && value.name ? value.name : \"\")\n    console.log(value);\n    this.setState({ [name]: value });\n  }\n  \n\n  getCompanyList = (companyName) => {\n\n    if(this.state.pageReady)\n    {\n      var data = {};\n      if(companyName)\n        data = {company : companyName};\n      axios.post('/api/admins/get/company/list/more', data)\n        .then(resp => {\n          if(resp.data.isSuccess)\n          {\n            this.setState({ \n              companyList: resp.data.company_list\n            });\n            console.log(this.state.client);\n          }\n        })\n    }\n    \n  }\n  \n  verifyCompany = (companyId, verify) => {\n    if(companyId)\n    {\n      const data = {\n      companyId: companyId,\n      verify: verify\n      };\n      axios.post('/api/admins/set/company/verify', data)\n      .then(res => {\n        console.log(res.data);\n        if (res.data.isSuccess) {\n          notification.success(\"Your action is executed successfully.\");\n          this.getCompanyList( this.state.company ? this.state.company.value : \"\" );\n          this.props.requestInitList();\n        }\n        else {\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n      .catch(function (err) {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        console.log(err);\n      });\n    }\n  }\n  \n  \n  render() {\n    const { loader } = this.state;\n    const companyList = this.state.companyList ? this.state.companyList : [];\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.name ? option.name : \"\")),\n    });\n    \n    var items = [];\n    this.state.companyList.map((company, i) => {\n      items.push(\n                  <StyledTableRow key={i}>\n                    {/*<StyledTableCell align=\"center\">{client && client._id && client._id.updatedAt ? moment(client._id.updatedAt).format(\"YYYY/MM/DD\") : \"\"}</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">{company && company.name ? company.name : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{company  && <TrueFalseIcon checker={company.isVerified} /> /*company.isVerified ? \"Yes\" : \"No\"*/}</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                    {\n                      company && !company.isVerified &&\n                       <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.verifyCompany(company && company._id  ? company._id : \"\", \"true\")}>\n                          Verify\n                       </Button>\n                    }\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                    {\n                      company && company.isVerified &&\n                       <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.verifyCompany(company && company._id  ? company._id : \"\", \"false\")}>\n                          Remove\n                       </Button>\n                    }\n                    </StyledTableCell>\n                </StyledTableRow>\n      )\n    });\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div>\n          <Helmet>\n              <title>My Client List | JobsLab</title>\n          </Helmet>\n          <div className=\"row\" style={{'z-index': '1'}}>\n              <div className=\"col-4 mb-4 mt-2\">\n                    <Autocomplete\n                      value={this.state.company}\n                      options={companyList ? companyList : []}\n                      getOptionLabel={option => option.name}\n                      filterOptions={filterOptions}\n                      id=\"company\"\n                      renderInput={params => (\n                        <TextField {...params} label=\"Company\" fullWidth />\n                      )}\n                      onChange={(e, value) => this.autocompleteChange(e, value, 'company')}\n                    />\n                  </div>\n          </div>\n          \n          <AdminTable hasMore={this.state.hasMore}\n                      getMoreItems={this.getCompanyList.bind(this)}\n                      tableFields={tableFields}\n                      items={items}\n          />\n          \n              \n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { listLoading, companyList} = state.list\n  return { \n    listLoading,\n    companyList,\n  }\n};\n\nconst mapDispatchToProps = {\n  requestInitList,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminCompanyList)\n","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminCandidateRegister.js",["2420","2421"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ContainerHeader from 'components/ContainerHeader';\nimport CardBox from 'components/CardBox';\nimport { Helmet } from 'react-helmet';\nimport IntlMessages from 'util/IntlMessages';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AccountInfo from 'components/register/AccountInfo';\nimport BasicInfo from 'components/register/BasicInfo';\nimport DetailInfo from 'components/register/DetailInfo';\nimport ProfilePicture from 'components/register/ProfilePicture';\nimport RegisterConfirmAdmin from 'components/register/RegisterConfirmAdmin';\n\nimport { requestInitUser } from 'actions/Auth';  \n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport { changeNavigationStyle } from 'actions/index';\n\nfunction getSteps() {\n  return ['Account Information', 'Basic Information', 'Detailed Information', /*'Profile Picture', */'Confirm and Finish'];\n}\n\nclass AdminCandidateRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      activeStep: 0,\n      \n      candId: null, //For getUserData use\n      userData: null,\n      candidateData: null,\n    }\n  }\n\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);\n  }\n  \n  getUserData = (userId) => {\n    if (userId) \n      this.setState({ candId: userId });\n    axios.get('/api/admins/get/candidate/resume/'+(this.state.candId ? this.state.candId : userId))\n    .then(res => {\n      if (res.data.isSuccess) {\n        this.setState({\n          userData: res.data.userData,\n          candidateData: res.data.candidateData,\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  handleNext = () => {\n    const {activeStep} = this.state;\n    this.setState({ activeStep: activeStep + 1 });\n  };\n\n  handleBack = () => {\n    const {activeStep} = this.state;\n    this.setState({ activeStep: activeStep - 1 });\n  };\n\n  handleReset = () => {\n    this.setState({ activeStep: 0 });\n  };\n  \n  getStepContent(stepIndex) {\n    const { activeStep } = this.state;\n    const { userData, candidateData } = this.state;\n    \n    switch (stepIndex) {\n      case 0:\n        return <AccountInfo activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} getUserData={this.getUserData} />;\n      case 1:\n        return <BasicInfo activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} candidateData={candidateData} getUserData={this.getUserData} />;\n      case 2:\n        return <DetailInfo activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} candidateData={candidateData} getUserData={this.getUserData} />;\n      /*case 3:\n        return <ProfilePicture activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} userData={userData} getUserData={this.getUserData} />;*/\n      case 3:\n        return <RegisterConfirmAdmin activeStep={activeStep} handleBack={this.handleBack} userData={userData} />;\n  \n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n\n  render() {\n    const steps = getSteps();\n    const { loader, activeStep } = this.state;\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress />\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <ContainerHeader title=\"Candidate Registration\" /*match={match}*//>\n          <Helmet>\n              <title>Candidate Register | JobsLab</title>\n          </Helmet>\n          <div className=\"row mb-md-3\">\n            <CardBox styleName=\"col-lg-12\" childrenStyle=\"d-flex justify-content-center\"\n                     heading={<IntlMessages\n                       id=\"component.stepper.horizontalLinearAlternativeLabel\"/>}\n                     headerOutside>\n              <div className=\"w-100\">\n                <Stepper activeStep={activeStep} alternativeLabel className=\"horizontal-stepper-linear\">\n                  {steps.map((label, index) => {\n                    return (\n                      <Step key={label} className={`horizontal-stepper ${index === activeStep ? 'active' : ''}`}>\n                        <StepLabel className=\"stepperlabel\">{label}</StepLabel>\n                      </Step>\n                    );\n                  })}\n                </Stepper>\n                <div className=\"mx-0 mx-md-5\">\n                  {this.getStepContent(activeStep)}\n                </div>\n              </div>\n            </CardBox>\n          </div>\n        </div>\n        \n        }\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  changeNavigationStyle\n}\n\nexport default connect(null, mapDispatchToProps)(AdminCandidateRegister);\n","/home/ubuntu/environment/jobslab-web/src/app/user/UserSettings.js",[],"/home/ubuntu/environment/jobslab-web/src/app/user/Login.js",["2422","2423","2424","2425","2426"],"import React, { Component } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport axios from \"axios\";\nimport Fade from 'react-reveal/Fade';\nimport { LinkedInLoginButton } from \"react-social-login-buttons\";\n\nimport LoginContent from 'components/auth/LoginContent';\nimport LoginForm from 'components/popup/LoginForm';\n\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { JOBSLAB_ICON_URL, WEB_IMAGE_URL } from 'constants/PictureUrl';\n\n//import { FadeInOut } from 'react-responsive-ui';\nimport { requestInitUser } from 'actions/Auth';  \n\nvar queryString = require('query-string');\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      isLoading: false,\n      email: '',\n      password: '',\n      redirectUrl: null, //URL with Redirect param\n      redirectToPrevPage: false, //Private Route Redirect\n      resetPwdModalIsOpen: false,\n    };\n  }\n  \n  componentDidMount() {\n    console.log(this.props.location);\n    var params = queryString.parse(this.props.location.search);\n    if (params.redirect) {\n      console.log(params.redirect)\n      this.setState({redirectUrl: params.redirect});\n    }\n    /*if (this.props.match.params.refId) {\n      console.log('has referral id');\n      console.log(this.props.match.params.refId);\n    }*/\n  }\n  \n  textboxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  \n  redirectToPrevPage = () => {\n    this.setState({ redirectToPrevPage: true });\n  }\n  \n  /*formSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({ isLoading: true });\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    \n    console.log(\"start to login\");\n    axios.post('/api/auth/login', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        console.log(\"Before updateUserStatus in LoginForm\");\n        //this.props.closeModal();\n        this.props.dispatch(requestInitUser());\n        this.setState({ email: '', password: '' });\n\n        console.log(\"After updateUserStatus in LoginForm\")\n        if (this.state.redirectUrl)\n          this.props.history.push(this.state.redirectUrl);\n        else if (this.props.location.state != null)\n          this.setState({ redirectToPrevPage: true });\n        else {\n          if (res.data.role == 'candidate') {\n            this.props.history.push('/candidate/dashboard');\n          }\n          else if (res.data.role == 'client') {\n            this.props.history.push('/client/dashboard');\n          }\n          else if (res.data.role == 'admin') {\n            this.props.history.push('/admin/dashboard');\n          }\n        }\n      }\n      else {\n        this.setState({ isLoading: false });\n        alert(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }*/\n  \n  openModal = (e) => {\n    e.preventDefault();\n    this.setState({ resetPwdModalIsOpen: true });\n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name] : false });\n  }\n\n  render() {\n    let { from } = (this.props.location.state!=null) && this.props.location.state;\n    if (this.state.redirectToPrevPage) return <Redirect to={from} />;\n    \n    return (\n      <div className=\"home-wrapper login\">\n      \n          <div className=\"login-imgcontainer responsive\">\n          <Fade duration={2000}>\n            <div className=\"login-lhs\">\n              <div className=\"login-content fullpage\">\n                  <div className=\"login-header fullpage\">\n                    <h3>User Login</h3>\n                  </div>\n                  <div className=\"login-form\">\n                    <LoginContent isPopup={false} redirectUrl={this.props.redirectUrl} redirectToPrevPage={this.redirectToPrevPage} />\n                    <div className=\"mt-3\">\n                      <Link title=\"Reset Password\">\n                        <a onClick={(e) => this.openModal(e)}> Forgot Password?</a>\n                      </Link>\n                    </div>\n                    <div className=\"extra-login\">\n                \t\t\t<span className=\"or\">OR</span>\n                \t\t\t<div className=\"login-social\">\n                \t\t\t\t<div className=\"inlineBtn-Container\">\n                          <a href='/api/auth/linkedin'>\n                    \t      <LinkedInLoginButton>\n                    \t        <span>Sign in with Linkedin</span>\n                    \t      </LinkedInLoginButton>\n                    \t    </a>\n                    \t  </div>\n                \t\t\t</div>\n                \t\t</div>\n                  </div>\n                  {/*<div className=\"login-form\">\n                    <form onSubmit={this.formSubmit}>\n                      <fieldset>\n                        <div id=\"test\" className=\"form-group\">\n                          <input className=\"form-control form-control-lg\" \n                          type=\"text\" name=\"email\" placeholder=\"Email\" \n                          value={this.state.email} onChange={this.textboxChange} />\n                        </div>\n                        <div className=\"form-group login\">\n                          <input className=\"form-control form-control-lg\" \n                          type=\"password\" name=\"password\" placeholder=\"********\" \n                          value={this.state.password} onChange={this.textboxChange} />\n                        </div>\n                        <div className=\"form-group d-flex justify-content-between align-items-center\">\n                          <div>\n                            <Link href=\"/app-module/forgot-password-1\" title=\"Reset Password\">\n                              <a onClick={(e) => this.openModal(e)}> Forgot Password?</a>\n                            </Link>\n                          </div>\n                        </div>\n            \n                        <div className=\"login-btn fullpage\">\n                          <button className=\"btn jr-btn-rounded btn-primary btn-rounded fullpage\" type=\"submit\" disabled={this.state.isLoading}> {this.state.isLoading && <i className='fa fa-spinner fa-spin' />} Sign In</button>\n                        </div>\n                      </fieldset>\n                    </form>\n                    <div className=\"extra-login\">\n                \t\t\t<span className=\"or\">OR</span>\n                \t\t\t<div className=\"login-social fullpage\">\n                \t\t\t\t<div className=\"inlineBtn-Container\">\n                          <a href='/api/auth/linkedin'>\n                    \t      <LinkedInLoginButton>\n                    \t        <span>Sign in with Linkedin</span>\n                    \t      </LinkedInLoginButton>\n                    \t    </a>\n                    \t  </div>\n                \t\t\t</div>\n                \t\t</div>\n                  </div>*/}\n                </div>\n              </div>\n            </Fade>\n            <img className=\"login-bg\" src={encodeURI(WEB_IMAGE_URL+\"login/login.jpg\")} alt=\"\" />\n            </div>\n        <LoginForm isOpen={this.state.resetPwdModalIsOpen} activeStep={1} closeModal={() => this.closeModal('resetPwdModalIsOpen')} />\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login);\n","/home/ubuntu/environment/jobslab-web/src/app/user/PasswordReset.js",["2427","2428","2429"],"import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IntlMessages from 'util/IntlMessages';\nimport { Helmet } from 'react-helmet';\nimport axios from \"axios\";\nimport * as notification from 'actions/Notification';\nimport LoginForm from 'components/popup/LoginForm';\nimport { JOBSLAB_ICON_URL } from 'constants/PictureUrl';\n\n\nclass PasswordReset extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      password2: '',\n      loginModalIsOpen: false,\n      loader: true,\n    }\n    \n  }\n  \n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    var token = this.props.match.params.token;\n    console.log(this.props.match.params.token);\n\n    const data = {\n      token: token,\n    };  \n    \n    axios.post('/api/auth/token/verify', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        setTimeout(() => {\n          this.setState({ loader: false });\n        }, 1000);\n      }\n      else {\n        this.props.history.push('/');\n        notification.error(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n    \n  }\n  \n  textboxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  \n  resetPassword = () => {\n    const data = {\n      password: this.state.password,\n      password2: this.state.password2,\n      token: this.props.match.params.token,\n    };    \n    \n    axios.post('/api/auth/password/change', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"Password has been reset. Please log in again.\");\n        this.setState({\n          loginModalIsOpen: true,\n        });\n      } else {\n        notification.error(res.data.msg);\n        this.setState({loader: false});\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });  \n  };\n  \n  openModal = (modalType) => {\n    if(modalType == 'login')\n      this.setState({loginModalIsOpen: true, signupModalIsOpen: false});\n  }\n \n  closeModal = (name) => {\n    this.setState({ [name]: false });\n  }\n\n  render() {\n    const { loader } = this.state;\n    return (\n      <div className=\"login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">\n      { loader\n        ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div>\n        :\n        <div className=\"login-content\">\n          <div className=\"login-header\">\n            <Link to=\"/\" title=\"JobsLab\">\n              <span onClick={this.closePopup}>\n                <a className=\"app-logo\">\n                <img\n                  src={encodeURI(JOBSLAB_ICON_URL+\"jobslab_blue.png\")}\n                  alt=\"JobsLab\" title=\"JobsLab\"/></a>\n              </span>\n            </Link>\n          </div>\n    \n          <div className=\"mb-2\">\n            <h2>Reset Password</h2>\n          </div>\n    \n          <div className=\"login-form\">\n            <form method=\"post\" action=\"/\">\n              <TextField\n                type=\"password\"\n                id=\"required\"\n                name=\"password\"\n                label=\"New Password\"\n                value={this.state.password} \n                onChange={this.textboxChange}\n                fullWidth\n                defaultValue=\"\"\n                margin=\"normal\"\n                className=\"mt-0 mb-4\"\n              />\n    \n              <TextField\n                type=\"password\"\n                id=\"required\"\n                name=\"password2\"\n                label=\"Confirm New Password\"\n                value={this.state.password2} \n                onChange={this.textboxChange}\n                fullWidth\n                defaultValue=\"\"\n                margin=\"normal\"\n                className=\"mt-0 mb-4\"\n              />\n    \n              <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={this.resetPassword}>\n                Reset Password\n              </Button>\n            </form>\n          </div>\n        </div>\n      }\n      <LoginForm isOpen={this.state.loginModalIsOpen} closeModal={() => this.closeModal('loginModalIsOpen')} />\n      </div>\n    )\n  }\n}\n\nexport default PasswordReset;","/home/ubuntu/environment/jobslab-web/src/app/general/FAQ.js",["2430","2431","2432"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContainerHeader from 'components/ContainerHeader';\nimport { Helmet } from 'react-helmet';\n\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\n\n\nclass FAQ extends Component {\n\n  componentDidMount() {\n    //this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n  }\n\n  render() {\n    return (\n      <div className=\"app-wrapper termsofuse\">\n        <Helmet>\n              <title>FAQ | JobsLab</title>\n        </Helmet>\n        <div className=\"termsofuse-imgcontainer faq\">\n          <div className=\"termsofuse-wordcontainer\">\n            <h3>Frequently Asked Questions</h3>\n          </div>\n          <div className=\"color-overlay termsofuse\"></div>\n          <img src={encodeURI(WEB_IMAGE_URL+\"faq/Canva+-+Office+desk+(1).jpg\")}/>\n        </div>\n        <div className=\"termsofuse-padding faq\">\n        <div className=\"termofuse-wordbox\">\n          \n          <div>\n          <h3>\n          1. I have completed registration. What’s next?\n          </h3>\n          <p>\n          Once you have completed your profile on JobsLab, our algorithms will match you against ALL open jobs. You will see all matching jobs on your dashboard and be able to apply to them with a simple click.Just sit tight and let our algorithm and our career experts do the work!\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          2. I was not matched to the job I applied for and now I don’t see any matching jobs on my dashboard. What do I do now?\n          </h3>\n          <p>\n          Don’t worry if you do not see any matching jobs. We will continue to match you against all new jobs, as they are created. You will be notified via email or SMS as soon as a new job matching your profile is available. Meanwhile, we recommend you to visit our job advice forum to get insights and further job search support.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          3. I received an email or SMS saying I am matched to a job. What do I do next?\n          </h3>\n          <p>\n          Once you are matched to a role, you can choose to share your profile with the employer by clicking on apply or you can choose to decline the role. The Employer will only receive your application if you click apply on a matched role. You can also reach out to our career experts for more information on the job we’ve matched for you.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          4. Why was my application not retained? I was not given any reason for rejection.\n          </h3>\n          <p>\n          JobsLab matches candidates’ unique profile, their skills and preferences to the detailed requirements of the job. If the application is not retained, it is more an indication of fit for a particular requirement and not of capabilities. Your profile will continue to be screened against all our current and future openings and you will be notified when a suitable role comes up soon!\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          5. I had all the pre-requisites mentioned in the job description. Yet your AI did not match me to the role. Why is that?\n          </h3>\n          <p>\n          JobsLab matches candidates’ unique profile, their skills and preferences to the detailed requirements of the recruiter. If the application is not retained, it is more an indication of fit for a particular requirement and not of capabilities. Your profile will continue to be screened against all our current and future openings and you will be notified when a suitable role comes up.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          6. I thought I would be good at the role. I got a pretty quick rejection with very little feedback as to why.\n          </h3>\n          <p>\n          JobsLab matches candidates’ unique profile, their skills and preferences to the detailed requirements of the recruiter. If the application is not retained, it is more an indication of fit for a particular requirement and not of capabilities. Your profile will continue to be screened against all our current and future openings and you will be notified when a suitable role comes up.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          7. Each time I clicked SUBMIT, it indicates that the submission is successful, then why does it always show “0 applications” on my dashboard?\n          </h3>\n          <p>\n          Once your profile is complete, you are automatically matched against all open roles and notified when a suitable role comes up. You do not need to resubmit your CV every time! The “Applications” you see on the dashboard are the ones you apply to after you have been matched by our algorithms and our career experts to a specific open job.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          8. I saw your ad in a jobsite, but could not find it after logging into the JobsLab.\n          </h3>\n          <p>\n          Once your profile is complete, you don’t need to apply for jobs on JobsLab as you are automatically matched against all open roles. That’s why you don’t see the jobs page on your dashboard.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          9. How would I know if jobs listed are open to foreigners as well?\n          </h3>\n          <p>\n          Once your profile is complete, the algorithm takes into account your visa status and the employers requirements.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          10. Are there any humans doing the matching?\n          </h3>\n          <p>\n          Hiring on our platform is based on Augmented Intelligence meaning that we combine machine learning algorithms and experienced career experts. Our algorithms are based on decades of specialist recruitment experience and use data driven insights to remove bias in the recruiting process and match you to roles where you have a high chance of securing an interview.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          11. Do you also help older candidates find jobs?\n          </h3>\n          <p>\n          We at JobsLab strive to keep the hiring process as transparent and unbiased as possible. While matching roles, age is not a factor. The AI takes into consideration important factors such as skills, experience, preferences and working style and matches them to employer requirements. We will be honoured to help someone so experienced find the right job!\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          12. How do I claim my new job reward?\n          </h3>\n          <p>\n          We at JobsLab believe in celebrating your success with a dream holiday. Upon passing your probation with your employer you will be automatically sent a travel voucher for you to use to buy a holiday anywhere in the world! You will receive this voucher either electronically or it will be posted to the address that you provided to JobsLab. Please see the terms and conditions of use issued by our travel partner.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          13. I have been referred by a friend to a job opening on JobsLab, what do I do now?\n          </h3>\n          <p>\n          Your job recommendation through a friend will be added to your dashboard. Simply review the job they thought was great for you and decide whether you wish to apply. If you have not registered to JobsLab, you’ll need to register to review the position. Referrals on JobsLab can be made anonymously, so don’t be surprised if someone you know has secretly admired you! Our career experts are available to speak with you before you make a decision as to whether to apply for the job that was referred to you.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          14. How do I refer someone to a job?\n          </h3>\n          <p>\n          Ever wanted to try your hand at being a talent spotter? If you see a job on our site and you know someone who’d be perfect for it, simply click on the refer button on the job description and decide whether you would like to personalise the invite or whether to remain anonymous. Referrals on JobsLab are extremely rewarding and helps to show your admiration for someone’s skills! See whether you can beat our AI in making the match.\n          </p>\n          </div>\n          \n          <div>\n          <h3>\n          15. How do I claim my referal awards?\n          </h3>\n          <p>\n          JobsLab believe in supporting a ‘gig economy’ and pay substantial rewards for your ability to identify talent. When your referred candidate passes probation, we’ll send you a cheque to the address that you have provided us in your profile page. If a candidate has been referred by several sources, the first referee on our system will be issued the reward. You will be notified the good news when the candidate gets the job so that you can use some of the referral money to celebrate with them! Our admin team will be on hand to support you to collect your reward.\n          </p>\n          </div>\n          \n          \n          \n          \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FAQ;","/home/ubuntu/environment/jobslab-web/src/app/general/ContactUs.js",["2433","2434","2435","2436","2437"],"import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Helmet } from 'react-helmet';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport * as notification from 'actions/Notification';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\nclass ContactUs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      subject: '',\n      content: '',\n      \n      isFirstNameInput: true,\n      isLastNameInput: true,\n      isEmailInput: true,\n      isPhoneInput: true,\n      isSubjectInput: true,\n      isContentInput: true,\n      \n      isSubmitSuccess: false,\n    };\n  }\n\n  componentDidMount() {\n    //this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n  }\n  \n  inputValidate(name) {\n    switch (name) {\n      case 'firstName':\n        this.setState({ isFirstNameInput: this.state.firstName ? true : false });\n        break;\n      case 'lastName':\n        this.setState({ isLastNameInput: this.state.lastName ? true : false });\n        break;\n      case 'email':\n        this.setState({ isEmailInput: this.state.email ? true : false });\n        break;\n      case 'phone':\n        this.setState({ isPhoneInput: this.state.phone ? true : false });\n        break;\n      case 'subject':\n        this.setState({ isSubjectInput: this.state.subject ? true : false });\n        break;\n      case 'content':\n        this.setState({ isContentInput: this.state.content ? true : false });\n        break;\n      default: \n        this.setState({\n          isFirstNameInput: this.state.firstName ? true : false,\n          isLastNameInput: this.state.lastName ? true : false,\n          isEmailInput: this.state.email ? true : false,\n          isPhoneInput: this.state.phone ? true : false,\n          isSubjectInput: this.state.subject ? true : false,\n          isContentInput: this.state.content ? true : false\n        });\n    }\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value }, () => {\n      switch (name) {\n        case 'firstName':\n          this.setState({ isFirstNameInput: true });\n          break;\n        case 'lastName':\n          this.setState({ isLastNameInput: true });\n          break;\n        case 'email':\n          this.setState({ isEmailInput: true });\n          break;\n        case 'phone':\n          this.setState({ isPhoneInput: true });\n          break;\n        case 'subject':\n          this.setState({ isSubjectInput: true });\n          break;\n        case 'content':\n          this.setState({ isContentInput: true });\n          break;\n      }\n    });\n  }\n  \n  formSubmit = (e) => {\n    e.preventDefault();\n    \n    this.setState({\n      isFirstNameInput: this.state.firstName ? true : false,\n      isLastNameInput: this.state.lastName ? true : false,\n      isEmailInput: this.state.email ? true : false,\n      isPhoneInput: this.state.phone ? true : false,\n      isSubjectInput: this.state.subject ? true : false,\n      isContentInput: this.state.content ? true : false,\n    }, () => {\n      const { isFirstNameInput, isLastNameInput, isEmailInput, isPhoneInput, isSubjectInput, isContentInput } = this.state;\n      if (isFirstNameInput && isLastNameInput && isEmailInput, isPhoneInput && isSubjectInput && isContentInput) {\n        const data = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          phone: this.state.phone,\n          subject: this.state.subject,\n          content: this.state.content,\n        };\n        \n        axios.post('/api/help/contact', data)\n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({ isSubmitSuccess: true });\n          }\n          else {\n            notification.error(res.data.msg);\n          }\n        })\n        .catch(function(err) {\n          console.log(err);\n        });\n      }\n    });\n  }\n\n  render() {\n    const { firstName, lastName, email, phone, subject, content } = this.state;\n    const { isFirstNameInput, isLastNameInput, isEmailInput, isPhoneInput, isSubjectInput, isContentInput, isSubmitSuccess } = this.state;\n    \n    return (\n      <div className=\"app-wrapper contactus\">\n      <div className=\"contactus-bg\">\n        <img src={encodeURI(WEB_IMAGE_URL+\"contact/contactus.jpg\")} alt=\"\" />\n      </div>\n          <Helmet>\n              <title>Contact Us | JobsLab</title>\n          </Helmet>\n      <div className=\"animated slideInUpTiny animation-duration-3 paddingtop\">\n      {/*<ContainerHeader title={\"Contact Us\"}/>*/}\n      <div className=\"row\">\n        <div className=\"col-lg-9 col-md-8 col-sm-7 col-12\">\n          <h3 className=\"contactus-title\">Keep In Touch</h3>\n          <form action=\"\" className=\"contact-form contactus\">\n            <div className=\"row\">\n              <div className=\"col-md-6 col-12\">\n                <TextField\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  value={firstName}\n                  onChange={this.textboxChange}\n                  fullWidth\n                  variant=\"filled\"\n                  error={!isFirstNameInput}\n                  helperText={!isFirstNameInput && \"Required\"}\n                  InputProps={{\n                    style: {\n                      backgroundColor: \"white\",\n                      borderRadius: 4\n                    }    \n                  }}\n                />\n              </div>\n\n              <div className=\"col-md-6 col-12\">\n                <TextField\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  value={lastName}\n                  onChange={this.textboxChange}\n                  fullWidth\n                  variant=\"filled\"\n                  error={!isLastNameInput}\n                  helperText={!isLastNameInput && \"Required\"}\n                  InputProps={{\n                    style: {\n                      backgroundColor: \"white\",\n                      borderRadius: 4\n                    }    \n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4\">\n              <div className=\"col-md-6 col-12\">\n                <TextField\n                  name=\"email\"\n                  label=\"Email\"\n                  value={email}\n                  onChange={this.textboxChange}\n                  fullWidth\n                  variant=\"filled\"\n                  error={!isEmailInput}\n                  helperText={!isEmailInput && \"Required\"}\n                  InputProps={{\n                    style: {\n                      backgroundColor: \"white\",\n                      borderRadius: 4\n                    }    \n                  }}\n                />\n              </div>\n\n              <div className=\"col-md-6 col-12\">\n                <TextField\n                  name=\"phone\"\n                  label=\"Phone\"\n                  value={phone}\n                  onChange={this.textboxChange}\n                  fullWidth\n                  variant=\"filled\"\n                  error={!isPhoneInput}\n                  helperText={!isPhoneInput && \"Required\"}\n                  InputProps={{\n                    style: {\n                      backgroundColor: \"white\",\n                      borderRadius: 4\n                    }    \n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4\">\n              <div className=\"col-12\">\n                <TextField\n                  name=\"subject\"\n                  label=\"Subject\"\n                  value={subject}\n                  onChange={this.textboxChange}\n                  fullWidth\n                  variant=\"filled\"\n                  error={!isSubjectInput}\n                  helperText={!isSubjectInput && \"Required\"}\n                  InputProps={{\n                    style: {\n                      backgroundColor: \"white\",\n                      borderRadius: 4\n                    }    \n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4\">\n              <div className=\"col-12\">\n                <TextField\n                  className=\"jobTextArea\"\n                  name=\"content\"\n                  label=\"How can we help you?\"\n                  value={content}\n                  onChange={this.textboxChange}\n                  fullWidth\n                  variant=\"filled\"\n                  error={!isContentInput}\n                  helperText={!isContentInput && \"Required\"}\n                  InputProps={{\n                    style: {\n                      backgroundColor: \"white\",\n                      borderRadius: 4\n                    }    \n                  }}\n                />\n              </div>\n            </div>\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.formSubmit}>Submit</Button>\n          </form>\n        </div>\n\n        <div className=\"col-lg-3 col-md-4 col-sm-5 col-12 contactus\">\n          <div className=\"contact-block jr-card py-5 px-4\">\n            <ul className=\"contact-info vertical\">\n              <li>\n                <i className=\"zmdi zmdi-pin zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">JOBSLAB OFFICE</h4>\n                  <address className=\"mb-0\">\n                    17/F, Tesbury Center\n                    <br/>\n                    28 Queen's Road East\n                    <br/>\n                    Wan Chai, Hong Kong\n                  </address>\n                </div>\n              </li>\n\n              <li>\n                <i className=\"zmdi zmdi-phone zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">Phone</h4>\n                  <div><a className=\"jr-link text-primary disable-link\" href=\"tel:+85265733411\">+852 6573 3411</a></div>\n                </div>\n              </li>\n\n              <li>\n                <i className=\"zmdi zmdi-email zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">E-mail</h4>\n                  <div><a className=\"text-primary jr-link\" href=\"mailto:info@jobslab.io\">info@jobslab.io</a>\n                  </div>\n                  <div className=\"icons-wrapper\">\n                    <a href=\"https://www.facebook.com/jobslab.io\" target=\"_blank\" className=\"icon facebook-icon jr-link\">\n                      <i className=\"zmdi zmdi-facebook\"/>\n                    </a>\n                    \n                    <a href=\"https://www.linkedin.com/company/jobslab\" target=\"_blank\" className=\"icon linkedin-icon jr-link\">\n                      <i className=\"zmdi zmdi-linkedin\"/>\n                    </a>\n\n                    <a href=\"https://twitter.com/jobslabjobs\" target=\"_blank\" className=\"icon twitter-icon jr-link\">\n                      <i className=\"zmdi zmdi-twitter\"/>\n                    </a>\n\n                    {/*<span className=\"icon google-icon jr-link\">\n                      <i className=\"zmdi zmdi-google-plus\"/>\n                    </span>*/}\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <SweetAlert show={isSubmitSuccess} success title={\"Message Sent\"/*<IntlMessages id=\"sweetAlerts.goodJob\"/>*/}\n                onConfirm={ () => this.setState({ isSubmitSuccess: false }) }>\n      Your message has been sent. Our team will contact you shortly.\n      {/*<IntlMessages id=\"sweetAlerts.btnClicked\"/>*/}\n    </SweetAlert>\n    </div>\n    )\n  }\n}\n\nexport default ContactUs;","/home/ubuntu/environment/jobslab-web/src/app/resume/Resume.js",["2438","2439","2440","2441","2442","2443","2444"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { Element } from 'react-scroll';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport About from \"components/profile/About/index\";\nimport Biography from \"components/profile/Biography/index\";\nimport Goal from \"components/profile/Goal/index\";\nimport Contact from \"components/profile/Contact/index\";\nimport SkillTag from \"components/profile/SkillTag/index\";\nimport IntroductionVideo from 'components/profile/IntroductionVideo/index';\nimport ProfileHeader from \"components/profile/ProfileHeader/index\";\nimport Career from 'components/profile/Career/index';\nimport Education from 'components/profile/Education/index';\nimport Auxiliary from \"util/Auxiliary\";\nimport { Helmet } from 'react-helmet';\nimport {ResponsiveContainer} from 'recharts';\nimport Widget from \"components/Widget\";\n\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport * as notification from 'actions/Notification';\n\nimport { requestInitUser } from 'actions/Auth';  \n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\n\n//import { RadialChart } from 'recharts';\n\nclass Resume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      \n      userRole: null,\n      userId: null,\n      token: \"token\",\n      userData: null,\n      candidateData: null,\n      \n      uploadedCV: null,\n      isUploadLoading: false,\n      isUploadSuccess: false,\n      \n      isUploadedCareerEdit: [],\n      isUploadedEducationEdit: [],\n      isUploadedAboutEdit: false,\n      isUploadedDescriptionEdit: false,\n      isUploadedSpecialityEdit: false,\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.getUserData();\n    /*setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);*/\n  }\n  \n  componentDidUpdate(prevProps) { //For Upload CV\n    if (this.props.userData !== prevProps.userData) \n      this.setState({ userData: this.props.userData });\n    if (this.props.candidateData !== prevProps.candidateData) \n      this.setState({ candidateData: this.props.candidateData });\n  }\n  \n  \n  getUserData = () => {\n    if (this.props.history.location.pathname==\"/candidate/profile\") {\n      this.setState({\n        loader: false,\n        userRole: 'candidate',\n        token: this.props.userData._id,\n        userData: this.props.userData,\n        candidateData: this.props.candidateData,\n      }, () => this.props.requestInitUser());\n    }\n    else if (this.props.history.location.pathname.includes(\"/applicant\")) {\n      var token = this.props.match.params.token;\n      axios.get('/api/clients/get/encrypted/resume/'+token)\n      .then(res => {\n        if (res.data.isSuccess) {\n          this.setState({\n            //userRole: 'client',\n            token: token,\n            userData: res.data.userData,\n            candidateData: res.data.candidateData,\n          })\n        }\n        else {\n          console.log(res.data)\n          //this.props.history.push(\"/\")\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      })\n      .finally(() => { this.setState({loader:false}) });\n    }\n    else {\n      switch (this.props.userType) {\n        case 'admin':\n          var candId = this.props.match.params.Id;\n          axios.get('/api/admins/get/candidate/resume/'+candId)\n          .then(res => {\n            if (res.data.isSuccess) {\n              this.setState({\n                userRole: 'admin',\n                userData: res.data.userData,\n                candidateData: res.data.candidateData,\n                token: candId\n              });\n            }\n          })\n          .catch(function (err) {\n            console.log(err);\n          })\n          .finally(() => { this.setState({loader:false}) });\n          break;\n        case 'client':\n          var appId = this.props.match.params.Id;\n          axios.get('/api/clients/get/candidate/resume/'+appId)\n          .then(res => {\n            if (res.data.isSuccess) {\n              this.setState({\n                userRole: 'client',\n                userData: res.data.userData,\n                candidateData: res.data.candidateData,\n              })\n            }\n            else {\n              //this.props.history.push(\"/\")\n            }\n          })\n          .catch(function (err) {\n            console.log(err);\n          })\n          .finally(() => { this.setState({loader:false}) });\n          break;\n        default:\n          this.props.history.push(\"/\");\n      }\n    }\n  }\n  \n  cvUpload = (cvFile) => {\n    this.setState({ isUploadLoading: true });\n    \n    const formData = new FormData();\n    if (cvFile != null && cvFile.name &&cvFile.name.toLowerCase().match(/(pdf|doc|docx).*/)) { \n      formData.append('cvFile', cvFile);\n      console.log('start to upload cv');\n      axios.post('/api/candidates/set/resume/upload', formData)\n      .then(res => {\n        if (res.data.isSuccess) {\n          console.log(res.data.cvDataParsed)\n          this.setState({ \n            isUploadLoading: false,\n            isUploadSuccess: true,\n            \n            uploadedCV: (res.data.cvDataParsed==null) ? null : res.data.cvDataParsed,\n            isUploadedCareerEdit: (res.data.cvDataParsed.career==null) ? [] : new Array(res.data.cvDataParsed.career.length).fill(true),\n            isUploadedEducationEdit: (res.data.cvDataParsed.education==null) ? [] : new Array(res.data.cvDataParsed.education.length).fill(true),\n            isUploadedAboutEdit: true,\n            isUploadedDescriptionEdit: true,\n            isUploadedSpecialityEdit: true,\n          });\n        }\n        else {\n          if(res.data.msg)\n            notification.error(res.data.msg);\n          else\n            notification.error(\"Upload CV failed. Please try again later.\");\n          this.setState({ isUploadLoading: false });\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    } else {\n      notification.error(\"Please upload CV in pdf / doc / docx formats.\");\n      this.setState({ isUploadLoading: false });\n    }\n  }\n  \n  cancelUploadCareer = (index) => {\n    let array = [...this.state.isUploadedCareerEdit];\n    if (index !== -1) {\n      array[index] = false;\n      this.setState({isUploadedCareerEdit: array});\n    }\n    {/*this.setState(prevState => ({ \n      uploadedCareer: prevState.uploadedCareer.filter(obj => obj.tempId !== selectedId) \n    }));*/}\n  }\n  \n  cancelUploadEducation = (index) => {\n    let array = [...this.state.isUploadedEducationEdit];\n    if (index !== -1) {\n      array[index] = false;\n      this.setState({isUploadedEducationEdit: array});\n    }\n  }\n  \n  cancelUploadAbout = () => {\n    this.setState({ isUploadedAboutEdit: false })\n  }\n  \n  cancelUploadDescription = () => {\n    this.setState({ isUploadedDescriptionEdit: false })\n  }\n  \n  cancelUploadSpeciality = () => {\n    this.setState({ isUploadedSpecialityEdit: false })\n  }\n  \n  render() {\n    const { loader, userRole, userData, candidateData, token } = this.state;\n    const { uploadedCV, isUploadLoading, isUploadSuccess, isUploadedCareerEdit, isUploadedEducationEdit, isUploadedAboutEdit, isUploadedDescriptionEdit, isUploadedSpecialityEdit } = this.state;\n    const myData = [{angle: 1}, {angle: 5}, {angle: 2}];\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n          candidateData ?\n          <Auxiliary>\n            <Helmet>\n                <title>\n                  {userRole==\"candidate\" ? \"My Profile | Jobslab\" : \n                    ( userData && userData.name \n                      ? userData.name.firstName + \" \" + userData.name.lastName + \"'s Profile | Jobslab\"\n                      : \"JobsLab\" \n                    )\n                  }\n                </title>\n            </Helmet>\n            <ProfileHeader userRole={userRole} userData={userData} candidateData={candidateData} isUploadLoading={isUploadLoading} cvUpload={this.cvUpload}/>\n            <div className=\"jr-profile-content\">\n              <div className=\"row\">\n                <div className=\"col-xl-8 col-lg-8 col-md-7 col-12\">\n                  <Element name=\"about\" className=\"element\">\n                    <About userRole={userRole} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedAboutEdit} cancelUploadEdit={this.cancelUploadAbout} getUserData={this.getUserData} />\n                  </Element>\n                  <Biography userRole={userRole} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedDescriptionEdit} cancelUploadEdit={this.cancelUploadDescription} getUserData={this.getUserData} />\n                  <Element name=\"career\" className=\"element\">\n                    <Career userRole={userRole} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedCareerEdit} cancelUploadEdit={this.cancelUploadCareer} getUserData={this.getUserData} />\n                  </Element>\n                  <Element name=\"education\" className=\"element\">\n                    <Education userRole={userRole} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedEducationEdit} cancelUploadEdit={this.cancelUploadEducation} getUserData={this.getUserData} />\n                  </Element>\n                </div>\n                <div className=\"col-xl-4 col-lg-4 col-md-5 col-12\">\n                  <Element name=\"introductionVideo\" className=\"element\">\n                    <IntroductionVideo\n                        userRole={userRole}\n                        token={token}\n                         //getInVideo={this.getInVideo.bind(this)}\n                       />\n                  </Element>\n                  <Goal userRole={userRole} candidateData={candidateData} getUserData={this.getUserData} />\n                  <Element name=\"speciality\" className=\"element\">\n                    <SkillTag userRole={userRole} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedSpecialityEdit} cancelUploadEdit={this.cancelUploadSpeciality} getUserData={this.getUserData} />\n                  </Element>\n                  { userRole=='admin' && <Element name=\"contact\" className=\"element\">\n                    <Contact userRole={userRole} userData={userData} getUserData={this.getUserData} />\n                  </Element>}\n                </div>\n              </div>\n            </div>\n            <SweetAlert show={isUploadSuccess} success title={\"Congratulations!\"/*<IntlMessages id=\"sweetAlerts.goodJob\"/>*/}\n                        onConfirm={ () => this.setState({ isUploadSuccess: false }) }>\n              Your CV has been uploaded successfully. Please double check the uploaded data and update your profile.\n              {/*<IntlMessages id=\"sweetAlerts.btnClicked\"/>*/}\n            </SweetAlert>\n          </Auxiliary> \n          : <div className=\"jobNotFound\">\n              <span>\n                <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n              </span>\n              <span>\n                Oops! The resume is not found.\n              </span> \n          </div>\n      }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userType, userData, candidateData } = state.auth;\n  return { userType, userData, candidateData };\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Resume));\n","/home/ubuntu/environment/jobslab-web/src/app/application/Application.js",["2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464","2465","2466"],"import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport IntlMessages from 'util/IntlMessages';\nimport { Helmet } from 'react-helmet';\n\nimport CandidateHeader from \"components/application/CandidateHeader\";\nimport JobDescription from \"components/application/JobDescription\";\nimport ClientList from \"components/application/ClientList\";\nimport TimeLine from 'components/application/TimeLine';\nimport OfferForm from 'components/popup/OfferForm';\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport * as notification from 'actions/Notification';\n\nimport {\n  CANDIDATE_INTERESTED,\n  ADMIN_RECOMMENDED,\n  ADMIN_REJECTED,\n  CANDIDATE_WITHDRAWN_1,\n  CLIENT_REJECTED,\n  CANDIDATE_WITHDRAWN_2,\n  SELECTED\n} from 'constants/ApplicationState';\n\nclass Application extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      \n      isWithdrawWarning: false,\n      isRejectWarning: false,\n      offerModalIsOpen: false,\n      \n      candidate: null,\n      job: null,\n      state: 0,\n      history: [],\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.appId != null) {\n      var appId = this.props.match.params.appId;\n      this.getApp(appId);\n    }\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    /*setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);*/\n  }\n  \n  getApp(appId) {\n    axios.get('/api/'+this.props.userType+'s/get/application/'+appId)\n    .then(res => {\n      console.log(res.data)\n      if (res.data.isSuccess) {\n        var job = res.data.application.job;\n        job.refererReward = res.data.refererReward;\n        this.setState({\n          candidate: res.data.application.candidate,\n          job: job,\n          refererReward: res.data.refererReward,\n          state: res.data.application.state,\n          history: res.data.application.history,\n          loader: false,\n        });\n      }\n      else {\n        notification.error(res.data.msg);\n        this.props.history.push('/');\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  withdrawApp = () => {\n    var appId = this.props.match.params.appId;\n    const data = { appId };\n    axios.post('/api/candidates/set/application/withdraw', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have withdrawn this application.\");\n        this.getApp(appId);\n        this.setState({ isWithdrawWarning: false });\n      }\n      else{\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  rejectApp = () => {\n    var appId = this.props.match.params.appId;\n    const data = { appId };\n    axios.post('/api/clients/set/application/reject', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have rejected the applicant.\");\n        this.getApp(appId);\n        this.setState({ isRejectWarning: false });\n      }\n      else{\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  openModal = (modalType) => {\n    switch (modalType) {\n      case 'offer':\n        this.setState({ \n          offerModalIsOpen: true,\n        });\n        break;\n    }\n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name] : false });\n  }\n  \n  completeOffer = () => {\n    var appId = this.props.match.params.appId;\n    this.setState({ \n      offerModalIsOpen: false\n    });\n    this.getApp(appId);\n  }\n  \n  render() {\n    const { userType } = this.props;\n    const { loader, isWithdrawWarning, isRejectWarning, offerModalIsOpen } = this.state;\n    const { candidate, job, state, history, refererReward } = this.state;\n    const appId = this.props.match.params.appId;\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div>\n          { userType!=\"candidate\" && <CandidateHeader appId={appId} candidateData={candidate} /> }\n          { userType == \"candidate\" && \n            <Helmet>\n                <title>\n                  {\"My Application\" + (job && job.jobTitle ? \" - \" + job.jobTitle : \"\") + \" | Jobslab\" }\n                </title>\n            </Helmet>\n          }\n          { (userType==\"client\" || userType==\"admin\") && \n            <Helmet>\n                <title>\n                  {\n                    (candidate && candidate._id && candidate._id.name ? \n                            candidate._id.name.firstName + \" \" + candidate._id.name.lastName + \"'s Application | Jobslab\"\n                            : \"JobsLab\" \n                    )\n                  }\n                </title>\n            </Helmet>\n          }\n          \n          <div className=\"row\">\n            <div className=\"col-12\">\n              <ContainerHeader title={ job && job.jobTitle /*<IntlMessages id=\"sidebar.timeLine.defaultwithIcons\"/>*/} />\n            </div>\n            <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-12\">\n              { job && <JobDescription jobData={job} /> }\n              { job && (userType==\"client\" || userType==\"admin\") && <ClientList clientList={job.client} /> }\n              {/*<TimerView headerColor=\"gradient-primary\"/>*/}\n            </div>\n            <div className=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12\">\n              { userType=='candidate' && \n                <div className=\"d-flex\">\n                  <Button size=\"small\" variant=\"contained\" className=\"ml-auto mb-2\" \n                          startIcon={<DeleteIcon />}\n                          disabled={state==CANDIDATE_WITHDRAWN_1 || state==CANDIDATE_WITHDRAWN_2}\n                          onClick={() => this.setState({ isWithdrawWarning: true })}\n                  >Withdraw</Button>\n                </div>\n              }\n              { userType=='client' || userType=='admin' && \n                <div className=\"d-flex\">\n                  <div className=\"ml-auto mr-2\">\n                    <Button size=\"small\" color=\"primary\" variant=\"contained\" className=\"ml-auto mb-2\" \n                            startIcon={<AssignmentTurnedInIcon />}\n                            disabled={state==CANDIDATE_INTERESTED || state==ADMIN_RECOMMENDED || state==ADMIN_REJECTED || state==CANDIDATE_WITHDRAWN_1 || state==CANDIDATE_WITHDRAWN_2 || state==SELECTED}\n                            onClick={() => this.openModal('offer')}\n                    >Offer</Button>\n                  </div>\n                  <div>\n                    <Button size=\"small\" variant=\"contained\" className=\"ml-auto mb-2\" \n                            startIcon={<DeleteIcon />}\n                            disabled={state==CLIENT_REJECTED}\n                            onClick={() => this.setState({ isRejectWarning: true })}\n                    >Reject</Button>\n                  </div>\n                </div>\n              }\n              <TimeLine appId={appId} jobId={job && job._id} history={history} updateApp={() => this.getApp(appId)}/>\n            </div>\n          </div>\n        </div>\n      }\n        <SweetAlert show={isWithdrawWarning}\n                    warning\n                    showCancel\n                    confirmBtnText={\"Yes, Withdraw It!\"/*<IntlMessages id=\"sweetAlerts.yesDeleteIt\"/>*/}\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\n                    onConfirm={this.withdrawApp}\n                    onCancel={() => this.setState({ isWithdrawWarning: false })}\n        >\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\n        </SweetAlert>\n        <SweetAlert show={isRejectWarning}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, Reject It!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\n                    onConfirm={this.rejectApp}\n                    onCancel={() => this.setState({ isRejectWarning: false })}\n        >\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\n        </SweetAlert>\n        <OfferForm appId={appId} isOpen={offerModalIsOpen} closeModal={this.closeModal} completeOffer={this.completeOffer} />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(Application));\n\n\n","/home/ubuntu/environment/jobslab-web/src/app/general/TermsOfUse.js",["2467","2468","2469","2470","2471"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContainerHeader from 'components/ContainerHeader';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\nclass TermsOfUse extends Component {\n\n  componentDidMount() {\n    //this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n  }\n\n  render() {\n    return (\n      <div className=\"app-wrapper termsofuse\">\n        <Helmet>\n              <title>Terms of Use | JobsLab</title>\n        </Helmet>\n        <div className=\"termsofuse-imgcontainer\">\n          <div className=\"termsofuse-wordcontainer\">\n            <h3>Terms of Use</h3>\n          </div>\n          <div className=\"color-overlay termsofuse\"></div>\n          <img src={encodeURI(WEB_IMAGE_URL+\"terms-of-use/Canva+-+Office+desk.jpg\")}/>\n        </div>\n        <div className=\"termsofuse-padding\">\n        <div className=\"termofuse-wordbox\">\n          {/*<h2>Terms of Use</h2>*/}\n          {/*\n          <h3>Contents</h3>\n          <ul>\n            <li>1. Common Rules</li>\n            <li>2. Individual Rules</li>\n              <ul>\n                <li>2.1 JobsLab Candidates</li>\n                <li>2.2 JobsLab Clients</li>\n              </ul>\n          </ul>\n          */}\n          \n          <div>\n          <h3>1. Accepting these terms</h3>\n          <p>\n          If you access or use the Platform, it means you agree to be bound by all of the terms below. So, before you use the Platform, please read all of the terms. If you don't agree to all of the terms below, please do not use the Platform. Also, if a term does not make sense to you, please let us know by e-mailing&nbsp;\n          <a href=\"mailto:support@jobslab.io?Subject=&Body=\">support@jobslab.io</a>.\n          </p>\n          </div>\n          \n          <div>\n          <h3>2. Changes to these Terms</h3>\n          <p>\n          We reserve the right to modify these Terms at any time. For instance, we may need to change these Terms if we come out with a new feature or for some other reason.\n          </p>\n          <p>\n          Whenever we make changes to these Terms, the changes are effective immediately after we post such revised Terms (indicated by revising the date at the top of these Terms) or upon your acceptance if we provide a mechanism for your immediate acceptance of the revised Terms (such as a click-through confirmation or acceptance button). It is your responsibility to check the JobsLab website for changes to these Terms.\n          </p>\n          <p>\n          If you continue to use the Platform after the revised Terms go into effect, then you have accepted the changes to these Terms.\n          </p>\n          </div>\n          \n          <div>\n          <h3>3. Privacy Policy</h3>\n          <p>\n          For information about how we collect and use information about users of the Platform, please check out our privacy policy available at&nbsp;\n          <a onClick={(e) => this.props.history.push(\"/privacy-policy\")}>Privacy Policy</a>.\n          </p>\n          </div>\n          \n          <div>\n          <h3>4. Third-Party Services</h3>\n          <p>\n          From time to time, we may provide you with links to third party websites or services that we do not own or control. Your use of the Platform may also include the use of applications that are developed or owned by a third party. Your use of such third party applications, websites, and services is governed by that party's own terms of service or privacy policies. We encourage you to read the terms and conditions and privacy policy of any third party application, website or service that you visit or use.\n          </p>\n          </div>\n          \n          <div>\n          <h3>5. Creating Accounts</h3>\n          <p>\n          When you create an account or use another service to log in to the Platform, you agree to maintain the security of your password and accept all risks of unauthorized access to any data or other information you provide to the Platform.\n          </p>\n          <p>\n          If you discover or suspect any Platform security breaches, please let us know as soon as possible.\n          </p>\n          </div>\n          \n          <div>\n          <h3>6. Service Categories & Fees</h3>\n          <span>Service Packages</span>\n          <p>\n          In full consideration for The Jobs Laboratory Limited's (hereafter known as “JobsLab” or the “Company”) provision of Services in placing candidates within Client companies, JobsLab will charge the hiring company a placement fee of a percentage of the selected candidate’s Gross Annual Remuneration Package, including all money payable and benefits offered to the employed candidate, not limited to salary, guaranteed bonus, commission, profit sharing or other specified financial benefits.  The percentage of the placement fee will vary depending on the package the client company has selected.  In the event the bonus and allowances mentioned above cannot be determined, JobsLab will calculate the fee with the consideration that such bonus is equivalent with two-month basis salary.\n          </p>\n          <span>Subscription Packages</span>\n          <p>\n          In the case where the Client has subscribed to a subscription package for the Service, the Client will be entitled to unlimited hires at a fixed rate per month upon agreement.\n          </p>\n          </div>\n          \n          <div>\n          <h3>7. Reference</h3>\n          <p>\n          All Placement Fees and incidentals are invoiced and are to be settled in Hong Kong dollars. In the case where the client has no registered office in Hong Kong, any charges associated with exchange rate variation, bank transfers and withholding tax, are to be borne by Client. Billing to the client is subject to prevailing taxes at the time of invoicing.\n          </p>\n          </div>\n          \n          <div>\n          <h3>8. Replacement Conditions</h3>\n          <p>\n          If the employment relationship between the nominated candidate through the JobsLab Platform and the hiring company are terminated within the guarantee period of service package (either zero or six months depending on the service package) from the starting date of the employment, JobsLab will provide search for one replacement without extra charge on the condition that:\n          </p>\n          <p>\n          a) Candidate leaves due to his/her own personal choice, or the hiring company deem the candidate does not meet the company’s initial goal and objective, rather than due to any redundancy measures.\n          </p>\n          <p>\n          b) All payments have been settled in accordance with the placement fee agreement.\n          </p>\n          <p>\n          c) The request for replacement is given exclusively to JobsLab.\n          </p>\n          <p>\n          d) The replacement conditions only apply for initial candidates placed by JobsLab and shall not be applied to the replacement candidate.\n          </p>\n          <p>\n          e) If the new replacement is concluded at the salary level higher than the previous salary appointed, then an additional charge shall be applied.\n          </p>\n          <p>\n          f) You must inform JobsLab that the termination of employment relationship with the initial candidate within 10 days of its occurring.\n          </p>\n          <p>\n          In case of a termination of the candidate that is nominated through the JobsLab Platform, an amount equivalent to the placement fee will be credited to the Client for their next placement.\n          </p>\n          <p>\n          The replacement guarantee will not be exercised in the case where the resignation or termination is as a result of the changes to the employer’s circumstances, job description, retrenchment, harassment (in employment) or unsafe conditions to the workplace.\n          </p>\n          </div>\n          \n          <div>\n          <h3>9. Resume Ownership</h3>\n          <p>\n          The employment of a candidate introduced by JobsLab through any channel for a similar or non-similar role within 12 months of introduction will render the Client liable for full payment of the fee.\n          </p>\n          <p>\n          Upon presentation of the candidate’s resume, the Client shall provide written confirmation to the Company if the candidate is already in their database. The Client may, at their sole discretion, offer employment to any candidate presented by the Company.\n          </p>\n          <p>\n          In the case where the Client agreed to hire any candidate presented by JobsLab Platform, without informing or notify JobsLab of such event. JobsLab will charge a fine of 3 times of the actual placement fee and immediately possess the rights to discontinue the service to the client without prior notice.\n          </p>\n          <p>\n          In the event that the client receives a similar candidate via another third party before being introduced by JobsLab, the client shall provide evidence that such event happened, and as such, can proceed with the mentioned third party without having any obligation to answer to JobsLab about the employment of such candidates.\n          </p>\n          </div>\n          \n          <div>\n          <h3>10. Invoicing & Payment</h3>\n          <p>\n          JobsLab Company Limited shall invoice the client for the Placement Fee on the first day of the candidate’s contract signing date. The invoice amount is due and payable within 30 days of the date of the invoice.\n          </p>\n          <p>\n          Should the Client fail to settle all payment before the designated timeline, JobsLab will reserve the right to impose an interest charge for late payment, calculated on the basis of the interest rates set by the local State Bank.\n          </p>\n          </div>\n          \n          <div>\n          <h3>11. Referral Rewards & Successful Job Applicant Rewards</h3>\n          <p>\n          For information about referral rewards and successful job applicant rewards available to users of the Platform, please check out our Referral Rewards & Successful Job Applicant Rewards policy available at Rewards Policy.\n          </p>\n          </div>\n          \n          <div>\n          <h3>12. Responsibility Disclaimer & Confidentiality</h3>\n          <p>\n          JobsLab shall, in all its power, take reasonable care in the selection of candidates. However, we are not responsible for any negligence, dishonesty, misconduct, or lack of skills of any candidates.\n          </p>\n          <p>\n          All parties must not at any time disclose any confidential matters, or information relating the engaged service, including candidates, Clients and JobsLab information without prior consent from the particular party.\n          </p>\n          </div>\n          \n          <div>\n          <h3>13. Change of Term & Termination</h3>\n          <p>\n          All terms cannot be changed without a written consent of JobsLab’ local General Manager or any members of JobsLab board of management.\n          </p>\n          <p>\n          All of the above terms and conditions shall come into effect right after both parties execute the service engagement, and shall last until either party terminate the agreement through giving a 30 days’ prior written notice.\n          </p>\n          </div>\n          \n          <div>\n          <h3>14. JobsLab Materials</h3>\n          <p>\n          JobsLab puts a considerable effort into creating the Service including, the logo and all designs, text, graphics, pictures, information and other content (excluding your content). This property is owned by us or our licensors and it is protected by Hong Kong, and international copyright laws. We grant you a limited right to use it.\n          </p>\n          <p>\n          However, unless we expressly state otherwise, your rights do not include: (i) publicly performing or publicly displaying the Service; (ii) modifying or otherwise making any derivative uses of the Service or any portion thereof; (iii) using any data mining, robots or similar data gathering or extraction methods; (iv) downloading (other than page caching) of any portion of the Service or any information contained therein; (v) reverse engineering or accessing the Service in order to build a competitive product or service; or (vi) using the Service other than for its intended purposes. If you are in violation of this agreement, we reserve the right to terminate your use of the Service.\n          </p>\n          </div>\n          \n          <div>\n          <h3>15. Hyperlinks and Third Party Content</h3>\n          <p>\n          You may create a hyperlink to the Platform. But, you may not use, frame or utilize framing techniques to enclose any of our trademarks, logos or other proprietary information without our express written consent.\n          </p>\n          <p>\n          JobsLab makes no claim or representation regarding, and accepts no responsibility for third party websites accessible by hyperlink from the Platform or websites linking to the Platform. When you leave the Platform, you should be aware that these Terms and our policies no longer govern.\n          </p>\n          <p>\n          If there is any content on the Platform from you and others, we don't review, verify or authenticate it, and it may include inaccuracies or false information. We make no representations, warranties, or guarantees relating to the quality, suitability, truth, accuracy or completeness of any content contained in the Platform. You acknowledge sole responsibility for and assume all risk arising from your use of or reliance on any content.\n          </p>\n          </div>\n          \n          <div>\n          <h3>16. Additional Terms and Conditions</h3>\n          <p>\n          The Platform and any other service and content included on or otherwise made available to you through the service are provided to you on an as is or as available basis without any representations or warranties of any kind. We disclaim any and all warranties and representations (express or implied, oral or written) with respect to the service and content included on or otherwise made available to you through the service whether alleged to arise by operation of law, by reason of custom or usage in the trade, by course of dealing or otherwise.\n          </p>\n          <p>\n          In no event will JobsLab be liable to you or any third party for any special, indirect, incidental, exemplary or consequential damages of any kind arising out of or in connection with the service or any other service and/or content included on or otherwise made available to you through the service, regardless of the form of action, whether in contract, tort, strict liability or otherwise, even if we have been advised of the possibility of such damages or are aware of the possibility of such damages. Our total liability for all causes of action and under all theories of liability will be limited to the amount you paid to JobsLab. This section will be given full effect even if any remedy specified in this agreement is deemed to have failed of its essential purpose.\n          </p>\n          <p>\n          You agree to defend, indemnify and hold us harmless from and against any and all costs, damages, liabilities, and expenses (including attorneys' fees, costs, penalties, interest and disbursements) we incur in relation to, arising from, or for the purpose of avoiding, any claim or demand from a third party relating to your use of the service or the use of the service by any person using your account, including any claim that your use of the service violates any applicable law or regulation, or the rights of any third party, and/or your violation of these Terms.\n          </p>\n          </div>\n          \n          <div>\n          <h3>17. Feedback</h3>\n          <p>\n          Please let us know what you think of the Platform, these Terms and, in general, www.jobslab.io / JobsLab application. When you provide us with any feedback, comments or suggestions about the Platform, these Terms and, in general, www.jobslab.io / JobsLab application, you irrevocably assign to us all of your right, title and interest in and to your feedback, comments and suggestions.\n          </p>\n          </div>\n          \n          <div>\n          <h3>18. Questions & Contact Information</h3>\n          <p>\n          Questions or comments about the Platform may be directed to us at the email address&nbsp;\n          <a href=\"mailto:support@jobslab.io?Subject=&Body=\">support@jobslab.io</a>.\n          </p>\n          </div>\n          \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TermsOfUse);","/home/ubuntu/environment/jobslab-web/src/app/general/PrivacyPolicy.js",["2472","2473","2474","2475"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContainerHeader from 'components/ContainerHeader';\nimport { Helmet } from 'react-helmet';\n\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\n\nclass PrivacyPolicy extends Component {\n\n  componentDidMount() {\n    //this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n  }\n\n  render() {\n    return (\n      <div className=\"app-wrapper termsofuse\">\n        <Helmet>\n              <title>Privacy Policy | JobsLab</title>\n        </Helmet>\n        <div className=\"termsofuse-imgcontainer privacy\">\n          <div className=\"termsofuse-wordcontainer\">\n            <h3>Privacy and Cookie Policy</h3>\n          </div>\n          <div className=\"color-overlay termsofuse\"></div>\n          <img src={encodeURI(WEB_IMAGE_URL+\"privacy-policy/privacypolicy.jpg\")}/>\n        </div>\n        <div className=\"termsofuse-padding\">\n        <div className=\"termofuse-wordbox\">\n          <div>\n          <p>\n          We, The Jobs Laboratory Ltd., a Hong Kong corporation with offices at 17F Tesbury Centre, Wan Chai, Hong Kong (\"The Jobs Laboratory\", “JobsLab”, \"we\", or \"us\"), explain in this Privacy and Cookie Policy (the “Policy”) how we collect, process and/or use information that we receive via our websites, emails we send, and mobile applications (collectively, the \"Platform\") that link to this Policy, as amended from time to time. This Policy describes how The Jobs Laboratory collects, processes, uses, shares and secures the personal information you provide. It also describes your choices regarding use, access, and correction of your personal information. For purposes of this Policy, personal information shall mean any information relating to an identified or identifiable natural person.\n          </p>\n          <p>\n          This Policy applies only to information we collect, process and use through the Platform. This Policy does not apply to information that we collect through other channels, such as information that we collect offline, from other websites or from emails you send us.\n          </p>\n          </div>\n          \n          <div>\n          <h3>Information We Collect</h3>\n          <p>\n          If you connect to the Platform using Linkedin, Facebook, Google+, or another social networking site (each a \"Social Networking Site\"), we will receive information that you authorize the Social Networking Site to share with us, which may include public profile information, birthday, current city work, school, and email address. When we receive this information, it becomes JobsLab’s account information for purposes of your use of the Platform. This information also constitutes personal information and is therefore subject to this Policy. Any information that we collect from your Social Networking Site account may depend on the privacy settings you have set with the Social Networking Site, so please consult the Social Networking Site's privacy and data practices. You have the ability to disconnect your Social Networking Site account from your JobsLab account by adapting the privacy settings in your Social Networking Site account. If you come to the Platform through a Social Networking Site, from other websites or with devices that enable third parties to collect information from or about you, such third parties receive information about you subject to their privacy policies.\n          </p>\n          <p>\n          On certain JobsLab domains, when you set up an individual user account on the Platform, you may create a profile (a \"Profile\") that will include personal information you provide. At your request, we will create your Profile with information we extract from a resume you have uploaded on the Platform. When you fill out and save your Profile, your saved Profile can be viewed by prospective employers, subject to visibility settings you control. Because your anonymity on our Platform is important, your Profile does not include or link to information you submit to the Platform anonymously (for example, the reviews, salaries, benefits, and company ratings information you submit anonymously).\n          </p>\n          </div>\n          \n          <div>\n          <h3>Information We Collect Automatically</h3>\n          <p>\n          When you use the Platform, your device is automatically providing information to us so we can respond and customize our response to you. The type of information we collect by automated means generally includes technical information about your computer, such as your IP address or other device identifier, the type of device you use, and operating system version. The information we collect also may include usage information and statistics about your interaction with the Platform. That information may include the URLs of our web pages that you visited, URLs of referring and exiting pages, page views, time spent on a page, number of clicks, platform type, location data (if you have enabled access to your location on your mobile device), and other information about how you used the Platform.\n          </p>\n          </div>\n          \n          <div className=\"terms-i\">\n          <i>\n          Automated means of data collection include the following:\n          </i>\n          </div>\n          \n          <div className=\"privacy-span\">\n          <span>Cookies and Tracking Technologies.</span>\n          <p>\n          Technologies such as: cookies, web beacons, locally shared objects (sometimes called \"flash cookies\"), mobile identifiers and similar technologies (\"Cookies\") are used by JobsLab and our partners (such as advertising, marketing and analytics providers) (\"Ad Partners\"). We use Cookies to remember users’ settings as well as for authentication and analytics. These technologies may be used in analyzing trends, administering the Platform, tracking users’ movements around the Platform and to gather demographic information about our user base as a whole. Our Ad Partners may also use such technologies to deliver advertisements to you. You can control the use of Cookies at the individual browser level, but if you choose to disable Cookies, it may limit your use of certain features or functions on our website or service. \n          </p>\n          </div>\n          \n          <div className=\"privacy-span\">\n          <span>Log File Information.</span>\n          <p>\n          Log file information is automatically reported by your browser or mobile application each time you access a website on our Platform. For example, when you access a JobsLab website, our servers automatically record certain information that your web browser sends when you visit any website. These server logs include information such as your web request, Internet Protocol (\"IP\") address, browser type, referring / exit pages and URLs, number of clicks, domain names, landing pages, and pages viewed.\n          </p>\n          </div>\n          \n          <div className=\"privacy-span\">\n          <span>Device Information.</span>\n          <p>\n          We collect information about the device you use to access the Platform, including type of device, operating system, settings, and unique device identifiers, and IP address. Whether we collect some or all of this information often depends on what type of device you’re using and its settings. For example, different types of information are available depending on whether you’re using a Mac or a PC, or an iPhone or Android phone. We collect the device type and any other information you choose to provide, such as username, geolocation, or email address. We also use mobile analytics software to allow us to better understand the functionality of our mobile software on your phone. This software records information such as how often you use the application, the events that occur within the application, aggregated usage, performance data, and where the application was downloaded from. We do not link the information we store within the analytics software to any personally identifiable information you submit within the mobile application.\n          </p>\n          </div>\n          \n          <div>\n          <h3>How We Use Information</h3>\n          <p>\n          We use the information we collect to provide our services. In order for us to best provide our services (and to help make it feasible for us to do so), it is essential that we are able to collect and use the information as described in this Policy. So it is largely necessary for fulfilling the relationship we have with you, and, where that is not the case, we have a legitimate interest in using the information we collect, including personal information, for these purposes:\n          </p>\n          <ul>\n            <li>\n            to provide you with personalized content, services and offers of services offered by JobsLab, as well as other promotional content and services, or your resume or Profile information, to determine relevant search results and provide you with recommended jobs on JobsLab, we may reach out to you about jobs or companies you may be interested in; we also use your IP address and mobile device for these purposes; For the purposes of this Policy, \"affiliates\" means any entity that directly or indirectly, controls, is controlled by, or is under common control of or with JobsLab, Inc., now or in the future. \"Control\" for these purposes means having a majority of shares or the right and ability to direct management.\n            </li>\n            <li>\n            to moderate and display the employer reviews, interview reviews, salary reports and other content you have submitted for the benefit of our other users;\n            </li>\n            <li>\n            to customize and improve the features, performance, and support of the JobsLab site and sites of JobsLab affiliates;\n            </li>\n            <li>\n            to permit JobsLab or a JobsLab affiliate to recommend a JobsLab user (and that user’s resume or resume extract) to an employer hosted by JobsLab or to an employer hosted by a JobsLab affiliate, subject to visibility settings you control;\n            </li>\n            <li>\n            to permit JobsLab to contact JobsLab users with respect to such recommendations, subject to visibility settings you control;\n            </li>\n            <li>\n            to provide relevant advertising, including interest-based advertising from us and third parties, which may mean that we share non-personally identifiable information, such as your job title, to third-party advertisers;\n            </li>\n            <li>\n            to transmit your application and save your application materials;\n            </li>\n            <li>\n            to share your saved Profile or resume with employers, subject to visibility settings you control;\n            </li>\n            <li>\n            to allow JobsLab and JobsLab affiliates to process your personal data for the purpose of improving for internal operations, including detecting and preventing fraud and spam, troubleshooting, data analysis, testing, research, and service improvement (this includes use of your IP address and mobile device information to help diagnose problems with our service and to administer the Platform);\n            </li>\n            <li>\n            to create aggregate and statistical data that does not identify you individually and that we can commercialize (for example, we use mobile device data and IP addresses to gather demographic information);\n            </li>\n          </ul>\n          <p>\n          When we collect any information that does not identify you as a specific natural person (\"Non-Personal Information\"), we are permitted to use and disclose this information for any purpose, notwithstanding anything to the contrary in this Policy, except where we are required to do otherwise by applicable law. Examples of Non-Personal Information include: physical location information; demographic information, including gender, dates of birth, ZIP codes, etc.; or any personal information that has been anonymized, aggregated or de-identified. If we combine any Non-Personal Information with your personal information (such as combining your ZIP code with your name), we will use and disclose such combined information as personal information in accordance with this policy. Similarly, if applicable law requires that we treat certain Non-Personal Information as personal information, we will use and disclose this information as personal information in accordance with this policy.\n          </p>\n          </div>\n          \n          <div>\n          <h3>How We Share Information</h3>\n          <p>\n          Cookie Policy and Ad Choices{/*<a>Cookie Policy and Ad Choices</a>*/}\n          </p>\n          <span>Cookies</span>\n          <p>\n          Cookies are small pieces of data that are stored on your computer, mobile phone, or other device when you first visit a page. We use cookies, web beacons, locally shared objects (sometimes called \"flash cookies\"), mobile identifiers and similar technologies (\"Cookies\") to help us recognize you on the Platform, enhance your user experience, understand usage of the Platform, and show you relevant advertising. Cookies may also be set by other websites or services that run content on the page you're visiting. To learn more about our partners (such as advertising, marketing and analytics providers) (\"Ad Partners\") and their use of Cookies, click here. After you register on the Platform, we may connect information we collect from the Cookies set by us and our partners with other information received from you. The provision of your data via Cookies is voluntary except for those Cookies that we place on your device because we need them for the performance of our Platform and our services.\n          </p>\n          </div>\n          \n          <div className=\"terms-i cookies\">\n          <p>\n          We use Cookies for things like:\n          </p>\n          <p>\n          <span>Purpose</span>\n          </p>\n          <p>\n          <span>Explanation</span>\n          </p>\n          <p>\n          <span>Authentication</span>\n          </p>\n          <p>\n          We use Cookies to help us determine whether or not you've signed in to the Platform and to keep you signed in during visits as you access different pages.\n          </p>\n          <span>Security</span>\n          <p>\n          We use Cookies to enable and support security features, prevent fraud, and protect your data from unauthorized access.\n          </p>\n          <span>Preferences and Features</span>\n          <p>\n          We use Cookies to enable features, help us provide you with personalized content such as showing you your recent search activity.\n          </p>\n          <span>Advertising</span>\n          <p>\n          We use Cookies to deliver, evaluate and improve advertising, such as by using information about you to provide relevant advertising both on and off the Platform. Our Ad Partners may use a cookie to determine whether you've already been shown an advert or how it performed, or provide us with information about how you interacted with an ad.\n          </p>\n          <span>Analytics and Performance</span>\n          <p>\n          We use Cookies to analyze how our visitors use the Platform and to monitor site performance. These Cookies help us to identify and fix errors, understand and improve services, research and test out different features, and monitor how our visitors reach our sites.\n          </p>\n          <span>Opting Out of Cookies</span>\n          <p>\n          We use Cookies that are necessary for us to provide the services you use and you cannot opt out of these Cookies on the Platform. You are able to disable placement of some (but not all) Cookies by setting your browser to decline cookies, though this may worsen your user experience. Additionally, you can also control, manage and/or delete cookies via your browser settings. A useful resource for information about deleting and controlling cookies can be found at AboutCookies.org.\n          </p>\n          <p>\n          If you enable location data for the mobile version of the Platform (including any version installed as a native application), we may use your location data to serve you geo-targeted ads for employers and other advertisers that are local to you. In such instances, we do not share your location with the advertiser or advertising network; rather, we provide the advertiser or advertising network with a means to push ads through to users located in certain areas. You may disable location services at any time in your device privacy settings or the JobsLab native app settings.\n          </p>\n          </div>\n          \n          <div>\n          <h3>Close Your Account</h3>\n          <p>\n          If you'd like to close your JobsLab account, you can do so by sending an email to compliance@jobslab.io. After you close your account, you will no longer have full access to salaries, reviews, and interviews, and any content you have submitted will be pulled from the display on the Platform, but we reserve the right to keep any information in a closed account in our archives that we deem necessary to comply with our legal or regulatory obligations, resolve disputes and enforce our agreements. If, after you close your account, you wish to know which personal information we keep you can proceed in accordance with your rights set out above.\n          </p>\n          </div>\n          \n          <div>\n          <h3>How Long We Keep Your Personal Information</h3>\n          <p>\n          We keep your personal information only so long as we need it to provide the Platform to you and fulfill the purposes described in this Policy. This is also the case for anyone that we share your personal information with and who carries out services on our behalf. Retention periods can vary significantly based on the type of information and how it is used. Our retention periods are based on criteria that include legally mandated retention periods, pending or potential litigation, our intellectual property or ownership rights, contract requirements, operational directives or needs, and historical archiving. When we no longer need to use your personal information and there is no need for us to keep it to comply with our legal or regulatory obligations, resolve disputes and enforce our agreements, we’ll either remove it from our systems or depersonalize it so that we can't identify you.\n          </p>\n          </div>\n          \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PrivacyPolicy;","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminJobList.js",["2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\n\nimport axios from \"axios\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Modal from 'react-modal';\nimport moment from \"moment\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Widget from \"components/Widget\";\nimport ApplicationListForm from 'components/popup/ApplicationListForm';\nimport AdminJobListFilter from 'components/popup/AdminJobListFilter';\nimport TrueFalseIcon from 'components/TrueFalseIcon';\nimport * as notification from 'actions/Notification';\nimport modalStyle from 'styles/modalStyle';\nimport { numberWithCommas } from 'util/functions.js';\n\nvar queryString = require('query-string');\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass AdminJobList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      modalStyleState: modalStyle.jobListModalStyle,\n      hasMore: true,\n  \t  pageSize: 20,\n  \t  pageNum: 1,\n  \t  jobList: [],\n      searchBox: false,\n      searchText: '',\n      \n      location: null,\n      selectedLocation: [],\n      location_list: [],\n      industry: null,\n      industry_list: [],\n  \n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n  \t  lastJobId:null,\n  \t  noRecordFound:false,\n  \t  pageReady: false,\n  \t  searchList:[],\n      checkedItemsIndustry: new Map(),\n  \t  checkedItemsJobType: new Map(),\n  \t  category_list:[],\n  \t  locationSelected:[],\n  \t  industrySelected: [],\n  \t  //enabledAIEngine:true,\n  \t  activeJob: '',\n  \t  \n  \t  showFilterPopup: false,\n  \t  applicationListOpen: false,\n  \t  \n  \t  isSendCVLoading: new Map(),\n  \t  isSendCVEnable: new Map(),\n  }; \n  }\n\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.initData();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initData();\n    }\n  }\n  \n  initData = () => {\n    \n    if(!this.props.listLoading) \n    {\n      var params = queryString.parse(this.props.location.search);\n      var searchText = (params.q) ? params.q : \"\";\n      var location = (params.loc) ? params.loc : \"\";\n      //var activeJob = (params.actJob == \"true\") ? true : false;\n      //var location = (this.state.location_list.hasOwnProperty(params.loc)) ? params.loc : (this.state.location_list.hasOwnProperty('5cd445e5f6bab6e3dac72fa0') ? '5cd445e5f6bab6e3dac72fa0' : 'default');\n      //var industry = this.state.industry_list.find((obj) => { return ((obj.value == params.ind) ? obj : null) });\n      //var industry = (this.state.industry_list.hasOwnProperty(params.ind)) ? params.ind : 'default';\n      var minSalary = (parseInt(params.minSal)) ? parseInt(params.minSal) : 0;\n      var maxSalary = (parseInt(params.maxSal)) ? parseInt(params.maxSal) : 500000;\n      minSalary = (minSalary >= maxSalary) ? (maxSalary - 10000) : minSalary;\n      var minExperience = (parseInt(params.minExp)) ? parseInt(params.minExp) : 0;\n      var maxExperience = (parseInt(params.maxExp)) ? parseInt(params.maxExp) : 50;\n      minExperience = (minExperience >= maxExperience) ? (maxExperience - 10) : minExperience;\n      var industry = (params.ind) ? params.ind : \"\";\n      //var jobType = (params.jt) ? params.jt : \"\";\n      //var enabledAIEngine = (params.enAI == \"false\") ? false : true;\n      \n      // industry\n      var selectedIndustry = [];\n      var industryList = this.props.industryList ? this.props.industryList : [];\n      console.log(industryList);\n      console.log(industry);\n      industry.split(\",\").forEach(function (item) {\n          var tempIndustry = industryList.find((industryObj) => { return ((industryObj.value == item) ? industryObj : null) });\n          console.log(tempIndustry);\n          if(tempIndustry)\n            selectedIndustry.push(tempIndustry);\n      });\n      \n      industry = selectedIndustry;\n      \n      // location\n      var selectedLocation = [];\n      var countryList = this.props.countryList;\n      \n      location.split(\",\").forEach(function (item) {\n          var tempLocation = countryList.find((locationObj) => { return ((locationObj.value == item) ? locationObj : null) });\n          if(tempLocation)\n            selectedLocation.push(tempLocation);\n      });\n      \n      location = selectedLocation;\n      this.setState({\n          searchText : searchText,\n          locationSelected: location,\n          industrySelected: industry,\n          salary:{ min: minSalary, max: maxSalary},\n          experience:{ min: minExperience, max: maxExperience},\n          //activeJob: activeJob,\n          checkedItemsIndustry: industry,\n          pageReady: true\n      }, () => {\n          this.getMoreJd();\n      });\n    }\n  }\n  \n  handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getMoreJd = () => {\n    \n    if(this.state.pageReady)\n    {\n      var industry = \"\";\n    \n      this.state.industrySelected.forEach(function(object) {\n        if(object.value)\n          industry += object.value + \",\";\n      });\n      \n      if(industry.length>0)\n        industry = industry.substr(0, industry.length-1); \n        \n      var location = \"\"\n    \n      console.log(this.state.locationSelected);\n      this.state.locationSelected.forEach(function(object) {\n        if(object.value)\n          location += object.value + \",\";\n      });\n      \n      if(location.length>0)\n        location = location.substr(0, location.length-1); \n        \n      axios.post('/api/jobs/get/control/job/list/more' , {\n        lastJobId: this.state.lastJobId,\n        pageNum: this.state.pageNum,\n        recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        //searchCountryId: this.state.location ? this.state.location.value : \"default\",\n        //searchIndustry: industry ? industry : \"default\",\n        jobLocation: location,\n        searchIndustry: industry ? industry : \"default\",\n        minSalary: this.state.salary.min,\n        maxSalary: this.state.salary.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        //jobType: jobType,\n        //enabledAIEngine: this.state.enabledAIEngine\n      }) \n      .then(res => {\n        if (res.data.isSuccess) {\n          var isSendCVLoading = this.state.isSendCVLoading;\n          var isSendCVEnable = this.state.isSendCVEnable;\n          \n          res.data.jobList.map(job => isSendCVLoading.set(job._id, false));\n          res.data.jobList.map(job => isSendCVEnable.set(job._id, job.sendCV));\n          \n          this.setState({\n              loader: false,\n              jobList:  this.state.jobList.concat(res.data.jobList),\n              hasMore: (res.data.hasMore == true)? true : false,\n              lastJobId: (res.data.jobList.length > 0) ? res.data.jobList[res.data.jobList.length-1]._id: this.state.lastJobId,\n              pageNum: this.state.pageNum + 1,\n              isSendCVLoading: isSendCVLoading,//this.state.isSendCVLoading.concat(new Array(res.data.jobList.length).fill(false)),\n              isSendCVEnable: isSendCVEnable,//this.state.isSendCVEnable.concat(new Array(res.data.jobList.length).fill(true))\n          });\n          \n          //if records are not returned\n          if(!this.state.lastJobId)\n          {\n            this.setState({ loader: false, noRecordFound:true });\n          }\n        }\n      })\n      .catch(function (err) {\n         //this.setState({ loader: false});\n        console.log(err);\n      });   \n    }\n }\n \n searchJobList = (e) => {\n   \n    var queryParm = \"?\";\n    var seperator = \"&\";\n\n    var industry = \"\"\n    this.state.industrySelected.forEach(function(object) {\n      if(object.value)\n        industry += object.value + \",\";\n    });\n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      \n      \n    var location = \"\"\n    this.state.locationSelected.forEach(function(object) {\n      if(object.value)\n        location += object.value + \",\";\n    });\n    if(location.length>0)\n      location = location.substr(0, location.length-1); \n   \n    queryParm += \"q=\" + this.state.searchText + seperator;\n    queryParm += \"loc=\" + (location || '') + seperator;\n    queryParm += \"ind=\" + (industry || '') + seperator;\n    //queryParm += \"jt=\" + jobType + seperator;\n    queryParm += \"minSal=\" + this.state.salary.min + seperator;\n    queryParm += \"maxSal=\" + this.state.salary.max + seperator;\n    queryParm += \"minExp=\" + this.state.experience.min + seperator;\n    queryParm += \"maxExp=\" + this.state.experience.max;\n    //queryParm += \"actJob=\" + this.state.activeJob;\n    window.location = '/admin/editjoblist' + queryParm;\n\n  }\n  \n \n  clearFilter = () => {\n    this.setState({\n      checkedItemsIndustry: new Map(),\n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n      searchText : \"\",\n      locationSelected : [], //this.state.location_list.find((obj) => { return (obj.label == \"Hong Kong\") }),\n      industrySelected : [],\n      industry : null,\n      //activeJob: false,\n    });\n  }\n  \n  /*\n  openModal = (e) => {\n    e.preventDefault();\n    this.setState({showFilterPopup: true});\n  }\n  */\n  \n  openModal = (e, popUp) => {\n    e.preventDefault();\n    this.setState({ [popUp]: true});\n  }\n  \n  /*selectSearchText(text){\n     this.setState({\n      searchText: text,\n    });\n  }*/\n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n  }\n  \n  updateState = (stateName, value) => {\n    this.setState({[stateName]: value});\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   //console.log(gotList);\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n  }\n  \n  closeModal = (name) => {\n    if(name == \"applicationListOpen\")\n      this.setState({activeJob: null})\n      \n    this.setState({ [name]: false});\n  }\n \n  viewJob = (jid) => {\n    var jobId = (jid != null) ? jid : \"\";\n    if(jobId)\n      window.open(\"/job/\"+jobId, \"_blank\");\n    else\n      alert(\"Job data error!\");\n  }\n  \n  editJob = (jid) => {\n    var jobId = (jid != null) ? jid : \"\";\n    if(jobId)\n      window.open(\"/postjob/\"+jobId, \"_blank\");\n    else\n      alert(\"Job data error!\");\n  }\n  \n  /*sendCV = (index, jid, jobTitle) => {\n    let array = [...this.state.isSendCVLoading];\n    if (index !== -1) {\n      array[index] = true;\n      this.setState({isSendCVLoading: array});\n    }\n    axios.get('/api/cron/applicationlist/email/'+jid)\n    .then(res => {\n      if (res.data.isSuccess) {\n        array = [...this.state.isSendCVLoading];\n        if (index !== -1) {\n          array[index] = false;\n          this.setState({isSendCVLoading: array});\n        }\n        array = [...this.state.isSendCVEnable];\n        if (index !== -1) {\n          array[index] = false;\n          this.setState({isSendCVEnable: array});\n        }\n        notification.success(\"Eligible applicants for job \"+jobTitle+\" have been sent to client side.\");\n      }\n      else {\n        notification.error(\"Send CV for job \"+jobTitle+\" failed. Please try again.\");\n        array = [...this.state.isSendCVLoading];\n        if (index !== -1) {\n          array[index] = false;\n          this.setState({isSendCVLoading: array});\n        }\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }*/\n  \n  sendCV = (jid, jobTitle) => {\n\n    this.setState({isSendCVLoading: this.state.isSendCVLoading.set(jid, true)});\n    \n    axios.get('/api/cron/applicationlist/email/'+jid)\n    .then(res => {\n      this.setState({isSendCVLoading: this.state.isSendCVLoading.set(jid, false)});\n      if (res.data.length > 0 && res.data[0].isSuccess) {\n          this.setState({isSendCVEnable: this.state.isSendCVEnable.set(jid, false)});\n          notification.success(\"Eligible applicants for job \"+jobTitle+\" have been sent to client side.\");\n      }\n      else {\n        notification.error(\"Send CV for job \"+jobTitle+\" failed. Please try again.\");\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n      this.setState({isSendCVLoading: this.state.isSendCVLoading.set(jid, false)});\n    })\n  }\n\n  render() {\n    const { loader } = this.state;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.jobList.map((job, i) => {\n      items.push(\n                  <StyledTableRow key={i}>\n                    <StyledTableCell align=\"center\">{job.createdAt ? moment(job.createdAt).format(\"YYYY/MM/DD\") : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      <a href={\"/job/\"+job._id} target=\"_blank\">{job.jobTitle ? job.jobTitle : \"\"}</a><br/>\n                      {job.isPublic == false && <i class=\"zmdi zmdi-lock\"/>} {job.company ? job.company : \"\" /*job.client.length > 0 && job.client[0].company*/}<br/>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {job.client.length > 0 && job.client[0]._id.name.firstName + \" \" + job.client[0]._id.name.lastName}<br/>\n                      {job.client.length > 0 && job.client[0]._id.email}<br/>\n                      {job.client.length > 0 && job.client[0]._id.phone.dial + \" \" + job.client[0]._id.phone.number}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      { job.industry &&\n                        job.industry.map( obj => {\n                          return(obj) ? <p className=\"mb-0\">{obj._id.name}</p> : \"\"\n                        })\n                      }\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">{job.address && job.address.city && job.location ? \n                                                      job.address.city+\", \"+ job.location.name : \n                                                      (job.location ? job.location.name : \"\") }\n                    </StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">{(job.isPublic == true) ? \"No\" : ((job.isPublic == false) ? \"Yes\" : \"N/A\")}</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      {job.salaryMax ? \"$\"+numberWithCommas(job.salaryMax) : \"\"}<br/>\n                      {job.yearMin ? job.yearMin+\" Yr\" : \"\"}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\"><TrueFalseIcon checker={job.isOpen} /> {/*(job.isOpen == true) ? \"Yes\" : ((job.isOpen == false) ? \"No\" : \"N/A\")*/} </StyledTableCell>\n                    {/*<StyledTableCell align=\"center\"><Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" component={Link} onClick={() => this.viewJob(job._id)}>View Job</Button></StyledTableCell>*/}\n                    {/*<StyledTableCell align=\"center\"><Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" component={Link} onClick={() => this.editJob(job._id)}>Edit Job</Button></StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      {(job.applicationNum && job.applicationNum > 0) ?  \n                        <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" onClick={ (e) => {this.updateState(\"activeJob\",job._id); this.openModal(e, \"applicationListOpen\")} }>\n                          View ({job.applicationNum && job.applicationNum})\n                        </Button>\n                      : \"\"}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {(job.sendCV) && this.state.isSendCVEnable.get(job._id) ?  \n                        <Button variant=\"contained\" className=\"jr-btn bg-success text-white\" onClick={ (e) => this.sendCV(job._id, job.jobTitle) }>\n                          { this.state.isSendCVLoading.get(job._id) ?\n                            <CircularProgress color=\"secondary\" size={20} className=\"mr-2\" />\n                            :\n                            <i className=\"zmdi zmdi-email zmdi-hc-fw\"/>\n                          }\n                          <span>Send CV</span>\n                        </Button>\n                      : \"\"}\n                    </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });\n    \n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n        </div> : \n        <div>\n          {/*<Modal\n            isOpen={this.state.showFilterPopup}\n            closeTimeoutMS={200}\n            style={this.state.modalStyleState}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={() => this.closeModal('showFilterPopup')}\n            className=\"jobListModal\"\n            contentLabel=\"Modal\"\n          >\n            <Widget styleName=\"jr-card-profile\">*/}\n          <Dialog open={this.state.showFilterPopup} onClose={() => this.closeModal('showFilterPopup')} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n            <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}> \n              <div className=\"mb-3\">\n                <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Filter <span className=\"close-popup\" onClick={() => this.closeModal('showFilterPopup')}><i className=\"la la-close\"></i></span></h3>\n              </div>\n              <AdminJobListFilter \n                      //checkedItemsIndustry={this.state.checkedItemsIndustry}  \n                      locationSelected={this.state.locationSelected}\n                      industrySelected={this.state.industrySelected}\n                      experience={this.state.experience} \n                      salary={this.state.salary}\n                      //activeJob={this.state.activeJob}\n                      handleCheckBoxChange={this.updateCheckList.bind(this)}\n                      search={this.searchJobList.bind(this)}\n                      handlePropChange={this.handlePropChange.bind(this)}\n                      onFieldChanged={this.inputRangeChanged.bind(this)}\n                      clearFilter={this.clearFilter.bind(this)}\n                      updateSearchText={this.updateSearchText.bind(this)}\n                      selectSearchText={this.selectSearchText.bind(this)}\n                      searchText={this.state.searchText}\n                      autocompleteChange={this.autocompleteChange.bind(this)}\n              />\n                  \n            {/*</Widget>\n          </Modal>*/}\n            </DialogContent>\n          </Dialog>\n          \n          <div className=\"d-flex mb-4\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                      onClick={(e) => this.openModal(e,\"showFilterPopup\")}>\n                  <font size=\"+1\">Filter</font>\n                </Button>\n                <Button size=\"small\" variant=\"contained\" className=\"ml-auto jr-btn jr-btn-lg bg-white\" \n                        onClick={() => this.props.history.push(\"/postjob\")}\n                >Post Job</Button>\n          </div>   \n          \n          <div id=\"inif-container\" className=\"table-container admin-infinite-table\">\n            <Table stickyHeader aria-label=\"sticky customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell align=\"center\">Post Date</StyledTableCell>\n                  <StyledTableCell align=\"center\">Job Title<br/>Company</StyledTableCell>\n                  <StyledTableCell align=\"center\">Client</StyledTableCell>\n                  <StyledTableCell align=\"center\">Industries</StyledTableCell>\n                  <StyledTableCell align=\"center\">Location</StyledTableCell>\n                  {/*<StyledTableCell align=\"center\">Company Locked</StyledTableCell>*/}\n                  <StyledTableCell align=\"center\">Salary (Max)<br/>Experience (Min)</StyledTableCell>\n                  {/*<StyledTableCell align=\"center\">Industries</StyledTableCell>*/}\n                  <StyledTableCell align=\"center\">Job Opening</StyledTableCell>\n                  {/*<StyledTableCell align=\"center\">View Job</StyledTableCell>\n                  <StyledTableCell align=\"center\">Edit Job</StyledTableCell>*/}\n                  <StyledTableCell align=\"center\">View Applicants</StyledTableCell>\n                  <StyledTableCell align=\"center\">Send CVs</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <InfiniteScroll\n                    className=\"MuiTableBody-root\"\n                    pageStart={0}\n                    element={'tbody'}\n                    loadMore={this.getMoreJd.bind(this)}\n                    hasMore={this.state.hasMore}\n                    loader={loaderComponent}\n                    useWindow={false}\n                    getScrollParent={() => document.getElementById('inif-container')}\n                  >\n                    {items}\n              </InfiniteScroll>\n            </Table>\n          </div>\n          <ApplicationListForm jobId={this.state.activeJob} isOpen={this.state.applicationListOpen} closeModal={() => this.closeModal('applicationListOpen')} />\n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList, industryList, listLoading} = state.list;\n  return {\n    countryList,\n    industryList,\n    listLoading\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminJobList));\n\n","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminCandidateList.js",["2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from \"axios\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport Widget from \"components/Widget\";\n//import Modal from 'react-modal';\nimport InfiniteScroll from 'react-infinite-scroller';\n//import modalStyle from 'styles/modalStyle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { numberWithCommas } from 'util/functions.js';\nimport moment from \"moment\";\nimport { Helmet } from 'react-helmet';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport IntlMessages from 'util/IntlMessages';\n\nimport SearchBox from 'components/SearchBox';\nimport AdminCandidateFilter from 'components/popup/AdminCandidateFilter';\nimport CandidateApplicationListForm from 'components/popup/CandidateApplicationListForm';\nimport TrueFalseIcon from 'components/TrueFalseIcon';\n\nvar queryString = require('query-string');\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass AdminCandidateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //modalStyleState: modalStyle.jobListModalStyle,\n      loader: true,\n      pageReady: false,\n      pageSize: 20,\n      pageNum: 1,\n      hasMore: true,\n      \n      candidateList: [],\n      \n      countryList: [],\n      searchText: \"\",\n      searchUserText: \"\",\n      industrySelected: [],\n      locationSelected: [],\n      industry: null,\n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n      myCandidate: false,\n      activeCandidate: false,\n      openToOpportunity: false,\n      onlyNotCompletedCandidate: false,\n      checkedItemsIndustry: new Map(),\n      searchType: \"candidate\",\n  \t  //checkedItemsLocation: new Map(),\n  \t  \n  \t  activeCandidateId: '',\n  \t  applicationListOpen: false,\n  \t  showFilterPopup: false,\n  \t  \n  \t  isRemindWarning: false,\n    }\n  }\n\n        \n  componentDidMount() {\n      this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n      this.initData();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initData();\n    }\n  }\n  \n  initData = () => {\n    \n    if(!this.props.listLoading) \n    {\n      var params = queryString.parse(this.props.location.search);\n      var searchText = (params.q) ? params.q : \"\";\n      var searchUserText = (params.qUser) ? params.qUser : \"\";\n      var location = (params.loc) ? params.loc : \"\"; //this.props.location_list.find((obj) => { return ((obj.value == params.loc) ? obj : null) });\n      var industry = (params.ind) ? params.ind : \"\";\n      var myCandidate = (params.myCand == \"true\") ? true : false;\n      var activeCandidate = (params.actCand == \"true\") ? true : false;\n      var openToOpportunity = (params.openOpp == \"true\" ) ? true : false;\n      var onlyNotCompletedCandidate = (params.notCompletedCand == \"true\" ) ? true : false;\n      var minSalary = (parseInt(params.minSal)) ? parseInt(params.minSal) : 0;\n      var maxSalary = (parseInt(params.maxSal)) ? parseInt(params.maxSal) : 500000;\n      //maxSalary = (maxSalary > 200000) ? 200000 : maxSalary;\n      minSalary = (minSalary >= maxSalary) ? (maxSalary - 10000) : minSalary;\n      var minExperience = (parseInt(params.minExp)) ? parseInt(params.minExp) : 0;\n      var maxExperience = (parseInt(params.maxExp)) ? parseInt(params.maxExp) : 50;\n      //maxExperience = (maxExperience > 40) ? 40 : maxExperience;\n      minExperience = (minExperience >= maxExperience) ? (maxExperience - 10) : minExperience;\n      \n      \n      // industry\n      var selectedIndustry = [];\n      var industryList = this.props.industryList ? this.props.industryList : [];\n      industry.split(\",\").forEach(function (item) {\n          var tempIndustry = industryList.find((industryObj) => { return ((industryObj.value == item) ? industryObj : null) });\n          console.log(tempIndustry);\n          if(tempIndustry)\n            selectedIndustry.push(tempIndustry);\n      });\n      \n      industry = selectedIndustry;\n      \n\n      // location\n      var selectedLocation = [];\n      var countryList = this.props.countryList;\n      \n      location.split(\",\").forEach(function (item) {\n          var tempLocation = countryList.find((locationObj) => { return ((locationObj.value == item) ? locationObj : null) });\n          if(tempLocation)\n            selectedLocation.push(tempLocation);\n      });\n      \n      location = selectedLocation;\n      this.setState({\n          searchText : searchText,\n          searchUserText : searchUserText,\n          industrySelected: industry,\n          locationSelected: location,\n          //industry: industry,\n          salary:{ min: minSalary, max: maxSalary},\n          experience:{ min: minExperience, max: maxExperience},\n          myCandidate: myCandidate,\n          activeCandidate: activeCandidate,\n          openToOpportunity: openToOpportunity,\n          onlyNotCompletedCandidate: onlyNotCompletedCandidate,\n          pageReady: true\n      }, () => {\n          this.getMoreCandidate();\n          //this.setState({ loader: false });\n      });\n      \n    }\n  }\n  \n  getMoreCandidate = () => {\n\n    if(this.state.pageReady)\n    {\n      var industry = \"\";\n      this.state.industrySelected.forEach(function(object) {\n        if(object.value)\n          industry += object.value + \",\";\n      });\n      \n      if(industry.length>0)\n        industry = industry.substr(0, industry.length-1); \n        \n      var location = \"\"\n      this.state.locationSelected.forEach(function(object) {\n        if(object.value)\n          location += object.value + \",\";\n      });\n      if(location.length > 0)\n        location = location.substr(0, location.length-1); \n       \n      axios.post('/api/admins/get/candidate/list/more' , {\n        lastUserId: this.state.lastUserId,\n        pageNum: this.state.pageNum,\n        recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        searchUser: this.state.searchUserText,\n        searchCountryId: location, //this.state.location ? this.state.location.value : \"default\",\n        searchIndustryId: industry,\n        minSalary: this.state.salary.min,\n        maxSalary: this.state.salary.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        activeCandidate: this.state.activeCandidate,\n        openToOpportunity: this.state.openToOpportunity,\n        myCandidate: this.state.myCandidate,\n        onlyNotCompletedCandidate: this.state.onlyNotCompletedCandidate,\n      }) \n      .then(res => {\n        if (res.data.isSuccess) {\n          console.log(res.data.candidateList.length);\n          this.setState({\n              loader: false,\n              candidateList:  this.state.candidateList.concat(res.data.candidateList),\n              hasMore: (res.data.hasMore == true)? true : false,\n              lastUserId: (res.data.candidateList.length > 0) ? res.data.candidateList[res.data.candidateList.length-1]._id: this.state.lastUserId,\n              pageNum: this.state.pageNum + 1\n          });\n          console.log(this.state.lastUserId);\n          \n          //if records are not returned\n          if(!this.state.lastUserId)\n          {\n               this.setState({ loader: false, noRecordFound:true });\n          }\n        }\n      })\n      .catch(function (err) {\n        //this.setState({ loader: false});\n        //console.log(err);\n      });  \n    }\n  }\n  \n  closeModal = (name) => {\n    if(name == \"applicationListOpen\")\n      this.setState({activeCandidateId: null})\n      \n    this.setState({ [name]: false});\n  }\n\n \n  handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n  \n  searchCandidate = (type) => {\n    var queryParm = \"?\";\n    var seperator = \"&\";\n    \n    var industry = \"\"\n    \n    this.state.industrySelected.forEach(function(object) {\n      if(object.value)\n        industry += object.value + \",\";\n    });\n    \n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      \n      \n    var location = \"\"\n      \n    this.state.locationSelected.forEach(function(object) {\n      if(object.value)\n        location += object.value + \",\";\n    });\n    \n    if(location.length>0)\n      location = location.substr(0, location.length-1); \n   \n    queryParm += \"qUser=\" + this.state.searchUserText + seperator;\n    queryParm += \"q=\" + this.state.searchText + seperator;\n    queryParm += \"loc=\" + (location || '') + seperator;\n    queryParm += \"ind=\" + (industry || '') + seperator;\n    //queryParm += \"jt=\" + jobType + seperator;\n    queryParm += \"minSal=\" + this.state.salary.min + seperator;\n    queryParm += \"maxSal=\" + this.state.salary.max + seperator;\n    queryParm += \"minExp=\" + this.state.experience.min + seperator;\n    queryParm += \"maxExp=\" + this.state.experience.max + seperator;\n    queryParm += \"myCand=\" + this.state.myCandidate + seperator;\n    queryParm += \"actCand=\" + this.state.activeCandidate + seperator;\n    queryParm += \"notCompletedCand=\" + this.state.onlyNotCompletedCandidate + seperator;\n    queryParm += \"openOpp=\" + this.state.openToOpportunity;\n    \n    window.location = '/admin/candidatelist' + queryParm;\n  }\n  \n  searchByKey = (e) => {\n    if(e.key === 'Enter'){\n      this.searchCandidate(\"user\");\n    }\n  }\n  \n  clearFilter = () => {\n    this.setState({\n      //checkedItemsLocation: new Map(),\n      checkedItemsIndustry: new Map(),\n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n      searchText : \"\",\n      searchUserText : \"\",\n      industrySelected : [],\n      locationSelected : [], //this.state.location_list.find((obj) => { return (obj.label == \"Hong Kong\") }),\n      industry : null,\n      myCandidate: false,\n      activeCandidate: false,\n      openToOpportunity: false,\n      onlyNotCompletedCandidate: false,\n    });\n  }\n \n  openModal = (e, popUp) => {\n    e.preventDefault();\n    this.setState({ [popUp]: true});\n  }\n  \n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n     [e.target.name] : e.target.value,\n    });\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   //console.log(gotList);\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n }\n\n updateState = (stateName, value) => {\n    this.setState({[stateName]: value});\n }\n  \n  viewProfile = (candId) => {\n    var candidateId = (candId != null) ? candId : \"\";\n    if(candidateId)\n      window.open(\"/resume/\"+candidateId, \"_blank\");\n    else\n      alert(\"Candidate data error!\");\n  }\n  \n  render() {\n    const { loader, isRemindWarning } = this.state;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.candidateList.map((candidate, i) => {\n      var candidateInfo = candidate;\n      var userInfo = candidate.userInfo;\n      items.push(\n                  <StyledTableRow key={i} className={`${candidateInfo && candidateInfo.isCompleted ? \"\" : \"incomplete-cadidate\"}`}>\n                        <StyledTableCell align=\"center\"><a href={\"/resume/\"+candidate._id} target=\"_blank\">{userInfo.name ? userInfo.name.firstName + \" \" + userInfo.name.lastName : \"\"}</a></StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          {userInfo.email ? userInfo.email : \"\"}<br />\n                          {userInfo.phone && userInfo.phone.dial && userInfo.phone.number ? userInfo.phone.dial + \" \" + userInfo.phone.number : \"\"}\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.phone ? candidate.phone.dial + \" \" + candidate.phone.number : \"\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo && candidateInfo.career && candidateInfo.career.length>0 ? candidateInfo.career[0].company : \"\"}<br />\n                          {candidateInfo && candidateInfo.career && candidateInfo.career.length>0 ? \"(\"+candidateInfo.career[0].jobTitle+\")\" : \"\"}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo && candidateInfo.salary  ? \"$\"+numberWithCommas(candidateInfo.salary) : \"\"}<br />\n                          {candidateInfo && candidateInfo.experience  ? candidateInfo.experience+\" Yr\" : \"\"}\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.userInfo && candidate.userInfo.career && candidate.userInfo.career.length>0 ? candidate.userInfo.career[0].jobTitle : \"\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo.industryInfo ? candidateInfo.industryInfo.name : \"N/A\"}<br />\n                          {candidateInfo.subIndustryInfo ? \"(\"+candidateInfo.subIndustryInfo.name+\")\" : \"N/A\"}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo.address && candidateInfo.address.city && candidateInfo.locationInfo ? \n                                                      candidateInfo.address.city+\", \"+ candidateInfo.locationInfo.name : \n                                                      (candidateInfo.locationInfo ? candidateInfo.locationInfo.name : \"N/A\") }\n                                                      \n                          {/*candidate.locationInfo ? candidate.locationInfo.name : \"N/A\"*/}<br />\n                          {candidateInfo && candidateInfo.openToRelocation ? \"(Yes)\" : \"(No)\"}<br />\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.isActive ? \"Yes\" : \"No\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo && candidateInfo.openToOpportunity ? \"Yes\" : \"-\"}<br />\n                          {candidateInfo && candidateInfo.openToOpportunity && candidateInfo.noticePeriod ? \"(\"+candidateInfo.noticePeriod+\" Month)\" : \"\"}\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.userInfo && candidate.userInfo.noticePeriod ? candidate.userInfo.noticePeriod : \"\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">{candidateInfo && <TrueFalseIcon checker={candidateInfo.isCompleted} />/*candidateInfo.isCompleted ? \"Yes\" : \"No\"*/}</StyledTableCell>\n                        {/*<StyledTableCell align=\"center\"><Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" component={Link} onClick={() => this.viewProfile(candidate._id)}>View Details</Button></StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {(candidate.applicationNum && candidate.applicationNum > 0) ? \n                            <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" onClick={ (e) => {this.updateState(\"activeCandidateId\",candidate._id); this.openModal(e, \"applicationListOpen\")} }>\n                              View ({candidate.applicationNum && candidate.applicationNum})\n                            </Button>\n                          : \"\"}\n                        </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });\n\n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div>\n          <Helmet>\n              <title>My Candidate List | JobsLab</title>\n          </Helmet>\n          {/*<Modal\n            isOpen={this.state.showFilterPopup}\n            closeTimeoutMS={200}\n            style={this.state.modalStyleState}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={() => this.closeModal('showFilterPopup')}\n            className=\"jobListModal\"\n            overlayClassName=\"jobListModal-Overlay\" \n            contentLabel=\"Modal\"\n          >\n          \n            <Widget styleName=\"jr-card-profile\">*/}\n          <Dialog open={this.state.showFilterPopup} onClose={() => this.closeModal('showFilterPopup')} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n              <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}>  \n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Filter <span className=\"close-popup\" onClick={() => this.closeModal('showFilterPopup')}><i className=\"la la-close\"></i></span></h3>\n                \n                  </div>\n                  <AdminCandidateFilter \n                          //checkedItemsIndustry={this.state.checkedItemsIndustry}  \n                          locationSelected={this.state.locationSelected}\n                          industrySelected={this.state.industrySelected}\n                          experience={this.state.experience} \n                          salary={this.state.salary} \n                          myCandidate={this.state.myCandidate}\n                          activeCandidate={this.state.activeCandidate}\n                          openToOpportunity={this.state.openToOpportunity}\n                          onlyNotCompletedCandidate={this.state.onlyNotCompletedCandidate}\n                          handleCheckBoxChange={this.updateCheckList.bind(this)}\n                          search={this.searchCandidate.bind(this)}\n                          handlePropChange={this.handlePropChange.bind(this)}\n                          onFieldChanged={this.inputRangeChanged.bind(this)}\n                          clearFilter={this.clearFilter.bind(this)}\n                          updateSearchText={this.updateSearchText.bind(this)}\n                          selectSearchText={this.selectSearchText.bind(this)}\n                          searchText={this.state.searchText}\n                          searchUserText={this.state.searchUserText}\n                          autocompleteChange={this.autocompleteChange.bind(this)}\n                  />\n            {/*</Widget>\n          </Modal>*/}\n              </DialogContent>\n          </Dialog>\n          \n          <div className=\"d-flex mb-4\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                      onClick={(e) => this.openModal(e,'showFilterPopup')}>\n                  <font size=\"+1\">Filter</font>\n                </Button>\n                {/*<Button size=\"small\" variant=\"contained\" color=\"red\" className=\"ml-auto jr-btn jr-btn-lg bg-white\" \n                        onClick={() => this.setState({ isRemindWarning: true })}\n                >Profile Completion Reminder</Button>*/}\n        \n                <Button size=\"small\" variant=\"contained\" className=\"ml-auto jr-btn jr-btn-lg bg-white\" \n                        onClick={() => this.props.history.push(\"/candidate/register\")}\n                >New Candidate</Button>\n          </div>   \n          \n          <div id=\"inif-container\" className=\"table-container admin-infinite-table\">\n            <Table stickyHeader aria-label=\"sticky customized table\">\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">Candidate Name</StyledTableCell>\n                    <StyledTableCell align=\"center\">Contact</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Candidate Phone</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Current Company<br />(Job Title)</StyledTableCell>\n                    <StyledTableCell align=\"center\">Salary<br />Experience</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Current Title</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Industry<br />(Job Function)</StyledTableCell>\n                    <StyledTableCell align=\"center\">Location<br />(Open to Relocation)</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Is active user</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Open to opportunities<br />(Notice Period)</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Notice Period (Month)</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Is profile completed</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Candidate Profile</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">View Applications</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                  <InfiniteScroll\n                      className=\"MuiTableBody-root\"\n                      pageStart={0}\n                      element={'tbody'}\n                      loadMore={this.getMoreCandidate.bind(this)}\n                      hasMore={this.state.hasMore}\n                      loader={loaderComponent}\n                      useWindow={false}\n                      getScrollParent={() => document.getElementById('inif-container')}\n                    >\n                      {items}\n                  </InfiniteScroll>\n            </Table>\n          </div>\n          <CandidateApplicationListForm candidateId={this.state.activeCandidateId} isOpen={this.state.applicationListOpen} closeModal={() => this.closeModal('applicationListOpen')} />\n        </div>\n      }\n        <SweetAlert show={isRemindWarning}\n                    warning\n                    showCancel\n                    confirmBtnText={\"Yes, Send it!\"}\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\n                    onConfirm={() => this.sendReminder()}\n                    onCancel={() => this.setState({ isRemindWarning: false })}\n        >\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\n        </SweetAlert>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList, industryList, listLoading} = state.list;\n  return {\n    countryList,\n    industryList,\n    listLoading\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminCandidateList));\n\n","/home/ubuntu/environment/jobslab-web/src/app/job/PostJob.js",["2502","2503","2504"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport {SPECIALITY_LENGTH} from 'constants/AutoSuggest';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ContainerHeader from 'components/ContainerHeader';\nimport Widget from \"components/Widget\";\nimport TextField from '@material-ui/core/TextField';\nimport InputSalary from 'components/InputNumber/InputSalary';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TreeSelect, { SHOW_PARENT } from 'rc-tree-select';\nimport 'rc-tree-select/assets/index.css';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport * as notification from 'actions/Notification';\nimport { Helmet } from 'react-helmet';\n\nclass PostJob extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      loader : true,\n      isUpdate: false,\n      isFormLoading: false,\n      \n      jobTitle:\"\",\n      salary: '',\n      experience: '',\n      company: null,\n      client: [],\n      location: null,\n      city: null,\n      //jobCategory: [],\n      majorLanguage: [],\n      minorLanguage: [],\n      majorSpeciality: [],\n      minorSpeciality: [],\n      jobSummary:'',\n      jobResponsibilities:'',\n      jobRequirements:'',\n      exposeCompanyName: false,\n      exposeSalary: true,\n      careerExpertInsight: '',\n      treeIndustry:[],\n      client_list: [],\n      isOpen: true,\n      isExclusive: false,\n    }\n  }\n    \n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.initJobData();\n    /*\n    const clientDataSet = axios.get('/api/admins/get/client/list');\n    clientDataSet.then(result => {\n      if(result.data.isSuccess && (result.data.client_list != null))\n        this.setState({client_list : Object.assign([], result.data.client_list)});\n    })\n    \n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 500);\n    */\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initJobData();\n    }\n  }\n  \n  initJobData = () => {\n    if(!this.props.listLoading) \n    {\n      if (this.props.match.params.jobId != null) {\n        var jobId = this.props.match.params.jobId;\n        axios.get('/api/jobs/get/job/'+jobId)\n        .then(res => {\n          if (res.data.isSuccess) {\n            var companyList = this.props.companyList ? this.props.companyList : [];\n            this.setState({\n              isOpen: (res.data.job.isOpen==null) ? true : res.data.job.isOpen,\n              isExclusive: (res.data.job.isExclusive==null) ? true : res.data.job.isExclusive,\n              jobTitle : (res.data.job.jobTitle==null) ? '' : res.data.job.jobTitle,\n              company: (res.data.job.company == null) ? '' : companyList.find(obj => { return obj.name===res.data.job.company }),\n              client: (res.data.job.client==null) ? [] : res.data.job.client,\n              exposeCompanyName: (res.data.job.isPublic == null) ? false : res.data.job.isPublic,\n              exposeSalary: (res.data.job.isSalaryPublic == null) ? true : res.data.job.isSalaryPublic,\n              ///jobCategory: (res.data.job.category==null) ? [] : res.data.job.category.map(obj => { return { value: obj._id, label: obj.name } }),\n              //jobCategory:this.props.jobCategoryList.filter(item => res.data.job.category.find(i => i._id === item.value)),\n              location: (res.data.job.location==null) ? null : { value: res.data.job.location._id, label: res.data.job.location.name },\n              city: res.data.job.address && res.data.job.address.city ? res.data.job.address.city : null,\n              //industry: (res.data.job.industry==null) ? null : { value: res.data.job.industry._id, label: res.data.job.industry.name },\n              treeIndustry: (res.data.industryTreeList==null) ? [] : res.data.industryTreeList,\n              //subIndustry: (res.data.job.subIndustry==null) ? null : { value: res.data.job.subIndustry._id, label: res.data.job.subIndustry.name },\n              salary: (res.data.job.salaryMax==null) ? 0 : res.data.job.salaryMax,\n              experience: (res.data.job.yearMin==null) ? 0 : res.data.job.yearMin,\n              majorSpeciality: (res.data.job.speciality.major==null) ? [] : res.data.job.speciality.major.map(obj => { return obj }),//this.state.speciality_list.filter(obj => { return obj.value === spec._id })[0])\n              minorSpeciality: (res.data.job.speciality.minor==null) ? [] : res.data.job.speciality.minor.map(obj => { return obj }),//this.state.speciality_list.filter(obj => { return obj.value === spec._id })[0])\n              majorLanguage: (res.data.job.languageProf.major==null) ? [] : this.props.languageList.filter(item => res.data.job.languageProf.major.find(i => i._id === item.value)),//res.data.job.languageProf.major.map(obj => { return { value: obj._id, label: obj.name } }),//this.state.language_list.filter(obj => { return obj.value === lang._id })[0])\n              minorLanguage: (res.data.job.languageProf.minor==null) ? [] : this.props.languageList.filter(item => res.data.job.languageProf.minor.find(i => i._id === item.value)),//res.data.job.languageProf.minor.map(obj => { return { value: obj._id, label: obj.name } }),//this.state.language_list.filter(obj => { return obj.value === lang._id })[0])\n              jobSummary: (res.data.job.summary==null) ? '' : res.data.job.summary,\n              jobResponsibilities: (res.data.job.responsibility==null) ? \"\" : res.data.job.responsibility.join(\"\\n\"),\n              jobRequirements: (res.data.job.requirement==null) ? \"\" : res.data.job.requirement.join(\"\\n\"),\n              careerExpertInsight: (res.data.job.expertInsight==null) ? \"\" : res.data.job.expertInsight.content,\n              isUpdate: true,\n            }, () => {\n                this.updateClientList(res.data.job.company);\n                //\n            });\n          }\n          else {\n            alert(\"This job does not exist anymore.\");\n          }\n        })\n        .catch(function (err) {\n          console.log(err);\n          //e.preventDefault();\n        });\n      }\n      this.setState({loader: false });\n    }\n  }\n  \n  textboxChange = (e) => {\n    this.setState({ \n      [e.target.name]: e.target.value\n    });\n    //console.log(e.target)\n  }\n  \n  handleNumberInputChange = (e) => {\n    \n    var val = e.target.value.replace(/\\D/g,'');\n    this.setState({\n      [e.target.name]: val,\n    });\n  };\n  \n  autocompleteChange = (e, value, name) => {\n    if(name == 'company' && value)\n      this.updateClientList(value.name)\n    console.log(value);\n    this.setState({ [name]: value });\n  }\n  \n  autocompleteTextChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  updateClientList = (companyName) => {\n    var data = {};\n    if(companyName)\n      data = {company : companyName};\n    axios.post('/api/admins/get/client/list/more', data)\n      .then(resp => {\n        if(resp.data.isSuccess)\n        {\n          var clientIdList = this.state.client.map(item => item._id._id);\n          var clientList = resp.data.client_list.filter(obj => { return clientIdList.indexOf(obj._id._id) > -1});\n          this.setState({ \n            client_list: resp.data.client_list,\n            client: (clientIdList.length > 0) ? clientList: [],\n          });\n          console.log(this.state.client);\n        }\n      })\n  }\n  \n  handleSwitchChange = (e, checked) => {\n    this.setState({ [e.target.name]: checked });\n  };\n  \n  onTreeChange = (value, ...rest) => {\n    //console.log('onChange', value, ...rest);\n    this.setState({ treeIndustry:value });\n    //console.log(value);\n  };\n  \n /* onSearch = (value, ...args) => {\n    //console.log('Do Search:', value, ...args);\n    this.setState({ treeSearchValue: value });\n  };*/\n  formSubmit = (e) => {\n    e.preventDefault();\n\n    //this.setState({ isFormLoading: true });\n    //console.log(this.state.majorSpeciality);\n    const data = {\n      isOpen: this.state.isOpen,\n      isExclusive: this.state.isExclusive,\n      jobTitle: this.state.jobTitle,\n      company: (this.state.company == null) ? \"\" : this.state.company.name,\n      client: this.state.client==null ? [] : this.state.client.map(obj => obj._id),\n      isPublic: this.state.exposeCompanyName,\n      isSalaryPublic: this.state.exposeSalary,\n      //category: this.state.jobCategory.map(obj => obj.value),\n      location: this.state.location==null ? null : this.state.location.value,\n      city: this.state.city==null ? null : this.state.city,\n      industry: this.state.treeIndustry==null ? null : this.state.treeIndustry,\n      //subIndustry: this.state.subIndustry==null ? null : this.state.subIndustry.value,\n      salaryMax: this.state.salary,\n      yearMin: this.state.experience,\n      majorSpeciality: this.state.majorSpeciality,//.map(obj => obj.value), //https://cythilya.github.io/2018/06/17/array-and-object-handling/\n      minorSpeciality: this.state.minorSpeciality,//.map(obj => obj.value),\n      majorLanguage: this.state.majorLanguage.map(obj => obj.value),\n      minorLanguage: this.state.minorLanguage.map(obj => obj.value),\n      summary: this.state.jobSummary,\n      responsibility: this.state.jobResponsibilities,\n      requirement: this.state.jobRequirements,\n      expertInsight: this.state.careerExpertInsight,\n    };\n    console.log(data)\n    \n    if (this.props.match.params.jobId != null) {\n      data.jobId = this.props.match.params.jobId;\n    }\n    \n    axios.post('/api/jobs/set/job/post', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        notification.success(\"You have posted a job successfully.\");\n        if(res.data.jobId)\n          this.props.history.push('/job/'+res.data.jobId);\n        //this.props.history.push('/job/'+this.props.match.params.jobId);\n        //window.scrollTo(0, 0);\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        this.setState({ isFormLoading: false });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n      //e.preventDefault();\n    });\n  }\n  \n  addPoint = (field) => {\n    var point = this.state[field];\n    if((point == \"\" || point.trim().endsWith('\\n'))) // && point.trim().endsWith('•')\n      point  += '• ';\n    else if(!point.trim().endsWith('•'))\n      point  += '\\n• ';\n    console.log(point);\n    this.setState({\n      [field] : point\n    })\n  }\n  \n  render() {\n    const { loader } = this.state;\n    const { isOpen, jobTitle, isExclusive, company, exposeCompanyName, client, location, city, salary, experience, jobResponsibilities, jobRequirements, jobSummary, majorSpeciality, majorLanguage, careerExpertInsight } = this.state;\n    const languageList = (this.props.languageList)?this.props.languageList:[];\n    const countryList = this.props.countryList ? this.props.countryList : [];\n    const industry_tree_list = this.props.industry_tree_list ? this.props.industry_tree_list : [];\n    //const jobCategoryList = this.props.jobCategoryList ? this.props.jobCategoryList : [];\n    const companyList = this.props.companyList ? this.props.companyList : [];\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.name ? option.name : \"\")),\n    });\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress />\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div style={{'width':'80%','margin': '0 auto'}} className=\"animated slideInUpTiny animation-duration-3\">\n          <Helmet>\n              <title>{this.state.isUpdate?\"Update Job\": \"Post a New Job\" } | JobsLab</title>\n          </Helmet>\n          <ContainerHeader title={this.state.isUpdate?\"Update Job\": \"Post a New Job\" } />\n          \n          <Widget styleName=\"jr-card-profile\" >\n            <div className=\"d-flex mb-2\">\n              <div>\n                <h3 className=\"card-title font-weight-bold mt-2\">Job Details</h3>\n              </div>\n              <div className=\"ml-auto\">\n                <FormControlLabel\n                  control={\n                    <Switch name=\"isOpen\"\n                      color=\"primary\"\n                      classes={{\n                        checked: 'text-primary'\n                        //bar: 'bg-primary',\n                      }}\n                      className=\"mb-2\"\n                      checked={isOpen}\n                      onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                    />\n                  }\n                  label=\"Job Open\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"row\" style={{'z-index': '1'}}>\n              <div className=\"col-md-4 mb-md-4\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <TextField\n                      name=\"jobTitle\"\n                      label=\"Job Title\"\n                      fullWidth\n                      value={jobTitle}\n                      onChange={this.textboxChange}\n                      error={!jobTitle}\n                      helperText={!jobTitle && \"Required\"}\n                    />\n                  </div>\n                  <div className=\"col-12\">\n                    <FormControlLabel\n                      control={\n                        <Switch name=\"isExclusive\"\n                          color=\"primary\"\n                          classes={{\n                            checked: 'text-primary',\n                            //bar: 'bg-primary',\n                          }}\n                          checked={isExclusive}\n                          onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                        />\n                      }\n                      label=\"Exclusive\"\n                    />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"col-md-4 mb-md-4\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <Autocomplete\n                      value={company}\n                      options={companyList ? companyList : []}\n                      getOptionLabel={option => option.name}\n                      filterOptions={filterOptions}\n                      id=\"company\"\n                      renderInput={params => (\n                        <TextField \n                          {...params} \n                          label=\"Company\" \n                          fullWidth \n                          error={!company}\n                          helperText={!company && \"Required\"}\n                        />\n                      )}\n                      onChange={(e, value) => this.autocompleteChange(e, value, 'company')}\n                    />\n                  </div>\n                  <div className=\"col-12\">\n                    <FormControlLabel\n                      control={\n                        <Switch name=\"exposeCompanyName\"\n                          color=\"primary\"\n                          classes={{\n                            checked: 'text-primary',\n                            //bar: 'bg-primary',\n                          }}\n                          checked={this.state.exposeCompanyName}\n                          onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                        />\n                      }\n                      label=\"Expose Company Name\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-md-4\">\n                {/*<TextField\n                  name=\"clientName\"\n                  label=\"Client Name\"\n                  fullWidth\n                  value={clientName}\n                  onChange={this.textboxChange}\n                  error={!clientName}\n                  helperText={!clientName && \"Required\"}\n                />*/}\n                <Autocomplete\n                  multiple\n                  value={client}\n                  options={this.state.client_list}\n                  getOptionLabel={option => ( option._id && option._id.name ? option._id.name.firstName : \"\" ) + \" \" + (option._id && option._id.name ? option._id.name.lastName : \"\") + \" - \" + (option._id && option._id.email ? option._id.email : \"\")}\n                  id=\"client\"\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      label=\"Client\" \n                      placeholder=\"\" \n                      fullWidth \n                      error={!client.length>0}\n                      helperText={!client.length>0 && \"Required\"}\n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'client')}\n                />\n              </div>\n              {/*<div className=\"col-md-4 mb-md-4\">\n                <TextField\n                  name=\"clientEmail\"\n                  label=\"Client Email\"\n                  fullWidth\n                  value={clientEmail}\n                  onChange={this.textboxChange}\n                  error={!clientEmail}\n                  helperText={!clientEmail && \"Required\"}\n                />\n              </div>*/}\n              <div className=\"col-md-4 mb-md-4\">\n                <Autocomplete\n                    value={location}\n                    options={countryList}\n                    getOptionLabel={option => option.label}\n                    id=\"location\"\n                    renderInput={params => (\n                      <TextField \n                        {...params} \n                        label=\"Location\" \n                        fullWidth \n                        error={!location}\n                        helperText={!location && \"Please select Location.\"}\n                      />\n                    )}\n                    onChange={(e, value) => this.autocompleteChange(e, value, 'location')}\n                />\n              </div>\n              <div className=\"col-md-4 mb-md-4\">\n                <TextField\n                  //id=\"jobTitle\"\n                  name=\"city\"\n                  label=\"City\"\n                  value={city}\n                  onChange={this.textboxChange}\n                  fullWidth\n                />\n              </div>\n              <div className=\"col-md-4 mb-md-4\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <InputSalary\n                      name=\"salary\"\n                      label=\"Monthly Salary (Max.)\"\n                      fullWidth\n                      value={salary}\n                      onChange={this.textboxChange}\n                      error={!salary}\n                      helperText={!salary && \"Please input Monthly Salary.\"}\n                    />\n                  </div>\n                  <div className=\"col-12\">\n                    <FormControlLabel\n                      control={\n                        <Switch name=\"exposeSalary\"\n                          color=\"primary\"\n                          classes={{\n                            checked: 'text-primary',\n                            //bar: 'bg-primary',\n                          }}\n                          checked={this.state.exposeSalary}\n                          onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                        />\n                      }\n                      label=\"Expose Salary\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-md-4\">\n                <TextField\n                  name=\"experience\"\n                  label=\"Year of Experience (Min.)\"\n                  type=\"number\"\n                  fullWidth\n                  min=\"0\"\n                  value={experience}\n                  onKeyDown={ (evt) => evt.key === 'e' && evt.preventDefault() }\n                  onChange={this.handleNumberInputChange}\n                  error={!experience}\n                  helperText={!experience && \"Please input Year of Experience.\"}\n                />\n              </div>\n              {/*\n              \n              <div className=\"col-md-4 mb-md-4\"> \n                  <p>Job Categories</p>\n                  <Autocomplete\n                    multiple\n                    id=\"jobCategory\"\n                    options={jobCategoryList}\n                    getOptionLabel={option => option.label}\n                    value={this.state.jobCategory}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"\"\n                        placeholder=\"\"\n                        fullWidth\n                      />\n                    )}\n                    onChange={(e, value) => this.autocompleteChange(e, value, 'jobCategory')}\n                  />  \n              </div>\n              */}\n              \n              {/*\n              <Button className=\"jr-btn mt-n1 mr-n2\" color=\"primary\" onClick={() => this.addPoint('jobResponsibilities')}>\n                  <i className=\"zmdi zmdi-plus zmdi-hc-lg\"/>\n                  <span>Add New Point</span>\n              </Button>\n              */}\n              <div className=\"col-md-12 mb-md-12 mt-4\">\n                <TextField\n                  className=\"jobTextArea\"\n                  name=\"jobResponsibilities\"\n                  label=\"Responsibilities\"\n                  fullWidth\n                  multiline={true}\n                  variant=\"outlined\"\n                  value={jobResponsibilities}\n                  onChange={this.textboxChange}\n                  error={!jobResponsibilities}\n                  helperText={!jobResponsibilities && \"Required\"}\n                />\n              </div>\n              {/*\n              <Button className=\"jr-btn mt-n1 mr-n2\" color=\"primary\" onClick={() => this.addPoint('jobRequirements')}>\n                  <i className=\"zmdi zmdi-plus zmdi-hc-lg\"/>\n                  <span>Add New Point</span>\n              </Button>\n              */}\n              <div className=\"col-md-12 mb-md-12 mt-4\">\n                <TextField\n                  className=\"jobTextArea\"\n                  name=\"jobRequirements\"\n                  label=\"Requirements\"\n                  fullWidth\n                  multiline={true}\n                  variant=\"outlined\"\n                  value={jobRequirements}\n                  onChange={this.textboxChange}\n                  error={!jobRequirements}\n                  helperText={!jobRequirements && \"Required\"}\n                />\n              </div>\n                            \n              <div className=\"col-md-12 mb-md-12 mt-4\">\n                <TextField\n                  className=\"jobTextArea\"\n                  name=\"jobSummary\"\n                  label=\"Summary\"\n                  fullWidth\n                  multiline={true}\n                  variant=\"outlined\"\n                  value={jobSummary}\n                  onChange={this.textboxChange}\n                  error={!jobSummary}\n                  helperText={!jobSummary && \"Required\"}\n                />\n              </div>\n\n            </div>\n          </Widget>\n          \n          \n          \n          <Widget styleName=\"jr-card-profile\">\n            <div className=\"mb-12\">\n              <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Qualification Requirements</h3>\n            </div>\n            \n            <div className=\"row\" style={{'z-index': '1'}}>\n              <div className=\"col-md-12 mb-md-12 mb-4 job-tree-select\">\n                <p>Industries</p>\n                <TreeSelect\n                    className=\"check-select\"\n                    transitionName=\"rc-tree-select-dropdown-slide-up\"\n                    choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n                    dropdownStyle={{ height: 200, overflow: 'auto' }}\n                    dropdownPopupAlign={{ overflow: { adjustY: 0, adjustX: 0 }, offset: [0, 2] }}\n                    placeholder={<i>Please select industries</i>}\n                    //searchPlaceholder=\"Search Here\"\n                    treeLine\n                    maxTagTextLength={10}\n                    value={this.state.treeIndustry}\n                    //searchValue={this.state.treeSearchValue}\n                    autoClearSearchValue\n                    treeData={industry_tree_list}\n                    treeNodeFilterProp=\"title\"\n                    treeCheckable\n                    //showSearch\n                    allowClear\n                    showCheckedStrategy={SHOW_PARENT}\n                    onSearch={this.onSearch}\n                    onChange={this.onTreeChange}\n                    onSelect={this.onSelect}\n                    maxTagCount={2}\n                    maxTagPlaceholder={valueList => {\n                      console.log('Max Tag Rest Value:', valueList);\n                      return `${valueList.length} rest...`;\n                    }}\n                 />\n              </div>\n              \n              <div className=\"col-md-6 mb-md-6 mb-4\"> \n                <Autocomplete\n                  multiple\n                  autoHighlight\n                  id=\"majorSpeciality\"\n                  open={this.state.majorSpecialityText !=null ? (this.state.majorSpecialityText.length >= SPECIALITY_LENGTH ? true : false) : false}\n                  options={this.props.specialityList ? this.props.specialityList : []}\n                  //getOptionLabel={option => option.label}\n                  value={majorSpeciality}\n                  freeSolo\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      //variant=\"outlined\"\n                      label=\"Required Specialities\"\n                      placeholder=\"\"\n                      fullWidth\n                      error={!majorSpeciality.length>0}\n                      helperText={!majorSpeciality.length>0 && \"Requried.\"}\n                    />\n                  )}\n                  onInputChange={(e, value) => this.autocompleteTextChange(e, value, 'majorSpecialityText')}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'majorSpeciality')}\n                />  \n              </div>\n              \n              <div className=\"col-md-6 mb-md-6 mb-4\"> \n                <Autocomplete\n                  multiple\n                  autoHighlight\n                  id=\"minorSpeciality\"\n                  open={this.state.minorSpecialityText !=null ? (this.state.minorSpecialityText.length >= SPECIALITY_LENGTH ? true : false) : false}\n                  options={this.props.specialityList ? this.props.specialityList : []}\n                  //getOptionLabel={option => option.label}\n                  value={this.state.minorSpeciality}\n                  freeSolo\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      //variant=\"outlined\"\n                      label=\"Optional Specialities\"\n                      placeholder=\"\"\n                      fullWidth\n                    />\n                  )}\n                  onInputChange={(e, value) => this.autocompleteTextChange(e, value, 'minorSpecialityText')}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'minorSpeciality')}\n                />  \n              </div>\n            \n              <div className=\"col-md-6 mb-md-6 mb-4\">\n                <Autocomplete\n                  multiple\n                  autoHighlight\n                  id=\"majorLanguage\"\n                  options={languageList}\n                  getOptionLabel={option => option.label}\n                  value={majorLanguage}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      //variant=\"outlined\"\n                      label=\"Required Languages\" \n                      placeholder=\"\" \n                      fullWidth \n                      error={!majorLanguage.length>0}\n                      helperText={!majorLanguage.length>0 && \"Requried.\"}\n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'majorLanguage')}\n                />  \n              </div>\n              \n              <div className=\"col-md-6 mb-md-6 mb-4\">\n                <Autocomplete\n                  multiple\n                  autoHighlight\n                  id=\"minorLanguage\"\n                  options={languageList}\n                  getOptionLabel={option => option.label}\n                  value={this.state.minorLanguage}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      //variant=\"outlined\"\n                      label=\"Optional Languages\" \n                      placeholder=\"\"\n                      fullWidth \n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'minorLanguage')}\n                />  \n              </div>\n            </div>\n          </Widget>\n          \n          <Widget styleName=\"jr-card-profile\">\n            <div className=\"mb-12\">\n              <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Career Expert Insight</h3>\n            </div>\n            \n            <div className=\"row\">\n              <div className=\"col-md-12 mb-md-4\">\n                <TextField\n                  className=\"jobTextArea\"\n                  name=\"careerExpertInsight\"\n                  fullWidth\n                  multiline={true}\n                  variant=\"outlined\"\n                  value={careerExpertInsight}\n                  onChange={this.textboxChange}\n                  error={!careerExpertInsight}\n                  helperText={!careerExpertInsight && \"Requried.\"}\n                />\n              </div>\n            </div>\n          </Widget>\n          \n          <div className=\"row\">\n            <Button variant=\"contained\" className=\"mt-1 mr-3 ml-auto\" color=\"primary\" onClick={this.formSubmit} disabled={this.state.isFormLoading}> {this.state.isFormLoading && <i className='fa fa-spinner fa-spin' />}{ this.state.isUpdate ? \"Update\" : \"Post\" }</Button>\n          </div>\n          \n        </div>\n        \n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { listLoading, companyList, specialityList, countryList, languageList, industry_tree_list } = state.list //jobCategoryList\n  return { \n    listLoading,\n    companyList,\n    specialityList, \n    countryList,\n    languageList,\n    industry_tree_list,\n    //jobCategoryList,\n  }\n};\n\nexport default withRouter(connect(mapStateToProps, null)(PostJob));\n","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminApplicationList.js",["2505","2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from \"axios\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n//import Select from 'react-select';\n//import InterviewScheduleForm from 'components/popup/InterviewScheduleForm';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport Widget from \"components/Widget\";\n//import Switch from '@material-ui/core/Switch';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { numberWithCommas } from 'util/functions.js';\nimport moment from \"moment\";\nimport { Helmet } from 'react-helmet';\n\nimport AdminApplicationFilter from 'components/popup/AdminApplicationFilter';\n\nvar queryString = require('query-string');\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass AdminApplicationList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalStyleState : modalStyle.jobListModalStyle,\n      loader:true,\n      jid : \"\",\n      score: 0.8,\n      hasMore: true,\n  \t  pageSize: 20,\n  \t  pageNum: 1,\n  \t  lastApplicationId: null,\n  \t  noRecordFound: false,\n  \t  pageReady: false,\n      //appList: [],\n      applicationList: [],\n      appStateList: [],\n      //checkedItemsAppStat: new Map(),\n      similarity: { min: 0, max: 100 },\n      recommenededJob: false,\n      activeJob: true,\n      searchText: \"\",\n      searchList: [],\n      \n      location: null,\n      industry: null,\n      location_list: [],\n      industry_list: [],\n      //checkedItemsIndustry: new Map(),\n      industrySelected: [],\n      appStateSelected: [],\n      //For Interview Scheduling\n      selectedAppId: null,\n      interviewModalIsOpen: false,\n      showFilterPopup: false,\n    }\n  }\n\n  componentDidMount() {\n      this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n      this.initData();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initData();\n    }\n  }\n  \n  initData = async () => {\n  if(!this.props.listLoading) \n  {\n    var applicationStateList = [];\n    const appStatResult = await axios.get('/api/admins/get/application/state/list'); //For React-Select\n    if(appStatResult.data.isSuccess)\n    {\n      applicationStateList = appStatResult.data.applicationState_list;\n      this.setState({appStateList : appStatResult.data.applicationState_list});\n    }\n    /*\n    Promise.all([appStateList]).then(results => {\n      var result = results[0];\n      if(result.data.isSuccess)\n        this.setState({appStateList : result.data.applicationState_list});\n    }); */\n\n    if (this.props.match.params.jobId != null) {\n      this.state.jid = this.props.match.params.jobId;\n    }\n    var params = queryString.parse(this.props.location.search);\n    var searchText = (params.q) ? params.q : \"\";\n    var industry = (params.ind) ? params.ind : \"\";\n    var location = this.state.location_list.find((obj) => { return ((obj.value == params.loc) ? obj : null) });\n    //var industry = this.state.industry_list.find((obj) => { return ((obj.value == params.ind) ? obj : null) });\n    //var location = (this.state.location_list.hasOwnProperty(params.loc)) ? params.loc : 'default';\n    //var industry = (this.state.industry_list.hasOwnProperty(params.ind)) ? params.ind : 'default';\n    var appStat = (params.appStat) ? params.appStat : \"\";\n    var recommenededJob = (params.recomJob == \"true\") ? true : false;\n    var activeJob = (params.activeJob == \"false\") ? false : true;\n    var minSimilarity = (parseInt(params.minSim)) ? parseInt(params.minSim) : 0;\n    var maxSimilarity = (parseInt(params.maxSim)) ? parseInt(params.maxSim) : 100;\n    maxSimilarity = (maxSimilarity > 100) ? 100 : maxSimilarity;\n    minSimilarity = (minSimilarity >= maxSimilarity) ? (maxSimilarity - 10) : minSimilarity;\n    \n    /*\n    var tempMap = new Map();\n    appStat.split(\",\").forEach(function (item) {\n        if(/^\\d+$/.test(item))\n          tempMap.set(item, true);\n    });\n    appStat = tempMap;\n    */\n    \n    // application status\n    var selectedAppState = [];\n    appStat.split(\",\").forEach(function (item) {\n        var tempappStat = applicationStateList.find((appStateObj) => { return ((appStateObj.value == item) ? appStateObj : null) });\n        if(tempappStat)\n          selectedAppState.push(tempappStat);\n    });\n    appStat = selectedAppState;\n    \n    /*\n    // industry\n    tempMap = new Map();\n    industry.split(\",\").forEach(function (item) {\n        tempMap.set(item, true);\n    });\n    industry = tempMap;\n    */\n    \n    // industry\n    var selectedIndustry = [];\n    var industryList = this.props.industryList ? this.props.industryList : [];\n    industry.split(\",\").forEach(function (item) {\n        var tempIndustry = industryList.find((industryObj) => { return ((industryObj.value == item) ? industryObj : null) });\n        console.log(tempIndustry);\n        if(tempIndustry)\n          selectedIndustry.push(tempIndustry);\n    });\n    \n    industry = selectedIndustry;\n      \n    this.setState({\n          searchText : searchText,\n          location: location,\n          industrySelected: industry,\n          appStateSelected: appStat,\n          //industry: industry,\n          similarity:{ min: minSimilarity, max: maxSimilarity},\n          recommenededJob: recommenededJob,\n          activeJob: activeJob,\n          //checkedItemsAppStat: appStat,\n          //checkedItemsIndustry: industry,\n          pageReady: true\n      }, () => {\n          this.getMoreApplication();\n      });\n    //}//);\n    \n  }\n }\n  \n getMoreApplication = () => {\n\n    if(this.state.pageReady)\n    {\n      var appStat = \"\"\n      /*\n      this.state.checkedItemsAppStat.forEach(function(value, key) {\n        if(value && key)\n          appStat += key + \",\";\n      });\n      if(appStat.length>0)\n      appStat = appStat.substr(0, appStat.length-1); \n      */\n      this.state.appStateSelected.forEach(function(object) {\n        if(object.value)\n          appStat += object.value + \",\";\n      });\n      if(appStat.length>0)\n        appStat = appStat.substr(0, appStat.length-1); \n\n      /*\n      var industry = \"\"\n\n      this.state.checkedItemsIndustry.forEach(function(value, key) {\n        if(value)\n          industry += key + \",\";\n      });\n      if(industry.length>0)\n       industry = industry.substr(0, industry.length-1); \n      */\n      var industry = \"\";\n    \n      this.state.industrySelected.forEach(function(object) {\n        if(object.value)\n          industry += object.value + \",\";\n      });\n      \n      if(industry.length>0)\n        industry = industry.substr(0, industry.length-1); \n      \n      axios.post('/api/admins/get/application/list/more' , {\n        jid : this.state.jid,\n        pageNum: this.state.pageNum,\n        lastApplicationId: this.state.lastApplicationId,\n        recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        searchCountryId: this.state.location ? this.state.location.value : \"default\",\n        searchIndustryId: industry ? industry : \"default\",\n        minSimilarity: this.state.similarity.min,\n        maxSimilarity: this.state.similarity.max,\n        appStat: appStat,\n        recommenededJob: this.state.recommenededJob,\n        activeJob: this.state.activeJob,\n      }) \n        .then(res => {\n          if (res.data.isSuccess) {\n            console.log(res.data.applicationList.length);\n            \n            this.setState({\n                loader: false,\n                applicationList:  this.state.applicationList.concat(res.data.applicationList),\n                hasMore: (res.data.hasMore == true) ? true : false,\n                lastApplicationId: (res.data.applicationList.length > 0) ? res.data.applicationList[res.data.applicationList.length-1]._id: this.state.lastApplicationId,\n                pageNum: this.state.pageNum + 1\n            });\n            console.log(this.state.lastApplicationId);\n            \n            //if records are not returned\n            if(!this.state.lastApplicationId)\n            {\n                 this.setState({ loader: false, noRecordFound:true });\n            }\n          }\n        })\n        .catch(function (err) {\n          //console.log(err);\n        });   \n    }\n  }\n \n  //For React-Select\n  /*handleSelectChange = (object, appId) => {\n    console.log(object)\n    console.log(appId)\n    \n    if (object.label==\"Interviewing\") {//(object.value==410) { //Interview Schedule\n      //noScroll.on();\n      this.setState({\n        selectedAppId      : appId,\n        interviewModalIsOpen  : true,\n      })\n    }\n    else {\n      this.appStateChange(appId, object.value, object.label);\n    }\n  }\n  \n  appStateChange = (appId, appStateId, appStateName) => {\n    if (window.confirm('Do you wish to change this application status?')) {\n      const data = {\n        appId: appId,\n        appStateId: appStateId,\n      }\n      axios.post('/api/admins/set/application/state/update', data)\n      .then(res => {\n        if (res.data.isSuccess) {\n          console.log('status updated')\n          this.completeSelectChange(appId, appStateId, appStateName);\n          let array = [...this.state.applicationList];\n          let index = array.findIndex(obj => { return obj._id === appId });\n          array[index]['stateInfo']['_id'] = appStateId;\n          array[index]['stateInfo']['adminStatus'] = appStateName;\n          this.setState({ applicationList: array });\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  completeSelectChange = (appId, appStateId, appStateName) => {\n    let array = [...this.state.applicationList];\n    let index = array.findIndex(obj => { return obj._id === appId });\n    array[index]['stateInfo']['_id'] = appStateId;\n    array[index]['stateInfo']['adminStatus'] = appStateName;\n    this.setState({ applicationList: array, interviewModalIsOpen: false });\n  }\n  \n  \n  \n  handleSwitchChange = (e, checked) => {\n    this.setState({ [e.target.name]: checked });\n  };*/\n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n }\n \n handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n }\n \n inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n  \n  searchApplication = (e) => {\n    var queryParm = \"?\";\n    var seperator = \"&\";\n    var appStat = \"\";\n\n    this.state.appStateSelected.forEach(function(object) {\n      if(object.value)\n        appStat += object.value + \",\";\n    });\n    \n    if(appStat.length>0)\n      appStat = appStat.substr(0, appStat.length-1); \n    \n    /*\n    this.state.checkedItemsAppStat.forEach(function(value, key) {\n      if(value && key)\n        appStat += key + \",\";\n    });\n    appStat = appStat.substr(0, appStat.length-1); \n    */\n    \n    var industry = \"\"\n    this.state.industrySelected.forEach(function(object) {\n      if(object.value)\n        industry += object.value + \",\";\n    });\n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n    /*\n    this.state.checkedItemsIndustry.forEach(function(value, key) {\n      if(value && key)\n        industry += key + \",\";\n    });\n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n    */\n    queryParm += \"q=\" + this.state.searchText + seperator;\n    queryParm += \"loc=\" +((this.state.location != null) ? this.state.location.value : \"default\") + seperator;\n    queryParm += \"ind=\" + (industry || '') + seperator;\n    queryParm += \"appStat=\" + appStat + seperator;\n    queryParm += \"minSim=\" + this.state.similarity.min + seperator;\n    queryParm += \"maxSim=\" + this.state.similarity.max + seperator;\n    queryParm += \"actJob=\" + this.state.activeJob + seperator;\n    queryParm += \"recomJob=\" + this.state.recommenededJob;\n    window.location = '/admin/applicationlist' + queryParm;\n  }\n  \n  clearFilter = () => {\n  \n    this.setState({\n      checkedItemsAppStat: new Map(),\n      //checkedItemsIndustry: new Map(),\n      industrySelected : [],\n      appStateSelected : [],\n      similarity      : { min: 0, max: 100 },\n      searchText : \"\",\n      location : null, //this.state.location_list.find((obj) => { return (obj.label == \"Hong Kong\") }),\n      industry : null,\n      recommenededJob: false,\n      activeJob: true,\n    });\n  }\n \n  openModal = (e) => {\n    e.preventDefault();\n    this.setState({showFilterPopup: true});\n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name]: false });\n  }\n  \n  /*selectSearchText(text){\n     this.setState({\n      searchText: text,\n    });\n  }*/\n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n  }\n  \n  viewApplcation = (application) => {\n    var applicationId = (application != null) ? application : \"\";\n    if(applicationId)\n      window.open(\"/application/\"+applicationId, \"_blank\");\n    else\n      alert(\"Application data error!\");\n  }\n  \n  render() {\n    const { loader } = this.state;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.applicationList.map((application, i) => {\n      items.push(\n                  <StyledTableRow key={i}>\n                    <StyledTableCell align=\"center\">{application.updatedAt ? moment(application.updatedAt).format(\"YYYY/MM/DD\") : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\"><a href={\"/resume/\"+application.userInfo._id} target=\"_blank\">{application.userInfo.name ? application.userInfo.name.firstName + \" \" + application.userInfo.name.lastName : \"\"}</a></StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">\n                      {application.userInfo.email ? application.userInfo.email : \"\"}<br />\n                      {application.userInfo.phone ? application.userInfo.phone.dial + \" \" + application.userInfo.phone.number : \"\"}\n                    </StyledTableCell>*/}\n                    {/*<StyledTableCell align=\"center\">{application.userInfo.email ? application.userInfo.email : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application.userInfo.phone ? application.userInfo.phone.dial + \" \" + application.userInfo.phone.number : \"\"}</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      <a href={\"/job/\"+application.jobInfo._id} target=\"_blank\">{application.jobInfo ? application.jobInfo.jobTitle : \"\"}</a><br />\n                      ({application.jobClientDetailsInfo ? application.jobClientDetailsInfo.company : \"\"})\n                    </StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">{application.jobClientDetailsInfo ? application.jobClientDetailsInfo.company : \"\"}</StyledTableCell>*/}\n                    {/*<StyledTableCell style={{'min-width':'250px'}} align=\"center\">{application.industryInfo.map( (item, i) => <div>{item.name}</div> )}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application.jobInfo ? application.jobInfo.yearMin : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application.jobInfo ? '$'+numberWithCommas(application.jobInfo.salaryMax) : \"\"}</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      {application.similarityInfo == null ? 0 : Math.round(application.similarityInfo.score*100)+'%'}\n                    </StyledTableCell>\n                    <StyledTableCell style={{'min-width':'250px'}} align=\"center\">\n                      {application.stateInfo.adminStatus}\n                       {/*<Select\n          \t \t\t\t\t\t\t  className=\"react-select-container\"\n          \t \t\t\t\t\t\t  classNamePrefix=\"react-select\"\n                          value={ { value: application.stateInfo._id, label: application.stateInfo.adminStatus } }\n                          onChange={(obj) => this.handleSelectChange(obj, application._id)}\n                          options={this.state.appStateList}\n                          defaultMenuIsOpen={false}\n                        />*/}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                    {\n                      !application.referralUserInfo ? \"N/A\" :\n                      <a href={\"/resume/\"+application.referralUserInfo._id} target=\"_blank\">{application.referralUserInfo.name ? application.referralUserInfo.name.firstName + \" \" + application.referralUserInfo.name.lastName : \"\"}</a>\n                    }\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                       <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewApplcation(application && application._id ? application._id : \"\")}>\n                          View\n                       </Button>\n                    </StyledTableCell>\n                </StyledTableRow>\n      )\n    });\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div>\n          <Helmet>\n              <title>My Application List | JobsLab</title>\n          </Helmet>\n          \n          {/*<Modal\n            isOpen={this.state.showFilterPopup}\n            closeTimeoutMS={200}\n            style={this.state.modalStyleState}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={() => this.closeModal('showFilterPopup')}\n            className=\"jobListModal\"\n            overlayClassName=\"jobListModal-Overlay\" \n            contentLabel=\"Example Modal\"\n          >*/}\n            {/*<Widget styleName=\"jr-card-profile\">*/}\n            <Dialog open={this.state.showFilterPopup} onClose={() => this.closeModal('showFilterPopup')} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n              <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}>  \n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Filter <span className=\"close-popup\" onClick={() => this.closeModal('showFilterPopup')}><i className=\"la la-close\"></i></span></h3>\n                \n                  </div>\n                  <AdminApplicationFilter \n                          //checkedItemsIndustry={this.state.checkedItemsIndustry} \n                          industrySelected={this.state.industrySelected}\n                          appStateSelected={this.state.appStateSelected}\n                          //checkedItemsAppStat={this.state.checkedItemsAppStat}  \n                          similarity={this.state.similarity} \n                          recommenededJob={this.state.recommenededJob}\n                          activeJob={this.state.activeJob}\n                          appStateList={this.state.appStateList}\n                          handleCheckBoxChange={this.updateCheckList.bind(this)}\n                          search={this.searchApplication.bind(this)}\n                          handlePropChange={this.handlePropChange.bind(this)}\n                          onFieldChanged={this.inputRangeChanged.bind(this)}\n                          clearFilter={this.clearFilter.bind(this)}\n                          updateSearchText={this.updateSearchText.bind(this)}\n                          selectSearchText={this.selectSearchText.bind(this)}\n                          searchText={this.state.searchText}\n                          autocompleteChange={this.autocompleteChange.bind(this)}\n                  />\n            {/*</Widget>\n          </Modal>*/}\n            </DialogContent>\n          </Dialog>\n          \n          <div className=\"col-xl-4 col-lg-4 col-md-4 col-4 mb-4\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                      onClick={(e) => this.openModal(e)}>\n                  <font size=\"+1\">Filter</font>\n                </Button>\n          </div>   \n          <div id=\"inif-container\" className=\"table-container admin-infinite-table\">\n            <Table stickyHeader aria-label=\"sticky customized table\">\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">Update Date</StyledTableCell>\n                    <StyledTableCell align=\"center\">Candidate Name</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Candidate Contact</StyledTableCell>*/}\n                    {/*<StyledTableCell align=\"center\">Candidate Email</StyledTableCell>\n                    <StyledTableCell align=\"center\">Candidate Phone</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\" style={{\"min-width\":\"200px\"}}>Job Title<br/>(Company)</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Company</StyledTableCell>*/}\n                    {/*<StyledTableCell align=\"center\">Job Industry</StyledTableCell>\n                    <StyledTableCell align=\"center\">Job Year (Min.)</StyledTableCell>\n                    <StyledTableCell align=\"center\">Job Salary (Max.)</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Matching Score</StyledTableCell>\n                    <StyledTableCell align=\"center\">Application Status</StyledTableCell>\n                    <StyledTableCell align=\"center\">Referrer</StyledTableCell>\n                    <StyledTableCell align=\"center\">Application Details</StyledTableCell>\n                    \n                  </TableRow>\n                </TableHead>\n                  <InfiniteScroll\n                      className=\"MuiTableBody-root\"\n                      pageStart={0}\n                      element={'tbody'}\n                      loadMore={this.getMoreApplication.bind(this)}\n                      hasMore={this.state.hasMore}\n                      loader={loaderComponent}\n                      useWindow={false}\n                      getScrollParent={() => document.getElementById('inif-container')}\n                    >\n                      {items}\n                  </InfiniteScroll>\n                {/*\n                   this.state.applicationList.map((application, i) => (\n                      <StyledTableRow key={i}>\n                      <StyledTableCell align=\"center\">{application.createdAt ? moment(application.createdAt).format(\"YYYY/MM/DD\") : \"\"}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.userInfo.name ? application.userInfo.name.lastName + \" \" + application.userInfo.name.firstName : \"\"}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.userInfo.email ? application.userInfo.email : \"\"}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.userInfo.phone ? application.userInfo.phone.dial + \" \" + application.userInfo.phone.number : \"\"}</StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        {application.similarityInfo == null ? 0 : Math.round(application.similarityInfo.score*100)+'%'}\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.jobClientDetailsInfo ? application.jobClientDetailsInfo.company : \"\"}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.jobInfo ? application.jobInfo.jobTitle : \"\"}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.jobInfo ? application.jobInfo.yearMin : \"\"}</StyledTableCell>\n                      <StyledTableCell style={{'min-width':'250px'}} align=\"center\">{application.industryInfo.map( (item, i) => <div>{item.name}</div> )}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{application.jobInfo ? '$'+numberWithCommas(application.jobInfo.salaryMax) : \"\"}</StyledTableCell>\n                      <StyledTableCell style={{'min-width':'250px'}} align=\"center\">\n                         <Select\n            \t \t\t\t\t\t\t  className=\"react-select-container\"\n            \t \t\t\t\t\t\t  classNamePrefix=\"react-select\"\n                            value={ { value: application.stateInfo._id, label: application.stateInfo.adminStatus } }\n                            onChange={(obj) => this.handleSelectChange(obj, application._id)}\n                            options={this.state.appStateList}\n                            defaultMenuIsOpen={false}\n                          />\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  ))\n                */}\n            </Table>\n          </div>\n        </div>\n      }\n      {/*<InterviewScheduleForm isOpen={this.state.interviewModalIsOpen} appId={this.state.selectedAppId} completeSchedule={this.completeSelectChange} closeModal={this.closeModal} />*/}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList, industryList, listLoading} = state.list;\n  return {\n    countryList,\n    industryList,\n    listLoading\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminApplicationList));\n","/home/ubuntu/environment/jobslab-web/src/actions/index.js",[],"/home/ubuntu/environment/jobslab-web/src/styles/themes/cyanTheme.js",["2520"],"import cyan from '@material-ui/core/colors/cyan';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport default {\r\n  palette: {\r\n    common: {\r\n/*      black: '#000',\r\n      white: '#fff',\r\n      dark: '#020202',*/\r\n      black: '#000',\r\n      white: '#fff',\r\n      dark: cyan[700],\r\n    },\r\n    primary: {\r\n      light: cyan[300],\r\n      main: cyan[500],\r\n      dark: cyan[700],\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      light: green[300],\r\n      main: green['A200'],\r\n      dark: green[700],\r\n      contrastText: '#fff'\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n  typography: {\r\n    button: {\r\n      fontWeight: 400,\r\n      textAlign: 'capitalize'\r\n    },\r\n  },\r\n};\r\n","/home/ubuntu/environment/jobslab-web/src/constants/ActionTypes.js",[],"/home/ubuntu/environment/jobslab-web/src/util/asyncComponent.js",[],"/home/ubuntu/environment/jobslab-web/src/util/ScrollToTop.js",["2521"],"import React, { Component } from 'react';\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      console.log(this.props.location);\n      console.log(prevProps.location)\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default (ScrollToTop)","/home/ubuntu/environment/jobslab-web/src/components/sideBar/SideNav/index.js",["2522"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport SidenavContent from './SidenavContent';\nimport UserInfo from 'components/UserInfo';\nimport {COLLAPSED_DRAWER, FIXED_DRAWER, HORIZONTAL_NAVIGATION, VERTICAL_NAVIGATION} from 'constants/ActionTypes';\nimport {toggleCollapsedNav, updateWindowWidth} from 'actions/Setting';\n\nclass SideNav extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n  \n  onToggleCollapsedNav = (e) => {\n    const val = !this.props.navCollapsed;\n    this.props.toggleCollapsedNav(val);\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', () => {\n      this.props.updateWindowWidth(window.innerWidth)\n    });\n  }\n  \n  render() {\n    var { isLoggedin, userType, navCollapsed, drawerType, width, navigationStyle} = this.props;\n      \n    let drawerStyle = drawerType.includes(FIXED_DRAWER) ? 'd-xl-flex' : drawerType.includes(COLLAPSED_DRAWER) ? '' : 'd-flex';\n    let type = 'permanent';\n    if (drawerType.includes(COLLAPSED_DRAWER) || (drawerType.includes(FIXED_DRAWER) && width < 1200)) {\n      type = 'temporary';\n    }\n\n    if (navigationStyle === HORIZONTAL_NAVIGATION) {\n      drawerStyle = '';\n      type = 'temporary';\n    }\n    return (\n      <div className={`app-sidebar d-none ${drawerStyle}`}>\n        <Drawer className=\"app-sidebar-content\"\n                variant={type}\n                open={type.includes('temporary') ? navCollapsed : true}\n                onClose={this.onToggleCollapsedNav}\n                classes={{\n                  paper: 'side-nav',\n                }}\n        >\n          { isLoggedin && <UserInfo /> }\n          <SidenavContent isLoggedin={isLoggedin} userType={userType} />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {navCollapsed, drawerType, width, navigationStyle} = state.settings;\n  const { isLoggedin, userType } = state.auth;\n  return {\n    isLoggedin, userType, navCollapsed, drawerType, width, navigationStyle\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {toggleCollapsedNav, updateWindowWidth})(SideNav));\n\n","/home/ubuntu/environment/jobslab-web/src/lngProvider/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Footer/index.js",["2523","2524","2525","2526","2527"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport Button from '@material-ui/core/Button';\nimport IntlMessages from 'util/IntlMessages';\n\nclass Footer extends Component {\n  render() {\n    return (\n       <footer className=\"app-footer\">\n       <div className=\"footer-left\">\n        <div className=\"footer-left-list\">\n          <Link to='/terms-of-use' className=\"d-inline-block mr-3\">TERMS OF USE</Link>\n          <Link to='/privacy-policy' className=\"d-inline-block mr-3\">PRIVACY POLICY</Link>\n          <Link to='/faq' className=\"d-inline-block mr-3\">FAQ</Link>\n          <Link to='/contact' className=\"d-inline-block mr-3\">CONTACT US</Link>\n        </div>\n        <span className=\"d-inline-block\">Employment Agency License 61446</span>\n      </div>\n      <div className=\"footer-right\">\n        <div className=\"footer-icon\">\n          <a href=\"https://www.facebook.com/jobslab.io\" target=\"_blank\" ><i class=\"fab fa-facebook-f\"></i></a>\n          <a href=\"https://www.linkedin.com/company/jobslab\" target=\"_blank\" ><i class=\"fab fa-linkedin-in\"></i></a>\n          <a href=\"https://twitter.com/jobslabjobs\" target=\"_blank\" ><i class=\"fab fa-twitter\"></i></a>\n        </div>\n        <span className=\"d-inline-block\">Copyright Jobslab &copy; {moment().format(\"YYYY\")}</span>\n      </div>\n\n        {/*<Button\n          href=\"https://codecanyon.net/cart/configure_before_adding/20978545?license=regular&ref=phpbits&size=source&support=bundle_12month&_ga=2.172338659.1340179557.1515677375-467259501.1481606413\"\n          target=\"_blank\"\n          size=\"small\"\n          color=\"primary\"\n        ><IntlMessages id=\"eCommerce.buyNow\"/></Button>*/}\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","/home/ubuntu/environment/jobslab-web/src/components/Header/index.js",["2528","2529","2530","2531","2532","2533","2534","2535","2536","2537","2538","2539","2540","2541"],"import React, { Component } from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\n//import Avatar from '@material-ui/core/Avatar';\nimport Avatar from 'react-avatar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Dropdown, DropdownMenu, DropdownToggle} from 'reactstrap';\nimport {IntlProvider} from 'react-intl';\nimport axios from \"axios\";\nimport io from 'socket.io-client';\n\nimport SearchBox from 'components/SearchBox';\nimport AppNotification from 'components/Header/AppNotification/index';\nimport {switchLanguage, toggleCollapsedNav} from 'actions/Setting';\nimport IntlMessages from 'util/IntlMessages';\nimport CardHeader from './CardHeader/index';\nimport UserInfoPopup from 'components/UserInfo/UserInfoPopup';\nimport LoginForm from 'components/popup/LoginForm';\nimport SignupForm from 'components/popup/SignupForm';\nimport LinkedinFollow from 'components/LinkedinFollow';\n\nimport { isMobile } from 'util/functions';\n\nimport {\n  BELOW_THE_HEADER,\n  COLLAPSED_DRAWER,\n  FIXED_DRAWER,\n  HORIZONTAL_NAVIGATION,\n  VERTICAL_NAVIGATION,\n  INSIDE_THE_HEADER\n} from 'constants/ActionTypes';\nimport { JOBSLAB_ICON_URL } from 'constants/PictureUrl';\n\nvar socket = io('',\n{'path': '/ws',\n 'reconnection': true,\n 'reconnectionDelay': 1000,\n 'reconnectionAttempts': Infinity\n});\n\n//var noScroll = require('no-scroll');\n\nclass Header extends Component {\nconstructor(props) {\n    super(props);\n    \n    this.state = {\n      anchorEl: undefined,\n      searchBox: false,\n      searchText: '',\n      userInfoIsOpen: false,\n      appNotifIsOpen: false,\n      loginModalIsOpen: false,\n      signupModalIsOpen: false,\n      notificationList: [],\n      notificationCount: 0,\n      prevNotificationCount: 0,\n      isLoggedin: false,\n      prevIsLoggedin:false,\n      headerWidth: '100%',\n      headerColor:'transparent',\n      /*isLoggedin: false,\n      userType: null,\n      firstName: \"\",\n      lastName: \"\",\n      pictureUrl: null,\n      notificationCout: 0,*/\n    }\n  }\n  \n  listenScrollEvent = e => {\n    if (window.scrollY > 1) {\n      this.setState({headerColor: 'black'})\n    } else {\n      this.setState({headerColor: 'transparent'})\n    }\n  }\n  \n  componentDidMount() {\n    /*this.initData(this.props.initData);*/\n    //noScroll.off(); //For Popup Menu\n  \n    this.updateNotificationCount();\n    window.addEventListener('scroll', this.listenScrollEvent)\n  \n  }\n  \n  onAppNotificationSelect = () => {\n    //if open\n    if(!this.state.appNotifIsOpen)\n    {\n      //this.setState({ notificationCount: 0 });\n      if(this.state.notificationCount > 0)\n      {\n        this.state.notificationCount = 0;\n        console.log(\"this.state.notificationCount:\" + this.state.notificationCount);\n      }\n      var data = {};\n      axios.post('/api/users/get/notification', data)\n      .then(res => {\n        //console.log(res.data)\n        if (res.data.isSuccess) {\n          this.setState({ notificationList: res.data.notificationList});\n        }  \n        else {\n          console.log(\"failed to get notificationList\");\n          alert(res.data.msg);\n        }\n      });\n      axios.post('/api/users/set/notification/ack', data)\n      .then(res => {\n        if (res.data.isSuccess) {\n          //store.dispatch({ type: 'USER' });\n        }  \n        else {\n          alert(res.data.msg);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n        //e.preventDefault();\n      });\n    }\n    \n    this.setState({\n      appNotifIsOpen: !this.state.appNotifIsOpen\n    })\n  };\n  onSearchBoxSelect = () => {\n    this.setState({\n      searchBox: !this.state.searchBox\n    })\n  };\n  onUserInfoSelect = () => {\n    this.setState({\n      userInfoIsOpen: !this.state.userInfoIsOpen\n    })\n  };\n  handleRequestClose = () => {\n    this.setState({\n      userInfoIsOpen: false,\n      appNotifIsOpen: false,\n      searchBox: false,\n    });\n  };\n  onToggleCollapsedNav = (e) => {\n    const val = !this.props.navCollapsed;\n    this.props.toggleCollapsedNav(val);\n  };\n  /*\n  updateHeaderWidth = () => {\n    var width = document.getElementById('header-bar').parentNode.clientWidth;\n    var headerWidth = document.getElementById('header-bar') ? document.getElementById('header-bar').clientWidth : null;\n    if(width)\n      headerWidth = width;\n    if(headerWidth != this.state.headerWidth)\n    {\n      this.setState({\n        headerWidth : (headerWidth == null) ? '100%' : headerWidth\n      })\n    }\n    \n    console.log(width);\n    console.log('headerWidth:' + headerWidth);\n    console.log('body width:' + document.body.clientWidth);\n  }\n  */\n  \n\n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n\n  }\n  \n  searchByKey = (e) => {\n    if(e.key === 'Enter'){\n      this.searchJob();\n    }\n  }\n  searchJob = () => {\n    //this.props.history.push('/joblist/'+ this.state.searchText + '/' + this.state.location);\n    var queryParm = \"?\";\n    //var seperator = \"&\";\n    if(this.state.searchText)\n    {\n      queryParm += \"q=\" + this.state.searchText// + seperator;\n    }\n    else\n      queryParm = \"\";\n\n    //queryParm += \"loc=default\";\n    window.location = '/joblist' + queryParm;\n  }\n  \n  /*selectSearchText(text){\n     this.setState({\n      searchText: text,\n    });\n  }*/\n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  clearText = () => {\n   this.setState({\n     searchText : \"\",\n   });\n }\n  \n  openModal = (modalType) => {\n    //noScroll.on(); //no-scroll on when Popup Menu Open\n    \n    if(modalType == 'login')\n      this.setState({loginModalIsOpen: true, signupModalIsOpen: false});\n    else if(modalType == 'signup')\n      this.setState({signupModalIsOpen: true, loginModalIsOpen: false});\n  }\n  \n  openSignupModal = () => {\n    this.setState({signupModalIsOpen: true, loginModalIsOpen: false});\n  }\n \n  closeModal = (name) => {\n    this.setState({ [name]: false });\n    //noScroll.off(); //no-scroll off when Popup Menu Close\n  }\n  \n  updateNotificationCount() {\n   console.log(\"start updateNotificationCount.\");\n   socket.on(\"getNotificationCount\", count => {this.setState({ notificationCount: count }); console.log(\"Received new count\" + count);});\n   socket.on('disconnect', function() {\n    console.log(\"disconnect socket\");\n   });\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.notificationCount !== this.state.notificationCount) {\n      this.setState({notificationCount : this.state.notificationCount});\n    }\n    if (prevState.isLoggedin == true && this.state.isLoggedin == false) {\n      this.setState({ \n        userInfoIsOpen: false,\n        appNotifIsOpen: false,\n      });\n    }\n  }\n  \n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.notificationCount!==prevState.prevNotificationCount){\n      return {\n        notificationCount : nextProps.notificationCount,\n        //for internal update checking\n        prevNotificationCount : nextProps.notificationCount\n      };\n    }\n    else if(nextProps.isLoggedin!==prevState.prevIsLoggedin){\n      //socket.close();\n      //socket = openSocket('',{'path': '/ws'});\n      //socket.on(\"getNotificationCount\", count => {this.setState({ notificationCount: count }); console.log(\"Received new count\" + count);});\n      return {\n        isLoggedin : nextProps.isLoggedin,\n        //for internal update checking\n        prevIsLoggedin : nextProps.isLoggedin\n      };\n    }\n    else return null;\n  }\n  \n  render() {\n    //const isLoggedin = this.props.isLoggedin;\n    var {isLoggedin, userData, userType, drawerType, locale, navigationStyle, horizontalNavPosition} = this.props;\n    var {name, pictureUrl}  = userData;\n  \n    if ((userType!= 'admin') && (userType!= 'candidate') && (userType!= 'client'))\n      userType = 'candidate';\n      \n    const drawerStyle = drawerType.includes(FIXED_DRAWER) ? 'd-block d-xl-none' : drawerType.includes(COLLAPSED_DRAWER) ? 'd-block' : 'd-none';\n    const isMobileView = isMobile();\n    return (\n      <IntlProvider locale=\"en\">\n      <AppBar id=\"header-bar\" style={{'width':this.state.headerWidth, backgroundColor:(navigationStyle === HORIZONTAL_NAVIGATION)? this.state.headerColor:null}}\n        className={`app-main-header ${(navigationStyle === HORIZONTAL_NAVIGATION /*&& horizontalNavPosition === BELOW_THE_HEADER*/) ? 'transparent' : ''}`}>\n        \n        <Toolbar className=\"app-toolbar\" disableGutters={false}>\n          {/*navigationStyle === HORIZONTAL_NAVIGATION ?\n            <div className=\"d-block d-lg-none pointer mr-3\" onClick={this.onToggleCollapsedNav}>\n              <span className=\"jr-menu-icon\">\n                <span className=\"menu-icon\"/>\n              </span>\n            </div>\n            :\n            <IconButton className={`jr-menu-icon mr-3 ${drawerStyle}`} aria-label=\"Menu\"\n                        onClick={this.onToggleCollapsedNav}>\n              <span className=\"menu-icon\"/>\n            </IconButton>*/\n            <IconButton className={`jr-menu-icon mr-3 ${drawerStyle}`} aria-label=\"Menu\"\n                        onClick={this.onToggleCollapsedNav}>\n              <span className=\"menu-icon\"/>\n            </IconButton>\n          }\n          \n          <Link className=\"app-logo mr-2\" to=\"/\">\n            <img src={JOBSLAB_ICON_URL+\"jobslab_white.png\"} alt=\"Jobslab\" title=\"Jobslab\"/>\n          </Link>\n          \n          { ( this.props.enableSearchBar ) &&\n            <SearchBox styleName=\"d-none d-lg-block\" placeholder=\"\"\n                     onChange={this.updateSearchText.bind(this)}\n                     searchByKey={this.searchByKey.bind(this)}\n                     selectSearchText={this.selectSearchText.bind(this)}\n                     clearText={this.clearText.bind(this)}\n                     value={this.state.searchText}\n            />\n          }\n          \n          {/* (navigationStyle === HORIZONTAL_NAVIGATION && horizontalNavPosition === INSIDE_THE_HEADER) &&\n          <Menu /> */}\n          { !isLoggedin ?\n          <div className=\"auth-bar\">\n            <a class=\"auth-bar__resources d-none d-lg-flex\" href=\"https://blog.jobslab.io\">\n              <span>Resources</span>\n              <i class=\"fas fa-chevron-right\"></i>\n            </a>\n            {/* !isMobileView && <LinkedinFollow /> */}\n            <div className=\"d-none d-lg-flex\"><LinkedinFollow /></div>\n            <div className=\"auth-bar__btn-group\">\n              <Button className=\"auth-bar__login jr-btn text-white mr-1 mr-md-2\" onClick={() => this.openModal('login')}>\n                Login\n              </Button> \n              <Button variant=\"contained\" className=\"auth-bar__CV jr-btn bg-success text-white mr-2\" onClick={() => this.openModal('signup')}>\n                Submit CV\n              </Button>\n            </div>\n            {/* isMobileView && <LinkedinFollow /> */}\n          </div>\n          :\n          <ul className=\"header-notifications list-inline ml-auto\">\n            <li className=\"list-inline-item app-tour\">\n              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={(e) => this.props.history.push(\"/\"+userType+\"/dashboard\")}>\n                Go To Dashboard\n              </Button>\n            </li>\n            <li className=\"list-inline-item app-tour\">\n              <Dropdown\n                className=\"quick-menu\"\n                isOpen={this.state.appNotifIsOpen}\n                toggle={this.onAppNotificationSelect.bind(this)}>\n\n                <DropdownToggle\n                  className=\"d-inline-block\"\n                  tag=\"span\"\n                  data-toggle=\"dropdown\">\n                  <IconButton className=\"icon-btn\">\n                    <i className={(this.state.notificationCount > 0) ? \"zmdi zmdi-notifications-none icon-alert animated infinite wobble\" : \"zmdi zmdi-notifications-none wobble\"}/>\n                  </IconButton>\n                </DropdownToggle>\n\n                <DropdownMenu right>\n                  <CardHeader styleName=\"align-items-center\"\n                              heading={<IntlMessages id=\"appNotification.title\"/>}/>\n                  <AppNotification toggle={this.onAppNotificationSelect.bind(this)} notificationList={this.state.notificationList} />\n                </DropdownMenu>\n                \n              </Dropdown>\n            </li>\n\n            <li className=\"list-inline-item user-nav\">\n              <Dropdown\n                className=\"quick-menu d-none d-lg-block\"\n                isOpen={this.state.userInfoIsOpen}\n                toggle={this.onUserInfoSelect.bind(this)}>\n\n                <DropdownToggle\n                  className=\"d-inline-block\"\n                  tag=\"span\"\n                  data-toggle=\"dropdown\">\n                  <IconButton classes={{ root: { padding: '0px' } }}>\n                    <Avatar \n                      round={ true } \n                      size={ 42 }\n                      style={ {margin: 2, boxShadow: '0px 0px 30px grey', backgroundColor: 'white'} }\n                      src={ pictureUrl } \n                      name={ name.firstName+\" \"+name.lastName } \n                    />\n                  </IconButton>\n                </DropdownToggle>\n\n                <DropdownMenu right className=\"mt-4 mr-3\">\n                  <UserInfoPopup />\n                </DropdownMenu>\n              </Dropdown>\n            </li>\n          </ul>}\n        </Toolbar>\n\n        <SignupForm isOpen={this.state.signupModalIsOpen} closeModal={() => this.closeModal('signupModalIsOpen')} />\n        <LoginForm isOpen={this.state.loginModalIsOpen} openSignupModal={this.openSignupModal} closeModal={() => this.closeModal('loginModalIsOpen')} />\n      </AppBar>\n\n    </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isLoggedin, userType, userData, notificationCount } = state.auth;\n  const { drawerType, locale, navigationStyle, horizontalNavPosition } = state.settings;\n  return { isLoggedin, userType, userData, notificationCount, drawerType, locale, navigationStyle, horizontalNavPosition }\n};\n\nexport default withRouter(connect(mapStateToProps, {toggleCollapsedNav, switchLanguage})(Header));","/home/ubuntu/environment/jobslab-web/src/actions/UploadCV.js",[],"/home/ubuntu/environment/jobslab-web/src/actions/Status.js",[],"/home/ubuntu/environment/jobslab-web/src/util/functions.js",[],"/home/ubuntu/environment/jobslab-web/src/reducers/index.js",["2542"],"import { combineReducers } from 'redux';\nimport {connectRouter} from 'connected-react-router';\nimport Settings from './Settings';\nimport Auth from './Auth';\nimport List from './List';\nimport Status from './Status';\nimport UploadCV from './UploadCV';\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  settings: Settings,\n  //chatData: ChatData,\n  //contacts: Contact,\n  //mail: Mail,\n  //toDo: ToDo,\n  auth: Auth,\n  list: List,\n  status: Status,\n  uploadcv: UploadCV,\n})\n","/home/ubuntu/environment/jobslab-web/src/redux_saga/Saga.js",[],"/home/ubuntu/environment/jobslab-web/src/actions/Notification.js",[],"/home/ubuntu/environment/jobslab-web/src/util/Auxiliary.js",[],"/home/ubuntu/environment/jobslab-web/src/constants/ApplicationState.js",[],"/home/ubuntu/environment/jobslab-web/src/styles/modalStyle.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/CandidateApplicationListForm.js",["2543","2544","2545","2546","2547","2548","2549","2550"],"import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nimport Widget from \"components/Widget\";\nimport TrueFalseIcon from 'components/TrueFalseIcon';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport axios from \"axios\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport { numberWithCommas } from 'util/functions.js';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport moment from \"moment\";\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass CandidateApplicationListForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      application_list: [],\n\n      hasMore: true,\n      noRecordFound: false,\n  \t  pageSize: 20,\n  \t  pageNum: 1,\n  \t  pageReady: false,\n  \t  activeCandidate: null,\n    }\n  }\n  \n  componentDidMount() {\n     this.state.pageReady = true;\n     this.getMoreCandidateApplication();\n  }\n  \n  getMoreCandidateApplication = () => {\n    if(this.state.pageReady && this.props.candidateId)\n    {\n      axios.post('/api/admins/get/candidate/application/list',{\n        candidateId: this.props.candidateId,\n        pageNum: this.state.pageNum,\n        recordNum: this.state.recordNum\n      }) \n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({\n                application_list:  this.state.application_list.concat(res.data.app_list),\n                hasMore: (res.data.hasMore == true)? true : false,\n                pageNum: this.state.pageNum + 1\n            });\n \n            //if records are not returned\n            if(!this.state.lastUserId)\n            {\n                 this.setState({ noRecordFound:true });\n            }\n          }\n        })\n        .catch(function (err) {\n          //console.log(err);\n        });   \n      \n    }\n  }\n  resetForm = () => {\n    this.props.closeModal('applicationListOpen');\n    \n    this.setState({\n      application_list: [],\n      activeCandidate: \"\",\n      hasMore: true,\n      noRecordFound: false,\n  \t  pageNum : 1\n    })\n  }\n  \n  viewApplcation = (application) => {\n    var applicationId = (application != null) ? application : \"\";\n    if(applicationId)\n      window.open(\"/application/\"+applicationId, \"_blank\");\n    else\n      alert(\"Application data error!\");\n  }\n  \n  viewProfile = (application) => {\n    var applicationId = (application != null) ? application : \"\";\n    if(applicationId)\n      window.open(\"/resume/\"+applicationId, \"_blank\");\n    else\n      alert(\"Candidate data error!\");\n  }\n  \n  render() {\n    const { isOpen } = this.props;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.application_list.map((application, i) => {\n      items.push(\n                  <StyledTableRow key='1'>\n                    <StyledTableCell align=\"center\">{application && application.updatedAt ?  moment(application.updatedAt).format(\"YYYY/MM/DD\") :\"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      <a target='_blank' href={\"/job/\"+application.job._id}>{ application && application.job && application.job.jobTitle ? application.job.jobTitle : \"\"}</a><br/>\n                      ({application && application.job && application.job.company ? application.job.company :\"\"})\n                    </StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">{application && application.job && application.job.company ? application.job.company :\"\"}</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      {application && application.job && application.job.salaryMax ? \"$\"+numberWithCommas(application.job.salaryMax) :\"\"}<br/>\n                      {application && application.job && application.job.yearMin ? application.job.yearMin+\" Yr\" :\"\"}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {application.sim && application.sim.length > 0 ? Math.round(application.sim[0].score*100)+'%' : '0%'}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && application.state ? application.state : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && <TrueFalseIcon checker={application.isReferral} />/*application.referral ? \"Yes\" : \"No\"*/}</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewProfile(application && application._id ? application._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewApplcation(application && application._id ? application._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });\n    \n    return (\n      <Dialog open={isOpen} onClose={()=>this.resetForm()} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n        <DialogContent id=\"application-list\">  \n            <div className=\"mb-3\">\n              <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Application List <span className=\"close-popup\" onClick={()=>this.resetForm()}><i className=\"la la-close\"></i></span></h3>\n            </div>\n            <div className=\"account-popup-area signup-popup-box\">\n        \t    <div className=\"referral-popup\">\n          \t    <div className=\"row justify-content-left\">\n                  <div id=\"inif-container-popup\" className=\"table-container admin-infinite-popup-table\">\n                    <Table stickyHeader aria-label=\"sticky customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell align=\"center\">Update Date</StyledTableCell>\n                          <StyledTableCell align=\"center\">Applied Job<br/>(Company)</StyledTableCell>\n                          {/*<StyledTableCell align=\"center\">Company</StyledTableCell>*/}\n                          <StyledTableCell align=\"center\">Salary (Max)<br/>Experience (Min)</StyledTableCell>\n                          <StyledTableCell align=\"center\">Matching Score</StyledTableCell>\n                          <StyledTableCell align=\"center\">Application Status</StyledTableCell>\n                          <StyledTableCell align=\"center\">Refer</StyledTableCell>\n                          {/*<StyledTableCell align=\"center\">Applicant Profile</StyledTableCell>*/}\n                          <StyledTableCell align=\"center\">Application Details</StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                    \n                      <InfiniteScroll\n                            className=\"MuiTableBody-root\"\n                            pageStart={0}\n                            element={'tbody'}\n                            loadMore={this.getMoreCandidateApplication.bind(this)}\n                            hasMore={this.state.hasMore}\n                            loader={loaderComponent}\n                            useWindow={false}\n                            getScrollParent={() => document.getElementById('inif-container-popup')}\n                          >\n                            {items}\n                      </InfiniteScroll>\n                    </Table>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nexport default CandidateApplicationListForm;\n","/home/ubuntu/environment/jobslab-web/src/components/sideBar/SideNav/SidenavContent.js",["2551","2552","2553","2554","2555"],"import React, {Component} from 'react';\r\nimport {NavLink, withRouter} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport LinkedinFollow from 'components/LinkedinFollow';\r\n\r\n\r\nclass SidenavContent extends Component {\r\n  componentDidMount() {\r\n    const {history} = this.props;\r\n    const that = this;\r\n    const pathname = `${history.location.pathname}`;// get current path\r\n\r\n    const menuLi = document.getElementsByClassName('menu');\r\n    for (let i = 0; i < menuLi.length; i++) {\r\n      menuLi[i].onclick = function (event) {\r\n\r\n        const parentLiEle = that.closest(this, 'li');\r\n        if(menuLi[i].classList.contains('menu') && parentLiEle !== null) {\r\n          event.stopPropagation();\r\n\r\n          if(menuLi[i].classList.contains('open')) {\r\n            menuLi[i].classList.remove('open', 'active');\r\n          } else {\r\n            menuLi[i].classList.add('open', 'active');\r\n          }\r\n        } else {\r\n          for (let j = 0; j < menuLi.length; j++) {\r\n            const parentLi = that.closest(this, 'li');\r\n            if (menuLi[j] !== this && (parentLi === null || !parentLi.classList.contains('open'))) {\r\n              menuLi[j].classList.remove('open');\r\n            } else {\r\n              if(menuLi[j].classList.contains('open')) {\r\n                menuLi[j].classList.remove('open');\r\n              } else {\r\n                menuLi[j].classList.add('open');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const activeLi = document.querySelector('a[href=\"' + pathname + '\"]');// select current a element\r\n    try {\r\n      const activeNav = this.closest(activeLi, 'ul'); // select closest ul\r\n      if (activeNav.classList.contains('sub-menu')) {\r\n        this.closest(activeNav, 'li').classList.add('open');\r\n      } else {\r\n        this.closest(activeLi, 'li').classList.add('open');\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {history} = nextProps;\r\n    const pathname = `${history.location.pathname}`;// get current path\r\n\r\n    const activeLi = document.querySelector('a[href=\"' + pathname + '\"]');// select current a element\r\n    try {\r\n      const activeNav = this.closest(activeLi, 'ul'); // select closest ul\r\n      if (activeNav.classList.contains('sub-menu')) {\r\n        this.closest(activeNav, 'li').classList.add('open');\r\n      } else {\r\n        this.closest(activeLi, 'li').classList.add('open');\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  closest(el, selector) {\r\n    try {\r\n      let matchesFn;\r\n      // find vendor prefix\r\n      ['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'].some(function (fn) {\r\n        if (typeof document.body[fn] === 'function') {\r\n          matchesFn = fn;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      let parent;\r\n\r\n      // traverse parents\r\n      while (el) {\r\n        parent = el.parentElement;\r\n        if (parent && parent[matchesFn](selector)) {\r\n          return parent;\r\n        }\r\n        el = parent;\r\n      }\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedin, userType } = this.props;\r\n    return (\r\n      <CustomScrollbars className=\" scrollbar\">\r\n        <ul className=\"nav-menu\">\r\n        \r\n          { isLoggedin && \r\n          <li className=\"nav-header\">\r\n            My Pages{/*<IntlMessages id=\"sidebar.inBuiltApp\"/>*/}\r\n          </li>}\r\n          { isLoggedin && \r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to={\"/\"+userType+\"/dashboard\"}>\r\n              <i className=\"zmdi zmdi-view-dashboard zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Dashboard{/*<IntlMessages id=\"sidebar.appModule.mail\"/>*/}</span>\r\n            </NavLink>\r\n          </li>}\r\n          { isLoggedin && userType=='candidate' &&\r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/candidate/profile\">\r\n              <i className=\"zmdi zmdi-account-box zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Profile{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </NavLink>\r\n          </li>}\r\n          { isLoggedin && \r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/settings\">\r\n              <i className=\"zmdi zmdi-settings zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Settings{/*<IntlMessages id=\"sidebar.appModule.contact\"/>*/}</span>\r\n            </NavLink>\r\n          </li>}\r\n          \r\n          <li className=\"nav-header\">\r\n            General {/*<IntlMessages id=\"sidebar.inBuiltReduxApp\"/>*/}\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <a href=\"https://blog.jobslab.io/\">\r\n              <i className=\"zmdi zmdi-accounts zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">JobsLab Community{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/joblist\">\r\n              <i className=\"zmdi zmdi-search zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Find Jobs{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/employer\">\r\n              <i class=\"zmdi zmdi-accounts-alt zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Find Talent{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/tax/calculator\">\r\n              <i class=\"zmdi zmdi-money zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Tax Calculator{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/contact\">\r\n              <i class=\"zmdi zmdi-phone-msg zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Contact Us{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <NavLink to=\"/faq\">\r\n              <i class=\"zmdi zmdi-pin-help zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">FAQ{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"menu no-arrow\">\r\n            <a href=\"https://blog.jobslab.io\" target=\"_blank\">\r\n              <i class=\"zmdi zmdi-cloud zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\">Resources{/*<IntlMessages id=\"sidebar.appModule.toDo\"/>*/}</span>\r\n            </a>\r\n          </li>\r\n          \r\n          {/*<li className=\"nav-header\">\r\n            <IntlMessages id=\"sidebar.view\"/>\r\n          </li>\r\n\r\n          <li className=\"menu collapse-box\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-view-web zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.tables\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/table/basic\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.tables.basicTable\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/table/data\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.tables.dataTable\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"timeline_tooltip menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-swap-alt zmdi-hc-fw zmdi-hc-rotate-90\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.timeLine\"/></span>\r\n            </Button>\r\n            <ul className=\"sub-menu\">\r\n\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/time-line/default\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.timeLine.default\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/time-line/default-with-icon\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.timeLine.defaultwithIcons\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/time-line/left-align\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.timeLine.leftAligned\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                            <NavLink className=\"prepend-icon\" to=\"/app/time-line/zigzag\">\r\n                                <span className=\"nav-text\"><IntlMessages id=\"sidebar.timeLine.zigzag\"/></span>\r\n                            </NavLink>\r\n                        </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-view-list zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.customViews\"/></span>\r\n            </Button>\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/custom-views/simple-list\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.customViews.plainListView\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/custom-views/strip-list\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.customViews.withDivider\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/custom-views/card-list\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.customViews.cardListView\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"nav-header\">\r\n            <IntlMessages id=\"sidebar.form\"/>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-book-image zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.forms\"/></span>\r\n            </Button>\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/form/components\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.forms.components\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/form/stepper\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.forms.stepper\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"nav-header\">\r\n            <IntlMessages id=\"sidebar.extensions\"/>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button className=\"void\">\r\n              <i className=\"zmdi zmdi-code-setting zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.editors\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/editor/ck\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.editors.CKEditor\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/editor/wysiswyg\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.editors.WYSISWYGEditor\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button className=\"void\">\r\n              <i className=\"zmdi zmdi-brush zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.pickers\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/pickers/date-time\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.pickers.dateTimePickers\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/pickers/color\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.pickers.colorPickers\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button className=\"void\">\r\n              <i className=\"zmdi zmdi-key zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.extensions\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/extensions/dnd\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extensions.dragNDrop\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/extensions/dropzone\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extensions.dropzone\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extensions/sweet-alert\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extensions.sweetAlert\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extensions/notification\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.extensions.notification\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-chart zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/line\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.line\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/bar\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.bar\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/area\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.area\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/composed\">\r\n                                <span className=\"nav-text\"><IntlMessages\r\n                                  id=\"sidebar.chart.composed\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/scatter\">\r\n                                <span className=\"nav-text\"><IntlMessages\r\n                                  id=\"sidebar.chart.scatter\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/pie\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.pie\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/radial\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.radial\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/radar\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.radar\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/chart/treemap\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.chart.tree\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"map_tooltip menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-google-maps zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.map\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/simple\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.simple\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/styled\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.styled\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/geo-location\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.geoLocation\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/directions\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.mapDirection\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/overlay\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.overlay\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/kml\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.kmLayer\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/popup-info\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.popupInfo\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/traffic\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.trafficLayer\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/street-view\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.streetView\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/event\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.eventListener\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/drawing\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.mapDrawing\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/map/clustering\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.map.mapClustering\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"nav-header\">\r\n            <IntlMessages id=\"sidebar.modules\"/>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button className=\"void\">\r\n              <i className=\"zmdi zmdi-calendar zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/calendar/basic\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.basic\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/calendar/cultures\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.cultures\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/calendar/dnd\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.dnd\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/calendar/popup\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.popup\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/calendar/rendering\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.rendering\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/calendar/selectable\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.selectable\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/calendar/timeslots\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.calendar.timeslots\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-shopping-cart zmdi-hc-fw\"/>\r\n              <span className=\"nav-text text-transform-none\"><IntlMessages id=\"sidebar.eCommerce\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/ecommerce/products-list\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.eCommerce.productsList\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/ecommerce/products-grid\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.eCommerce.productsGrid\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-collection-item-8 zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/app-module/login-1\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule.login1\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/app-module/login-2\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule.login2\"/></span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/login-with-stepper\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.appModule.loginStepper\"/></span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/sign-up-1\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule.signup1\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/sign-up-2\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule.signup2\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/forgot-password-1\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.appModule.forgotPassword1\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/forgot-password-2\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.appModule.forgotPassword2\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/lock-screen-1\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule.lock1\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/app-module/lock-screen-2\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.appModule.lock2\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"nav-header\">\r\n            <IntlMessages id=\"sidebar.extras\"/>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-view-web zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.icons\"/></span>\r\n            </Button>\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/icons/material\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.icons.material\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-collection-bookmark zmdi-hc-fw zmdi-hc-rotate-90\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraElements\"/></span>\r\n            </Button>\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-elements/pricing-table\">\r\n                                <span className=\"nav-text\"><IntlMessages\r\n                                  id=\"sidebar.extraElements.pricingTable\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-elements/callouts\">\r\n                                    <span className=\"nav-text\"><IntlMessages\r\n                                      id=\"sidebar.extraElements.callouts\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-elements/testimonials\">\r\n                                <span className=\"nav-text\"><IntlMessages\r\n                                  id=\"sidebar.extraElements.testimonials\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-pages zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages\"/></span>\r\n            </Button>\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-pages/about-us\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.aboutUs\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-pages/contact-us\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.contactUs\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/extra-pages/blog\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.blog\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\" to=\"/app/extra-pages/faq\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.faq\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-pages/portfolio\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.portfolio\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-pages/error-404\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.404\"/></span>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink className=\"prepend-icon\"\r\n                         to=\"/app/extra-pages/error-500\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.extraPages.500\"/></span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"menu\">\r\n            <Button>\r\n              <i className=\"zmdi zmdi-device-hub zmdi-hc-fw\"/>\r\n              <span className=\"nav-text\"><IntlMessages id=\"sidebar.menuLevels\"/></span>\r\n            </Button>\r\n\r\n            <ul className=\"sub-menu\">\r\n              <li>\r\n                <Button className=\"prepend-icon\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.menuLevels.level1\"/></span>\r\n                </Button>\r\n              </li>\r\n              <li className=\"menu\">\r\n                <Button className=\"prepend-icon\">\r\n                  <span className=\"nav-text\"><IntlMessages id=\"sidebar.menuLevels.level1\"/></span>\r\n                </Button>\r\n\r\n                <ul className=\"sub-menu\">\r\n                  <li>\r\n                    <Button href=\"\">\r\n                      <span className=\"nav-text\"><IntlMessages\r\n                        id=\"sidebar.menuLevels.level2\"/></span>\r\n                    </Button>\r\n                  </li>\r\n                  <li className=\"menu\">\r\n                    <Button href=\"\">\r\n                      <span className=\"nav-text\"><IntlMessages\r\n                        id=\"sidebar.menuLevels.level2\"/></span>\r\n                    </Button>\r\n\r\n                    <ul className=\"sub-menu\">\r\n                      <li>\r\n                        <Button href=\"\">\r\n                          <span className=\"nav-text\"><IntlMessages\r\n                            id=\"sidebar.menuLevels.level3\"/></span>\r\n                        </Button>\r\n                      </li>\r\n                      <li>\r\n                        <Button href=\"\">\r\n                          <span className=\"nav-text\"><IntlMessages\r\n                            id=\"sidebar.menuLevels.level3\"/></span>\r\n                        </Button>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>*/}\r\n\r\n        </ul>\r\n      </CustomScrollbars>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SidenavContent);\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/index.js",["2556","2557","2558","2559","2560","2561"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport EducationItem from \"./EducationItem\";\r\nimport EducationEdit from \"./EducationEdit\";\r\nimport { toggleEducationEdit } from 'actions/Status'; \r\n\r\nclass Education extends Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdd: false,\r\n    };\r\n  }\r\n  \r\n  /******* For Complete Registration Use *******/ \r\n  componentDidMount() {\r\n    if (this.props.isAdd)\r\n      this.setState({ isAdd: this.props.isAdd });\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isAdd !== prevProps.isAdd) {\r\n      this.setState({ isAdd: this.props.isAdd });\r\n    }\r\n  }\r\n  /********************************************/\r\n  \r\n  startAdd = () => {\r\n    this.setState({ isAdd: true });\r\n    this.props.toggleEducationEdit(true);\r\n  }\r\n  \r\n  cancelAdd = () => {\r\n    console.log(\"Cancel Add\")\r\n    this.setState({ isAdd: false });\r\n    this.props.toggleEducationEdit(false);\r\n  }\r\n  \r\n  render() {\r\n    const color = 'black';\r\n    const image = 'graduation-cap';\r\n    const { isAdd } = this.state;\r\n    const { isEducationEditing } = this.props;\r\n    const userRole = this.props.userRole;\r\n    const { education } = this.props.candidateData;\r\n    const { getUserData } = this.props;\r\n    const { uploadedCV, isUploadEdit, cancelUploadEdit } = this.props;\r\n    \r\n    return (\r\n      <div className=\"jr-card\">\r\n        <div className=\"jr-card-header d-flex align-items-start\">\r\n          <div className=\"mr-auto\">\r\n            <h3 className=\"card-heading\">Education</h3>\r\n            {/*<p className=\"sub-heading\">{subHeading}</p>*/}\r\n          </div>\r\n          \r\n          { (userRole==\"candidate\" || userRole==\"admin\") && !isAdd && !isEducationEditing && \r\n            <Button className=\"jr-btn mt-n1 mr-n2\" color=\"primary\" onClick={this.startAdd}>\r\n              <i className=\"zmdi zmdi-plus zmdi-hc-lg\"/>\r\n              <span>Add New</span>\r\n            </Button>\r\n          }\r\n        </div>\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isAdd &&\r\n          <div className=\"media social-list-line\">\r\n            <Avatar className={`${color} z-index-20 size-40 align-item-self mr-3`}>\r\n              <i className={`zmdi zmdi-${image} text-white`}/>\r\n            </Avatar>\r\n            {<EducationEdit candidateData={this.props.candidateData} cancel={this.cancelAdd} refresh={getUserData} />}\r\n          </div>\r\n        }\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && (isUploadEdit.includes(true) &&\r\n          <div className=\"border border-info rounded w-100 p-2 mb-2\">\r\n            <h3 className=\"card-heading text-info\">AI Generated</h3>\r\n            { uploadedCV && uploadedCV.education && uploadedCV.education.map((edu, index)=> \r\n              isUploadEdit[index] && <EducationEdit index={index} candidateData={this.props.candidateData} eduData={edu} cancel={() => cancelUploadEdit(index)} refresh={getUserData} />\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        { education.map((edu, index) => \r\n          <EducationItem key={index} userRole={userRole} candidateData={this.props.candidateData} eduData={edu} refresh={getUserData} />)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { isEducationEditing } = state.status;\r\n  return { isEducationEditing }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  toggleEducationEdit\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Education);\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/index.js",["2562","2563","2564","2565","2566","2567"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CareerItem from './CareerItem';\r\nimport CareerEdit from './CareerEdit';\r\nimport { toggleCareerEdit } from 'actions/Status'; \r\n\r\nclass Career extends Component /* = ({careerData}) =>*/ {\r\n  //const {image, title, description, date, color} = recentData;\r\n  /*const color = 'blue';\r\n  const image = 'case';\r\n  const {jobTitle, company, country, startDate, endDate, description} = this.props.careerData;*/\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdd: false,\r\n    };\r\n  }\r\n  \r\n  /******* For Complete Registration Use *******/ \r\n  componentDidMount() {\r\n    if (this.props.isAdd)\r\n      this.setState({ isAdd: this.props.isAdd });\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isAdd !== prevProps.isAdd) {\r\n      this.setState({ isAdd: this.props.isAdd });\r\n    }\r\n  }\r\n  /********************************************/\r\n  \r\n  startAdd = () => {\r\n    this.setState({ isAdd: true });\r\n    //this.props.dispatch(toggleCareerEdit(true));\r\n    this.props.toggleCareerEdit(true);\r\n  }\r\n  \r\n  cancelAdd = () => {\r\n    console.log(\"Cancel Add\")\r\n    this.setState({ isAdd: false });\r\n    this.props.toggleCareerEdit(false);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const color = 'blue';\r\n    const image = 'case';\r\n    const { isAdd } = this.state;\r\n    const { isCareerEditing } = this.props;\r\n    const userRole = this.props.userRole;\r\n    const { career } = this.props.candidateData;\r\n    const { getUserData } = this.props;\r\n    const { uploadedCV, isUploadEdit, cancelUploadEdit } = this.props;\r\n    \r\n    return (\r\n      <div className=\"jr-card\">\r\n        <div className=\"jr-card-header d-flex align-items-start\">\r\n          <div className=\"mr-auto\">\r\n            <h3 className=\"card-heading\">Career</h3>\r\n            {/*<p className=\"sub-heading\">{subHeading}</p>*/}\r\n          </div>\r\n          \r\n          { (userRole==\"candidate\" || userRole==\"admin\") && !isAdd && !isCareerEditing &&\r\n            <Button className=\"jr-btn mt-n1 mr-n2\" color=\"primary\" onClick={this.startAdd}>\r\n              <i className=\"zmdi zmdi-plus zmdi-hc-lg\"/>\r\n              <span>Add New</span>\r\n            </Button>\r\n          }\r\n        </div>\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isAdd &&\r\n          <div className=\"media social-list-line\">\r\n            <Avatar className={`${color} z-index-20 size-40 align-item-self mr-3`}>\r\n              <i className={`zmdi zmdi-${image} text-white`}/>\r\n            </Avatar>\r\n            <CareerEdit candidateData={this.props.candidateData} cancel={this.cancelAdd} refresh={getUserData} />\r\n          </div>\r\n        }\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && (isUploadEdit.includes(true) &&\r\n          <div className=\"border border-info rounded w-100 p-2 mb-2\">\r\n            <h3 className=\"card-heading text-info\">AI Generated</h3>\r\n            {/*<UploadedCareerEdit newCareer={newCareer} />*/}\r\n            { uploadedCV && uploadedCV.career && uploadedCV.career.map((career, index)=> \r\n              isUploadEdit[index] && <CareerEdit index={index} candidateData={this.props.candidateData} careerData={career} cancel={() => cancelUploadEdit(index)} refresh={getUserData} />\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        { career.map((career, index) => \r\n          <CareerItem key={index} userRole={userRole} candidateData={this.props.candidateData} careerData={career} refresh={getUserData} />)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { isCareerEditing } = state.status;\r\n  return { isCareerEditing }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  toggleCareerEdit\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Career);\r\n","/home/ubuntu/environment/jobslab-web/src/components/ContainerHeader/index.js",["2568","2569","2570","2571"],"import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  //const path = match.path.substr(1);\r\n  //const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      {/*<Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>*/}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/reducers/UploadCV.js",["2572"],"import {\r\n  UPLOAD_CV,\r\n  UPLOAD_CV_SUCCESS,\r\n  UPLOAD_CV_FAILED,\r\n} from 'constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  uploadLoading: false,\r\n  uploadError: false,\r\n  newCareer: [],\r\n  newEducation: [],\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPLOAD_CV:\r\n      return {...state, \r\n        uploadLoading: true, \r\n        uploadError: false,\r\n      };\r\n        \r\n    case UPLOAD_CV_SUCCESS:\r\n      return {...state,\r\n        uploadLoading: false, \r\n        uploadError: false, \r\n        ...action.data \r\n      };\r\n      \r\n    case UPLOAD_CV_FAILED:\r\n      return {...state, \r\n        uploadLoading:false, \r\n        uploadError: true\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/home/ubuntu/environment/jobslab-web/src/reducers/Status.js",["2573"],"import {\r\n  CAREER_EDITING,\r\n  EDUCATION_EDITING,\r\n} from '../constants/Status';\r\n\r\nconst INIT_STATE = {\r\n  isCareerEditing: false,\r\n  isEducationEditing: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case CAREER_EDITING:\r\n      console.log(\"Call CAREER_EDITING\")\r\n      //console.log(action.isCareerEditing)\r\n      return {\r\n        ...state,\r\n        isCareerEditing: action.isCareerEditing\r\n      };\r\n    case EDUCATION_EDITING:\r\n      console.log(\"Call EDUCATION_EDITING\")\r\n      //console.log(action.isEducationEditing)\r\n      return {\r\n        ...state,\r\n        isEducationEditing: action.isEducationEditing\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/home/ubuntu/environment/jobslab-web/src/reducers/List.js",["2574","2575"],"import axios from \"axios\";\r\n\r\nimport {\r\n  INIT_LIST,\r\n  INIT_LIST_SUCCESS,\r\n  INIT_LIST_FAILED,\r\n  \r\n  /*INIT_COUNTRY,\r\n  INIT_COUNTRY_SUCCESS,\r\n  INIT_COUNTRY_FAILED,\r\n  \r\n  INIT_DIALCODE,\r\n  INIT_DIALCODE_SUCCESS,\r\n  INIT_DIALCODE_FAILED,\r\n  \r\n  INIT_COMPANY,\r\n  INIT_COMPANY_SUCCESS,\r\n  INIT_COMPANY_FAILED,\r\n  \r\n  INIT_INDUSTRY,\r\n  INIT_INDUSTRY_SUCCESS,\r\n  INIT_INDUSTRY_FAILED,\r\n  \r\n  INIT_JOBTYPE,\r\n  INIT_JOBTYPE_SUCCESS,\r\n  INIT_JOBTYPE_FAILED,*/\r\n} from \"constants/ActionTypes\";\r\n\r\nconst INIT_STATE = {\r\n  initList: {\r\n    listLoading: false,\r\n    listError: false,\r\n    countryList : [],\r\n    dialList : [],\r\n    industryList : [],\r\n    industry_tree_list : [],\r\n    specialityList : [],\r\n    languageList : [],\r\n    searchList : [],\r\n    companyList : [],\r\n    institutionList : [],\r\n    yearList : [],\r\n    jobCategoryList : [],\r\n  },\r\n  /*initCountry: {\r\n    countryLoading: false,\r\n    countryError: false,\r\n  },\r\n  initIndustry: {\r\n    industryLoading: false,\r\n    industryError: false,\r\n  },\r\n  initJobType: {\r\n    jobTypeLoading: false,\r\n    jobTypeError: false,\r\n  },\r\n  initCountry: {\r\n    countryLoading: false,\r\n    countryError: false,\r\n  },\r\n  initDialCode: {\r\n    dialCodeLoading: false,\r\n    dialCodeError: false,\r\n  },\r\n  initCompany: {\r\n    companyLoading: false,\r\n    companyError: false,\r\n  }*/\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case INIT_LIST:\r\n      return {...state, \r\n        listLoading: true,\r\n        listError: false,\r\n      };\r\n    case INIT_LIST_SUCCESS:\r\n       return {...state, \r\n        listLoading: false,\r\n        listError: false,\r\n        ...action.data \r\n       };\r\n    case INIT_LIST_FAILED:\r\n      return {...state, \r\n        userLoading:false, \r\n        userError: true, \r\n        ...action.data \r\n      }; \r\n      \r\n    /*case INIT_COUNTRY:\r\n      return Object.assign({}, state, {\r\n        initCountry: {\r\n          countryLoading: true,\r\n          countryError: false,\r\n        }\r\n      })\r\n    case INIT_COUNTRY_SUCCESS:\r\n      var obj = Object.assign({}, action.data, {\r\n          countryLoading: false,\r\n          countryError: false,\r\n      })\r\n      return Object.assign({}, \r\n      state, \r\n      {initCountry: obj});\r\n      \r\n    case INIT_COUNTRY_FAILED:\r\n      \r\n      return Object.assign({}, state, {\r\n        initCountry: {\r\n          countryLoading: false,\r\n          countryError: true,\r\n        }\r\n      });\r\n    //////////////////////////////////////////////////\r\n    \r\n    case INIT_INDUSTRY:\r\n      return Object.assign({}, state, {\r\n        initIndustry: {\r\n          industryLoading: true,\r\n          industryError: false,\r\n        }\r\n      })\r\n    case INIT_INDUSTRY_SUCCESS:\r\n      obj = Object.assign({}, action.data, {\r\n          industryLoading: false,\r\n          industryError: false,\r\n      })\r\n      return Object.assign({}, \r\n      state, \r\n      {initIndustry: obj});\r\n      \r\n    case INIT_INDUSTRY_FAILED:\r\n      \r\n      return Object.assign({}, state, {\r\n        initIndustry: {\r\n          industryLoading: false,\r\n          industryError: true,\r\n        }\r\n      });\r\n      //////////////////////////////////////////////////\r\n    \r\n    case INIT_JOBTYPE:\r\n      return Object.assign({}, state, {\r\n        initJobType: {\r\n          jobTypeLoading: true,\r\n          jobTypeError: false,\r\n        }\r\n      })\r\n    case INIT_JOBTYPE_SUCCESS:\r\n      obj = Object.assign({}, action.data, {\r\n          jobTypeLoading: false,\r\n          jobTypeError: false,\r\n      })\r\n      return Object.assign({}, \r\n      state, \r\n      {initJobType: obj});\r\n      \r\n    case INIT_JOBTYPE_FAILED:\r\n      \r\n      return Object.assign({}, state, {\r\n        initJobType: {\r\n          jobTypeLoading: false,\r\n          jobTypeError: true,\r\n        }\r\n      });\r\n      \r\n    //////////////////////////////////////////////////\r\n    \r\n    case INIT_DIALCODE:\r\n      return Object.assign({}, state, {\r\n        initDialCode: {\r\n          dialCodeLoading: true,\r\n          dialCodeError: false,\r\n        }\r\n      })\r\n    case INIT_DIALCODE_SUCCESS:\r\n      obj = Object.assign({}, action.data, {\r\n          dialCodeLoading: false,\r\n          dialCodeError: false,\r\n      })\r\n      return Object.assign({}, \r\n      state, \r\n      {initDialCode: obj});\r\n      \r\n    case INIT_DIALCODE_FAILED:\r\n      \r\n      return Object.assign({}, state, {\r\n        initDialCode: {\r\n          dialCodeLoading: false,\r\n          dialCodeError: true,\r\n        }\r\n      });\r\n\r\n    //////////////////////////////////////////////////\r\n    \r\n    case INIT_COMPANY:\r\n      return Object.assign({}, state, {\r\n        initCompany: {\r\n          companyLoading: true,\r\n          companyError: false,\r\n        }\r\n      })\r\n    case INIT_COMPANY_SUCCESS:\r\n      obj = Object.assign({}, action.data, {\r\n          companyLoading: false,\r\n          companyError: false,\r\n      })\r\n      return Object.assign({}, \r\n      state, \r\n      {initCompany: obj});\r\n      \r\n    case INIT_COMPANY_FAILED:\r\n      \r\n      return Object.assign({}, state, {\r\n        initCompany: {\r\n          companyLoading: false,\r\n          companyError: true,\r\n        }\r\n      });*/\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/home/ubuntu/environment/jobslab-web/src/reducers/Auth.js",["2576","2577"],"import axios from \"axios\";\r\n\r\nimport {\r\n  INIT_USER,\r\n  INIT_USER_SUCCESS,\r\n  INIT_USER_FAILED,\r\n  //UPDATE_USER\r\n} from \"constants/ActionTypes\";\r\n\r\nconst INIT_STATE = {\r\n  userLoading: false,\r\n  userError: false,\r\n  isLoggedin:false,\r\n  userType: '',\r\n  userData: {\r\n    /*name: {\r\n      firstName: '',\r\n      lastName: ''\r\n    }*/\r\n  },\r\n  candidateData: {},\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case INIT_USER:\r\n      //{ ...state, selectedClass: action.classId };\r\n      /*\r\n      return Object.assign({\r\n        isLoggedin:false, \r\n        userError: false,\r\n        userLoading:true \r\n      }, state)\r\n      */\r\n      return {...state, \r\n        userLoading: true, \r\n        userError: false,\r\n        isLoggedin: false,\r\n      };\r\n        \r\n    case INIT_USER_SUCCESS:\r\n      /*\r\n      return Object.assign({\r\n        userError: false, \r\n        userLoading:false\r\n      }, state, action.data);\r\n      */\r\n      return {...state,\r\n        userLoading: false, \r\n        userError: false, \r\n        ...action.data \r\n      };\r\n      \r\n    case INIT_USER_FAILED:\r\n      /*\r\n      return Object.assign({\r\n        userLoading:false, \r\n        userError: true\r\n      }, state);\r\n      */\r\n      return {...state, \r\n        userLoading:false, \r\n        userError: true\r\n      };\r\n   \r\n    /*\r\n    case INIT_USER:\r\n      console.log(\"Run index.js reducer INIT_USER\");\r\n      var initData = initState();\r\n      console.log(initData);\r\n      return Object.assign({}, state, {\r\n        initData: initData\r\n      })\r\n   \r\n    case UPDATE_USER:\r\n      console.log(\"Run index.js reducer UPDATEUSER\");\r\n      console.log(action.payload);\r\n      initData = Promise.resolve(action.payload);\r\n      \r\n      return Object.assign({}, state, {\r\n        initData: initData\r\n      });\r\n       */\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/*\r\nfunction initState() {\r\n  console.log(\"initState triggered\");\r\n  var data = axios.post('/api/redux/getUserData')\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n      return {isLoggedin:false};\r\n    });\r\n  return data;\r\n}\r\n\r\n*/\r\n\r\n/*function updateState() {\r\n  console.log(\"updateState triggered\");\r\n  var data = axios.post('/api/redux/getUserData')\r\n    .then(res => {\r\n      console.log(\"After axios:\" + res.data);\r\n       console.log(res.data);\r\n      return res.data;\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n      return {isLoggedin:false};\r\n    });\r\n  return data;\r\n}*/\r\n","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminApplicationFilter/AdminApplicationFilter.js",["2578","2579","2580","2581","2582","2583","2584","2585","2586","2587"],"import React, {Component, Fragment} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputRange from 'react-input-range';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Expand from \"react-expand-animated\";\r\nimport SearchBox from 'components/SearchBox';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircleUnchecked from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Main,\r\n  BoxExpand,\r\n  ExpandBoxes\r\n} from \"./App.styles.js\";\r\n\r\nconst AutocompleteWithFilterStyle = withStyles({\r\n  tag: {\r\n    height: 24,\r\n    position: \"relative\",\r\n    backgroundColor: \"#3f51b5\",\r\n    //zIndex: 0,\r\n    \r\n    \"& .MuiChip-label\": {\r\n      color: \"#fff\"\r\n    },\r\n    \"& .MuiChip-deleteIcon\": {\r\n      width: 18,\r\n      color: \"#fff\"\r\n    },\r\n    \"&:hover .MuiChip-deleteIcon\": {\r\n      color: \"#f0f0fb\"\r\n    },\r\n    \r\n  }\r\n})(Autocomplete);\r\n\r\nclass AdminApplicationFilter extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n       //country_list : [],\r\n       industry_list : [],\r\n       appState_List : [],\r\n       similarity: { min: 0, max: 100 },\r\n       openBtnList : new Map(),\r\n       open: false,\r\n    };\r\n    \r\n  }\r\n  \r\n  componentDidMount() {\r\n    //const countryData = this.props.country_list;\r\n    const industryData = this.props.industryList;\r\n    const appStateData = this.props.appStateList;\r\n    \r\n    //if((countryData != null))\r\n    //    this.setState({country_list : Object.assign([], countryData)});\r\n    if((industryData != null))\r\n        this.setState({industry_list : Object.assign([], industryData)});\r\n    if((appStateData != null))\r\n        this.setState({appState_List : Object.assign([], appStateData)});\r\n\r\n  }\r\n\r\n  /*clearText = () => {\r\n   this.props.selectSearchText(\"\");\r\n  }*/\r\n \r\n  clearText = (name) => {\r\n   this.props.selectSearchText(\"\", name);\r\n  }\r\n  \r\n  handleChange = name => (event, checked) => {\r\n    this.setState({[name]: checked});\r\n  };\r\n  \r\n  toggle = (targetListName) => {\r\n    //console.log(this.state.industry_list);\r\n    //console.log(this.state.appState_List);\r\n    var list = this.state.openBtnList;\r\n    var isOpen = true;\r\n    if(list.has(targetListName))\r\n      isOpen = !(list.get(targetListName));\r\n    else\r\n      list.set(targetListName,isOpen);\r\n  \r\n    console.log(list);\r\n    \r\n    list.forEach(function(value, key, map) {\r\n      console.log(key);\r\n      if(key==targetListName)\r\n        list.set(key,isOpen);\r\n      else\r\n        list.set(key,false);\r\n    });\r\n    this.setState({\r\n      openBtnList : list\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const transitions = [\"height\", \"opacity\", \"background\"];\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\"  style={{'overflow-y':'auto'}}>\r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('country')} >Countries</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('country') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                    <div className=\"mb-12 filter-group\">\r\n                      <FormGroup>\r\n                         {this.state.country_list.map(item => (\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          color=\"primary\"\r\n                                          checked={this.state.checkedA}\r\n                                          onChange={this.handleChange('checkedA')}\r\n                                          value={item.label}\r\n                                        />\r\n                                      }\r\n                                      label={item.label}\r\n                                    />\r\n          \r\n                                  ))}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment>\r\n          */}\r\n\r\n          <div style={{'margin-bottom':'5px'}}>\r\n            <SearchBox placeholder=\"Candidate Info or Job Info...\"\r\n                       onChange={this.props.updateSearchText}\r\n                       selectSearchText={this.props.selectSearchText}\r\n                       clearText={this.clearText.bind(this)}\r\n                       value={this.props.searchText}\r\n\r\n                 />\r\n          </div>\r\n          \r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Industries</p>\r\n          <AutocompleteWithFilterStyle\r\n            multiple\r\n            limitTags={2}\r\n            id=\"industry\"\r\n            options={this.state.industry_list}\r\n            disableCloseOnSelect\r\n            getOptionLabel={option => option.label}\r\n            value={this.state.industry_list.filter(item => (this.props.industrySelected ? this.props.industrySelected : []).find(i => i.value === item.value))}\r\n            renderOption={(option, { selected }) => (\r\n              <React.Fragment>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  style={{ marginRight: 2 }}\r\n                  checked={selected}\r\n                />\r\n                {option.label}\r\n              </React.Fragment>\r\n            )}\r\n            style={{ width: \"95%\" }}\r\n            className=\"tagLimitStyle\"\r\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'industrySelected')}\r\n          />\r\n          \r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Application Status</p>\r\n          <AutocompleteWithFilterStyle\r\n            multiple\r\n            limitTags={2}\r\n            id=\"appState\"\r\n            options={this.state.appState_List}\r\n            disableCloseOnSelect\r\n            getOptionLabel={option => option.label}\r\n            value={this.state.appState_List.filter(item => (this.props.appStateSelected ? this.props.appStateSelected : []).find(i => i.value === item.value))}\r\n            renderOption={(option, { selected }) => (\r\n              <React.Fragment>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  style={{ marginRight: 2 }}\r\n                  checked={selected}\r\n                />\r\n                {option.label}\r\n              </React.Fragment>\r\n            )}\r\n            style={{ width: \"95%\" }}\r\n            className=\"tagLimitStyle\"\r\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'appStateSelected')}\r\n          />\r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('industry')}>Industries</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('industry') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                      <div  className=\"mb-12 filter-group\">\r\n                        <FormGroup>\r\n                          {this.state.industry_list.map(item => (\r\n                                      <FormControlLabel\r\n                                        control={\r\n                                          <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={(this.props.checkedItemsIndustry)?this.props.checkedItemsIndustry.get(item.value):false}\r\n                                            onChange= { () => this.props.handleCheckBoxChange('checkedItemsIndustry',item.value)}\r\n                                            value={item.label}\r\n                                          />\r\n                                        }\r\n                                        label={item.label}\r\n                                      />\r\n            \r\n                                    ))}\r\n            \r\n                        </FormGroup>\r\n                      </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment>\r\n          \r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('appStatus')}>Application Status</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('appStatus') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                      <div  className=\"mb-12 filter-group\">\r\n                        <FormGroup>\r\n                          {this.state.appState_List.map(item => (\r\n                                      <FormControlLabel\r\n                                        control={\r\n                                          <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={(this.props.checkedItemsAppStat)?this.props.checkedItemsAppStat.get(item.value):false}\r\n                                            onChange= { () => this.props.handleCheckBoxChange('checkedItemsAppStat',item.value)}\r\n                                          />\r\n                                        }\r\n                                        label={item.label}\r\n                                      />\r\n            \r\n                                    ))}\r\n            \r\n                        </FormGroup>\r\n                      </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment>\r\n          */}\r\n          \r\n\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Similarity</p>\r\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\r\n\t\t \t\t\t\t<InputRange\r\n\t\t \t\t\t\t  step={1}\r\n              maxValue={100}\r\n              minValue={0}\r\n              value={this.props.similarity}\r\n              onChange={similarity => { this.props.onFieldChanged(\"similarity\", similarity)}} />\r\n\t\t \t\t\t</div>\r\n\t\t\t \t\t\t\r\n\t\t\t \t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Recommended Job</p>\t\r\n            <Switch\r\n            classes={{\r\n              checked: 'text-primary',\r\n              track: 'bg-primary',\r\n            }}\r\n            checked={this.props.recommenededJob}\r\n            onChange={ () => this.props.handlePropChange('recommenededJob')}\r\n            aria-label=\"Recommended Job\"\r\n          />\r\n          \r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Only Active Job</p>\t\r\n            <Switch\r\n            classes={{\r\n              checked: 'text-primary',\r\n              track: 'bg-primary',\r\n            }}\r\n            checked={this.props.activeJob}\r\n            onChange={ () => this.props.handlePropChange('activeJob')}\r\n            aria-label=\"Only Active Job\"\r\n          />\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.clearFilter() }}>\r\n                        <font size=\"\"><i className=\"la la-undo mr-2\"/></font>\r\n                            Clear\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.search() }}>\r\n                        <font size=\"\"><i className=\"la la-search mr-2\"/></font>\r\n                            Search\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   const {countryList, jobCategoryList, industryList} = state.list;\r\n  return {\r\n    countryList,\r\n    jobCategoryList, \r\n    industryList\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AdminApplicationFilter));","/home/ubuntu/environment/jobslab-web/src/reducers/Settings.js",["2588","2589","2590"],"import {\r\n  CHANGE_DIRECTION,\r\n  CHANGE_NAVIGATION_STYLE,\r\n  DARK_THEME,\r\n  DRAWER_TYPE,\r\n  FIXED_DRAWER,\r\n  COLLAPSED_DRAWER,\r\n  HORIZONTAL_MENU_POSITION,\r\n  INSIDE_THE_HEADER,\r\n  SWITCH_LANGUAGE,\r\n  THEME_COLOR,\r\n  TOGGLE_COLLAPSED_NAV,\r\n  VERTICAL_NAVIGATION,\r\n  HORIZONTAL_NAVIGATION,\r\n  WINDOW_WIDTH\r\n} from '../constants/ActionTypes';\r\nimport {DARK_INDIGO, DARK_CYAN} from '../constants/ThemeColors';\r\n\r\nconst rltLocale = ['ar'];\r\nconst initialSettings = {\r\n  navCollapsed: false,\r\n  drawerType: COLLAPSED_DRAWER,//FIXED_DRAWER,\r\n  themeColor: DARK_CYAN,//DARK_INDIGO,\r\n  darkTheme: false,\r\n  width: window.innerWidth,\r\n  isDirectionRTL: false,\r\n  navigationStyle: HORIZONTAL_NAVIGATION,//VERTICAL_NAVIGATION,\r\n  horizontalNavPosition: INSIDE_THE_HEADER,\r\n  locale: {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'us'\r\n  }\r\n};\r\n\r\nconst settings = (state = initialSettings, action) => {\r\n  switch (action.type) {\r\n    case '@@router/LOCATION_CHANGE':\r\n      return {\r\n        ...state,\r\n        navCollapsed: false\r\n      };\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.isNavCollapsed\r\n      };\r\n    case DRAWER_TYPE:\r\n      return {\r\n        ...state,\r\n        drawerType: action.drawerType\r\n      };\r\n    case WINDOW_WIDTH:\r\n      return {\r\n        ...state,\r\n        width: action.width\r\n      };\r\n    case THEME_COLOR:\r\n      return {\r\n        ...state,\r\n        darkTheme: false,\r\n        themeColor: action.color\r\n      };\r\n    case DARK_THEME:\r\n      return {\r\n        ...state,\r\n        darkTheme: !state.darkTheme\r\n      };\r\n    case SWITCH_LANGUAGE:\r\n\r\n      return {\r\n        ...state,\r\n        locale: action.payload,\r\n        isDirectionRTL: rltLocale.includes(action.payload.locale)\r\n\r\n      };\r\n    case CHANGE_DIRECTION:\r\n      return {\r\n        ...state,\r\n        isDirectionRTL: !state.isDirectionRTL\r\n\r\n      };\r\n\r\n    case CHANGE_NAVIGATION_STYLE:\r\n      return {\r\n        ...state,\r\n        navigationStyle: action.payload\r\n      };\r\n\r\n\r\n    case HORIZONTAL_MENU_POSITION:\r\n      return {\r\n        ...state,\r\n        horizontalNavPosition: action.payload\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default settings;\r\n","/home/ubuntu/environment/jobslab-web/src/components/Widget/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Header/CardHeader/index.js",["2591","2592","2593","2594","2595"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CardMenu from './CardMenu';\r\n\r\nclass CardHeader extends React.Component {\r\n\r\n\r\n  onOptionMenuSelect = event => {\r\n    this.setState({menuState: true, anchorEl: event.currentTarget});\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({menuState: false});\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      menuState: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {heading, subHeading} = this.props;\r\n    let {styleName} = this.props;\r\n    const {anchorEl, menuState} = this.state;\r\n    return (\r\n      <div className={`jr-card-header d-flex align-items-start ${styleName}`}>\r\n        <div className=\"mr-auto\">\r\n          <h3 className=\"card-heading\">{heading}</h3>\r\n          {subHeading && <p className=\"sub-heading\">{subHeading}</p>}\r\n        </div>\r\n        {/*\r\n        <Button className=\"jr-btn mt-n1 mr-n2\" color=\"primary\">\r\n          <i className=\"zmdi zmdi-plus zmdi-hc-lg\"/>\r\n          <span>Add New {heading}</span>\r\n        </Button>\r\n\r\n        <IconButton className=\"icon-btn text-dark\" onClick={this.onOptionMenuSelect.bind(this)}>\r\n          <i className=\"zmdi zmdi-chevron-down\"/>\r\n        </IconButton>\r\n        <CardMenu menuState={menuState} anchorEl={anchorEl}\r\n                  handleRequestClose={this.handleRequestClose.bind(this)}/>*/}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardHeader;\r\nCardHeader.defaultProps = {\r\n  styleName: '',\r\n  subHeading: ''\r\n};\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/actions/Setting.js",[],"/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/fr_FR.js",[],"/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/es_ES.js",[],"/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/it_IT.js",[],"/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/ar_SA.js",[],"/home/ubuntu/environment/jobslab-web/src/util/IntlMessages.js",[],"/home/ubuntu/environment/jobslab-web/src/constants/PictureUrl.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/SignupForm.js",["2596","2597"],"import React, { Component } from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport SignupContent from 'components/auth/SignupContent';\n\n/*import Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nModal.setAppElement(document.getElementById('root'));*/\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      isSignupLoading: false,\n      isUploadLoading: false,\n      isUploadSuccess: false,\n      \n      userType: 'candidate',\n    };\n  }\n  \n  componentDidMount() {\n    this.suggestThemeSignUp = {\n      container:                'containerProfile',\n      containerOpen:            'containerOpenProfile',\n      input:                    'inputSignUp',\n      inputOpen:                'inputOpenProfile',\n      inputFocused:             'inputFocusedProfile',\n      suggestionsContainer:     'suggestionsContainerSignUp',\n      suggestionsContainerOpen: 'suggestionsContainerOpenProfile',\n      suggestionsList:          'suggestionsListProfile',\n      suggestion:               'suggestionProfile',\n      suggestionFirst:          'suggestionFirstProfile',\n      suggestionHighlighted:    'suggestionHighlightedProfile',\n      sectionContainer:         'sectionContainerProfile',\n      sectionContainerFirst:    'sectionContainerFirstProfile',\n      sectionTitle:             'sectionTitleProfile'\n    }\n  }\n  \n  render() {\n    const { isOpen, closeModal } = this.props;\n    \n    return (\n      <Dialog open={isOpen} onClose={closeModal} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n      {/*<Modal\n        isOpen={isOpen}\n        onRequestClose={closeModal}\n        style={modalStyle.loginModalStyle}\n        contentLabel=\"Example Modal\"\n      >\n        \n        <div className=\"login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">*/}\n        <div className=\"signup-content text-center\">\n        <span className=\"close-popup\" onClick={this.props.closeModal}><i className=\"la la-close\"></i></span>\n          {/*<div className=\"login-header\">\n            <Link className=\"app-logo signup\" to=\"/\" title=\"JobsLab\">\n              <img src={require(\"images/Jobslab_blue.png\")} alt=\"JobsLab\" title=\"JobsLab\"/>\n            </Link>\n          </div>*/}\n  \n          <DialogTitle id=\"form-dialog-title\" onClose={closeModal}>Create an account</DialogTitle>\n          {/*<div className=\"mb-4\">\n            <h2><b>{/*<IntlMessages id=\"appModule.createAccount\"/>Create an account</b></h2>\n          </div>*/}\n          <DialogContent>\n            <SignupContent isClient={false} isPopup={true} closePopup={this.props.closeModal} />\n          </DialogContent>\n        </div>\n      {/*</div>\n    </Modal>*/}\n    </Dialog>\n    );\n  }\n  \n}\n\n\nexport default SignupForm;\n","/home/ubuntu/environment/jobslab-web/src/components/popup/LoginForm.js",["2598","2599","2600","2601","2602","2603","2604","2605","2606"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport * as notification from 'actions/Notification';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { LinkedInLoginButton } from \"react-social-login-buttons\";\nimport { JOBSLAB_ICON_URL } from 'constants/PictureUrl';\n\nimport LoginContent from 'components/auth/LoginContent';\n\n\n/*import Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nModal.setAppElement(document.getElementById('root'));*/\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n      isLoading: false,\n      \n      email: '',\n      \n      isEmailInput: true,\n    };\n  }\n  \n  componentDidMount() {\n    console.log(\"Login Form Redirect URL: \" + this.props.redirectUrl);\n    if (this.props.activeStep) \n      this.setState({ activeStep: this.props.activeStep });\n  }\n  \n  closePopup = () => {\n    const { closeModal } = this.props;\n    const { activeStep } = this.state;\n    \n    closeModal();\n    setTimeout(() => {\n      this.setState({ activeStep: 0 })\n    }, 1000);\n  };\n\n  handleNext = () => {\n    const {activeStep} = this.state;\n    this.setState({ activeStep: activeStep + 1 });\n  };\n  \n  getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return this.loginStep();\n      case 1:\n        return this.forgotPasswordStep();\n  \n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n  \n  loginStep() {\n    return (\n      <div className=\"login-form\">\n        <LoginContent isPopup={true} closePopup={this.closePopup} redirectUrl={this.props.redirectUrl} />\n        <div className=\"form-group justify-content-between align-items-center\">\n          <div className=\"mt-3\">\n            <p className=\"text-center\">\n              <Link onClick={this.handleNext} title=\"Reset Password\">\n                <a> Forgot Password? {/*<IntlMessages id=\"appModule.forgotPassword\"/>*/}</a>\n              </Link>\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group justify-content-between align-items-center\">\n          <div className=\"mt-1\">\n            <p className=\"text-center\">New to JobsLab?\n              <Link onClick={this.props.openSignupModal} title=\"Sign Up\">\n                <a> Join now {/*<IntlMessages id=\"appModule.forgotPassword\"/>*/}</a>\n              </Link>\n            </p>\n          </div>\n        </div>\n        <div className=\"extra-login\">\n    \t\t\t<span className=\"or\">OR</span>\n    \t\t\t<div className=\"login-social\">\n    \t\t\t\t<div className=\"inlineBtn-Container\">\n              <a href='/api/auth/linkedin'>\n        \t      <LinkedInLoginButton>\n        \t        <span>Sign in with Linkedin</span>\n        \t      </LinkedInLoginButton>\n        \t    </a>\n        \t  </div>\n    \t\t\t</div>\n    \t\t</div>\n      </div>\n    );\n  }\n  \n  forgotPasswordStep() {\n    const { email, isEmailInput } = this.state;\n    \n    return (\n      <div> \n        <div className=\"mb-2\">\n          <h2>Forgot your password?</h2>\n        </div>\n  \n        <div className=\"login-form\">\n          <TextField\n            name=\"email\" \n            placeholder=\"Email\" \n            value={email} \n            onChange={this.textboxChange}\n            type=\"email\"\n            //id=\"required\"\n            label=\"Email\"\n            fullWidth\n            defaultValue=\"\"\n            margin=\"normal\"\n            className=\"mt-0 mb-4\"\n            error={!isEmailInput}\n            helperText={!isEmailInput && \"Please input a valid email.\"}\n\n          />\n  \n          <p className=\"mb-3\">\n            Don't remember your email? &nbsp;\n            <Link to=\"/contact\">\n              <span className=\"small jr-link\" onClick={this.closePopup}>\n                Contact Support\n              </span>\n            </Link>\n          </p>\n  \n          <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary jr-btn-rounded\" onClick={this.resetPassword}>\n            Reset Password\n          </Button>\n        </div>\n      </div>\n    );\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value }, () => {\n      switch (name) {\n        case 'email':\n          this.setState({ isEmailInput: true });\n          break;\n      }\n    });\n  }\n  \n  resetPassword = () => {\n    if (!this.state.email)\n      this.setState({ isEmailInput: false });\n    else {\n      const data = {\n        email: this.state.email,\n      };    \n      axios.post('/api/auth/password/reset', data)\n      .then(res => {\n        if (res.data.isSuccess) {\n          this.closePopup(); \n          notification.success(\"We have sent you an email for password reset. Please check your mailbox.\");\n        } else {\n          notification.error(res.data.msg);\n          this.setState({isLoading: false});\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });  \n    }\n  };\n\n  render() {\n    const { isOpen } = this.props;\n    const { activeStep } = this.state;\n    return (\n      <Dialog open={isOpen} onClose={this.closePopup} scroll={'body'} aria-labelledby=\"form-dialog-title\">\n      {/*<Modal\n        isOpen={isOpen}\n        onRequestClose={closeModal}\n        style={modalStyle.loginModalStyle}\n        contentLabel=\"Example Modal\"\n      >\n      \n        <div className=\"login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">*/}\n        <div className=\"login-content\">\n          <span className=\"close-popup\" onClick={this.closePopup}><i className=\"la la-close\"></i></span>\n          <div className=\"login-header\">\n            <Link to=\"/\" title=\"JobsLab\">\n              <span onClick={this.closePopup}>\n                <a className=\"app-logo\">\n                <img\n                  src={JOBSLAB_ICON_URL+\"jobslab_blue.png\"}\n                  alt=\"JobsLab\" title=\"JobsLab\"/></a>\n              </span>\n            </Link>\n          </div>\n          {this.getStepContent(activeStep)}\n        </div> \n      {/*</div>\n    </Modal>*/}\n    </Dialog>\n    );\n  }\n}\n\n\nexport default withRouter(LoginForm);","/home/ubuntu/environment/jobslab-web/src/constants/Status.js",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/Career/CareerItem.js",["2607","2608","2609","2610","2611","2612"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Detail from './Detail';\r\nimport CareerEdit from './CareerEdit';\r\nimport { toggleCareerEdit } from 'actions/Status';  \r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport * as notification from 'actions/Notification';\r\n\r\nclass CareerItem extends Component /* = ({careerData}) =>*/ {\r\n  //const {image, title, description, date, color} = recentData;\r\n  /*const color = 'blue';\r\n  const image = 'case';\r\n  const {jobTitle, company, country, startDate, endDate, description} = this.props.careerData;*/\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isDeleteWarning: false,\r\n      isDetailExpanded: false,\r\n      \r\n      careerId: null,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.careerData)\r\n      this.getCareerData();\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.careerData !== prevProps.careerData) \r\n      this.getCareerData();\r\n  }\r\n  \r\n  getCareerData() {\r\n    this.setState({ \r\n      careerId: this.props.careerData._id==null ? null : this.props.careerData._id, //For delete career use\r\n      company: this.props.careerData.company==null ? '' : this.props.careerData.company,\r\n      jobTitle: this.props.careerData.jobTitle==null ? '' : this.props.careerData.jobTitle,\r\n      location: this.props.careerData.location==null ? '' : this.props.careerData.location,\r\n      city: this.props.careerData.city==null ? '' : this.props.careerData.city,\r\n      startYear: this.props.careerData.startYear==null ? null : this.props.careerData.startYear,\r\n      startMonth: this.props.careerData.startMonth==null ? null : this.props.careerData.startMonth,\r\n      endYear: this.props.careerData.endYear==null ? null : this.props.careerData.endYear,\r\n      endMonth: this.props.careerData.endMonth==null ? null : this.props.careerData.endMonth,\r\n      description: this.props.careerData.description==null ? '' : this.props.careerData.description,\r\n      isPresent: this.props.careerData.isPresent,\r\n    });\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      isDetailExpanded: !prevState.isDetailExpanded\r\n    }));\r\n  }\r\n  \r\n  startEdit = () => {\r\n    this.setState({ isEdit: true });\r\n    this.props.toggleCareerEdit(true);\r\n  }\r\n  \r\n  cancelEdit = () => {\r\n    this.setState({ isEdit: false });\r\n    this.props.toggleCareerEdit(false);\r\n  }\r\n  \r\n  deleteItem = () => {\r\n    const data = {\r\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\r\n      careerId: this.state.careerId,\r\n    };\r\n    axios.post('/api/candidates/set/profile/career/delete', data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        this.props.refresh();\r\n        //this.props.requestInitUser();\r\n        this.setState({ isDeleteWarning: false });\r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const color = 'blue';\r\n    const image = 'city-alt';\r\n    const userRole = this.props.userRole;\r\n    const { jobTitle, company, location, city, startYear, startMonth, endYear, endMonth, description, isPresent } = this.state;//this.props.careerData;\r\n    const { isCareerEditing } = this.props;\r\n    const { refresh } = this.props;\r\n    const { isEdit, isDeleteWarning, isDetailExpanded } = this.state;\r\n\r\n    return (\r\n      <div className=\"media social-list-line\">\r\n        <Avatar className={`${color} z-index-20 size-40 align-item-self mr-3`}>\r\n          <i className={`zmdi zmdi-${image} text-white`}/>\r\n        </Avatar>\r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isEdit ?\r\n          <CareerEdit candidateData={this.props.candidateData} careerData={this.props.careerData} cancel={this.cancelEdit} refresh={refresh} />\r\n          :\r\n          <div className=\"media-body\">\r\n            <div className=\"d-flex\">\r\n              <h5 className=\"mr-auto mb-1 font-weight-bold\">\r\n                { location ? \r\n                    city ?\r\n                      company+\", \"+location.name+\" - \"+city\r\n                    :\r\n                    company+\", \"+location.name \r\n                  : \r\n                    company\r\n                }\r\n              </h5>\r\n                { (userRole==\"candidate\" || userRole==\"admin\") && !isCareerEditing && \r\n                  <IconButton className=\"icon-btn text-dark mt-n3 mr-n2\" onClick={this.startEdit}>\r\n                    <i class=\"zmdi zmdi-edit\"/>\r\n                  </IconButton>\r\n                }\r\n                { (userRole==\"candidate\" || userRole==\"admin\") && !isCareerEditing && \r\n                  <IconButton className=\"icon-btn text-dark mt-n3 mr-n2\" onClick={() => this.setState({ isDeleteWarning: true })}>\r\n                    <i class=\"zmdi zmdi-delete\"/>\r\n                  </IconButton>\r\n                }\r\n            </div>\r\n            <h5 className=\"mb-1\">{jobTitle}</h5>\r\n            <span className=\"meta-date meta-date-light mb-3  w-75\">{startYear}{startMonth && \"/\"+startMonth} - {isPresent ? \"Now\" : endYear}{!isPresent && endMonth && \"/\"+endMonth}{/*startDate==null? '':moment(startDate).format(\"YYYY/MM\")} - {isPresent ? 'Now' : (endDate==null? '' : moment(endDate).format(\"YYYY/MM/DD\"))*/}</span>\r\n            {\r\n              isDetailExpanded\r\n              ?\r\n              <Button size=\"small\" variant=\"contained\" className=\"mb-0 float-right float-sm-left float-md-right\" color=\"primary\" onClick={this.toggle}><small>Hide Detail</small></Button>\r\n              :\r\n              <Button size=\"small\" variant=\"contained\" className=\"mb-0 float-right float-sm-left float-md-right\" color=\"primary\" onClick={this.toggle}><small>Show Detail</small></Button>\r\n            }\r\n            <Detail description={description} open={isDetailExpanded}/>\r\n          </div>\r\n        }\r\n        <SweetAlert show={isDeleteWarning}\r\n                    warning\r\n                    showCancel\r\n                    confirmBtnText={<IntlMessages id=\"sweetAlerts.yesDeleteIt\"/>}\r\n                    confirmBtnBsStyle=\"danger\"\r\n                    cancelBtnBsStyle=\"default\"\r\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\r\n                    onConfirm={() => this.setState(this.deleteItem)}\r\n                    onCancel={() => this.setState({ isDeleteWarning: false })}\r\n        >\r\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\r\n        </SweetAlert>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { isCareerEditing } = state.status;\r\n  return { isCareerEditing }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleCareerEdit,\r\n  requestInitUser,\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CareerItem));\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/CareerEdit.js",["2613","2614","2615","2616","2617","2618","2619"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Textarea from 'react-textarea-autosize';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport InputBase from '@material-ui/core/InputBase';\nimport * as notification from 'actions/Notification';\n\nimport { requestInitUser } from 'actions/Auth';  \n\nimport { yearList, monthList } from 'constants/List';\n\n\nclass CareerEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      careerId: null,\n      company: '',\n      companyText: '',\n      jobTitle: '',\n      location: null,\n      city: null,\n      startYear: null,//{ value: new Date().getFullYear(), label: (new Date().getFullYear()).toString() },\n      startMonth: null,//{ value: 1, label: \"Jan\" },\n      endYear: null,//{ value: new Date().getFullYear(), label: (new Date().getFullYear()).toString() },\n      endMonth: null,//{ value: 1, label: \"Jan\" },\n      description: '',\n      isPresent: true,\n    };\n  }\n  \n  componentDidMount() {\n    this.initCareerData();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initCareerData();\n    }\n  }\n  \n  initCareerData = () => {\n    if(!this.props.listLoading) \n    {\n      var companyTemp = {};\n      var company = this.props.careerData === undefined ? '' : this.props.companyList.find(obj => { return obj.name === this.props.careerData.company });\n      if(company !='')\n      {\n        companyTemp.name = this.props.careerData.company;\n        company = companyTemp;\n      }\n      if (this.props.careerData)\n      this.setState({\n        careerId: this.props.careerData._id==null ? null : this.props.careerData._id,\n        //companyText: this.props.careerData.company==null ? '' : this.props.careerData.company,\n        company: company,\n        jobTitle: this.props.careerData.jobTitle==null ? '' : this.props.careerData.jobTitle,\n        location: this.props.careerData.location==null ? null : this.props.countryList.find(obj => { return obj.value===this.props.careerData.location._id }),\n        description: this.props.careerData.city==null ? '' : this.props.careerData.city,\n        startYear: this.props.careerData.startYear==null ? null : yearList().find(obj => { return obj.value===this.props.careerData.startYear }),\n        startMonth: this.props.careerData.startMonth==null ? null : monthList.find(obj => { return obj.value===this.props.careerData.startMonth }),\n        endYear: this.props.careerData.endYear==null ? null : yearList().find(obj => { return obj.value===this.props.careerData.endYear }),\n        endMonth: this.props.careerData.endMonth==null ? null : monthList.find(obj => { return obj.value===this.props.careerData.endMonth }),\n        description: this.props.careerData.description==null ? '' : this.props.careerData.description,\n        isPresent: this.props.careerData.isPresent,\n      });\n    }\n  }\n  \n  /*componentWillUnmount() {\n    console.log(\"Deleted Career \"+this.state);\n  }\n  \n  componentDidUpdate(prevProps) {\n    console.log(\"componentDidUpdate start\");\n    console.log(this.props.careerData);\n    console.log(prevProps.careerData);\n    if (this.props.careerData !== prevProps.careerData) {\n      this.setState({ \n        careerId: this.props.careerData._id==null ? null : this.props.careerData._id,\n        company: this.props.careerData.company==null ? '' : this.props.careerData.company,\n        jobTitle: this.props.careerData.jobTitle==null ? '' : this.props.careerData.jobTitle,\n        startYear: this.props.careerData.startYear==null ? null : yearList().find(obj => { return obj.value===this.props.careerData.startYear }),\n        startMonth: this.props.careerData.startMonth==null ? null : monthList.find(obj => { return obj.value===this.props.careerData.startMonth }),\n        endYear: this.props.careerData.endYear==null ? null : yearList().find(obj => { return obj.value===this.props.careerData.endYear }),\n        endMonth: this.props.careerData.endMonth==null ? null : monthList.find(obj => { return obj.value===this.props.careerData.endMonth }),\n        description: this.props.careerData.description==null ? '' : this.props.careerData.description,\n        isPresent: this.props.careerData.isPresent,\n      });\n    }\n  }*/\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    //var name = e.target.id.split('-')[0];\n    this.setState({ [name]: value });\n  }\n  \n  handleSwitchChange = (e, checked) => {\n    this.setState({ [e.target.name]: checked });\n    if (e.target.name=='isPresent' && checked==true)\n      this.setState({\n        endYear: null,\n        endMonth: null,\n        isEndYearInput: false,\n        isEndMonthInput: false\n      })\n  };\n  \n  editSave = () => {\n    console.log(this.state.companyText);\n    var company = (this.state.company && this.state.company.name && this.state.company.name == this.state.companyText) ? this.state.company.name : this.state.companyText;\n    const data = {\n      candId: this.props.candidateData && this.props.candidateData._id, //this.props.match.params.Id,\n      careerId: this.state.careerId,\n      company: company,\n      jobTitle: this.state.jobTitle,\n      location: this.state.location && this.state.location.value,\n      city: this.state.city,\n      startYear: this.state.startYear==null ? null : this.state.startYear.value,\n      startMonth: this.state.startMonth==null ? null : this.state.startMonth.value,\n      endYear: this.state.endYear==null ? null : this.state.endYear.value,\n      endMonth: this.state.endMonth==null ? null : this.state.endMonth.value,\n      description: this.state.description,\n      isPresent: this.state.isPresent\n    };\n    axios.post('/api/candidates/set/profile/career/update', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        this.props.refresh();\n        //this.props.requestInitUser();\n        notification.success(\"Your Profile has been updated successfully.\");\n        this.props.cancel(); \n      }\n      else {\n        notification.error(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  render() {\n    const { jobTitle, company, companyText, location, city, startYear, startMonth, endYear, endMonth, description, isPresent } = this.state;\n    const { companyList, countryList } = this.props;\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.name ? option.name : \"\")),\n    });\n    \n    return (\n      <div className=\"media-body row\">\n        <div className=\"col-md-6 col-12\">\n        {/*\n        <TextField\n            //id=\"company\"\n            name=\"company\"\n            label=\"Company\"\n            value={company}\n            onChange={this.textboxChange}\n            fullWidth\n          />\n        */}\n          \n          <Autocomplete\n            name=\"company\"\n            value={company}\n            options={companyList ? companyList : []}\n            getOptionLabel={option => option.name}\n            filterOptions={filterOptions}\n            freeSolo\n            //id=\"company\"\n            defaultValue={companyText}\n            autoHighlight={true}\n            blurOnSelect={true}\n            renderInput={params => (\n              <TextField \n                {...params} \n                label=\"Company\" \n                fullWidth\n                error={!(company || companyText)}\n                helperText={!(company || companyText) && \"Required\"}\n              />\n              /*\n               <InputBase ref={params.InputProps.ref}\n                inputProps={params.inputProps} placeholder=\"Company\" className=\"form-control form-control-lg employer\" />\n              */\n             \n            )}\n            onChange={(e, value) => this.autocompleteChange(e, value, 'company')}\n            onInputChange={(e, value) => this.autocompleteChange(e, value, 'companyText')}\n          />\n        </div>\n        <div className=\"col-md-6 col-12\">\n          <TextField\n            //id=\"jobTitle\"\n            name=\"jobTitle\"\n            label=\"Job Title\"\n            value={jobTitle}\n            onChange={this.textboxChange}\n            fullWidth\n            error={!jobTitle}\n            helperText={!jobTitle && \"Required\"}\n          />\n        </div>\n        <div className=\"col-12\">\n          <div className=\"row\">\n            <div className=\"col-lg-3 col-md-6 col-12\">\n              <Autocomplete\n                id=\"startYear\"\n                value={startYear}\n                options={yearList()}\n                getOptionLabel={option => option.label}\n                autoHighlight={true}\n                blurOnSelect={true}\n                renderInput={params => (\n                  <TextField \n                    {...params} \n                    label=\"Start Year\" \n                    fullWidth \n                    error={!startYear}\n                    helperText={!startYear && \"Required\"}\n                  />\n                )}\n                onChange={(e, value) => this.autocompleteChange(e, value, 'startYear')}\n              />\n            </div>\n            <div className=\"col-lg-3 col-md-6 col-12\">\n              <Autocomplete\n                id=\"startMonth\"\n                value={startMonth}\n                options={monthList}\n                getOptionLabel={option => option.label}\n                autoHighlight={true}\n                blurOnSelect={true}\n                renderInput={params => (\n                  <TextField \n                    {...params} \n                    label=\"Start Month\" \n                    fullWidth \n                    error={!startMonth}\n                    helperText={!startMonth && \"Required\"}\n                  />\n                )}\n                onChange={(e, value) => this.autocompleteChange(e, value, 'startMonth')}\n              />\n            </div>\n            { !isPresent && \n              <div className=\"col-lg-3 col-md-6 col-12\">\n                <Autocomplete\n                  id=\"endYear\"\n                  value={endYear}\n                  options={yearList(startYear)}\n                  getOptionLabel={option => option.label}\n                  autoHighlight={true}\n                  blurOnSelect={true}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      label=\"End Year\" \n                      fullWidth \n                      error={!endYear}\n                      helperText={!endYear && \"Required\"}\n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'endYear')}\n                />\n              </div>\n            }\n            { !isPresent && \n              <div className=\"col-lg-3 col-md-6 col-12\">\n                <Autocomplete\n                  id=\"endMonth\"\n                  value={endMonth}\n                  options={monthList}\n                  getOptionLabel={option => option.label}\n                  autoHighlight={true}\n                  blurOnSelect={true}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      label=\"End Month\" \n                      fullWidth \n                      error={!endMonth}\n                      helperText={!endMonth && \"Required\"}\n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'endMonth')}\n                />\n              </div>\n            }\n          </div>\n        </div>\n        <div className=\"col-md-6 col-12\">\n          <Autocomplete\n            value={location}\n            options={countryList}\n            getOptionLabel={option => option.label}\n            autoHighlight={true}\n            blurOnSelect={true}\n            renderInput={params => (\n              <TextField \n                {...params} \n                label=\"Location\" \n                fullWidth \n                error={!location}\n                helperText={!location && \"Required\"}\n              />\n            )}\n            onChange={(e, value) => this.autocompleteChange(e, value, 'location')}\n          />\n        </div>\n        <div className=\"col-md-6 col-12\">\n          <TextField\n            //id=\"jobTitle\"\n            name=\"city\"\n            label=\"City\"\n            value={city}\n            onChange={this.textboxChange}\n            fullWidth\n          />\n        </div>\n        <div className=\"col-12 mt-3 ml-auto\">\n          <FormControlLabel\n            control={\n              <Switch name=\"isPresent\"\n                      color=\"primary\"\n                      classes={{\n                        checked: 'text-primary',\n                        //bar: 'bg-primary',\n                      }}\n                      checked={isPresent}\n                      onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n              />\n            }\n            label=\"Present\"\n          />\n        </div>\n        <div className=\"col-12 mt-2 mb-2\">\n          <TextField\n            className=\"jobTextArea\"\n            name=\"description\"\n            label=\"Description\"\n            fullWidth\n            multiline={true}\n            variant=\"outlined\"\n            value={description}\n            onChange={this.textboxChange}\n          />\n          {/*\n          <label className=\"m-0\">Description</label>\n          <Textarea useCacheForDOMMeasurements className=\"w-100 h-100\" name=\"description\" placeholder=\"Please input your description...\" value={description} onChange={this.textboxChange} />\n          */}\n        </div>\n        <div className=\"col-12 mt-2 mb-2 d-flex\">\n          <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\n          <Button className=\"mt-2 mr-2 mr-auto\" onClick={this.props.cancel}>Cancel</Button>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  const { listLoading, companyList, countryList } = state.list;\n  return { \n    listLoading,\n    companyList,\n    countryList\n  }\n};\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CareerEdit));\n","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminApplicationFilter/App.styles.js",["2620","2621"],"import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1000px;\n  //margin-left: auto;\n  margin-right: auto; \n`;\n\nexport const Header = styled(Container)`\n  text-align: center; \n  color: palevioletred;\n  font-weight: bold;\n  font-size: 24px;\n  padding: 20px;\n`;\n\nexport const Main = styled(Container)``;\n\n{/*export const BoxToggle = styled.div`\n  margin: 30px auto;\n  text-align: center;\n`;*/}\n\nexport const BoxExpand = styled.div`\n  color: #000000;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-color: #575757;\n  border-radius: 4px;\n  margin: 20px;\n  flex: auto;\n`;\n\nexport const BoxExpand1 = styled(BoxExpand)`\n  background-color: #7795f8;\n`;\n\n{/*export const Button = styled.a`\n  cursor: pointer;\n  white-space: nowrap;\n  display: inline-block;\n  height: 40px;\n  width: 200px;\n  line-height: 40px;\n  padding: 0 14px;\n  background: #d1d1d1;\n  border-radius: 4px;\n  font-size: 14px;\n  letter-spacing: .025em;\n  color: #fff;\n  text-decoration: none;\n  \n  &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\n  }\n`;*/}\n\nexport const ExpandBoxes = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;","/home/ubuntu/environment/jobslab-web/src/components/Header/AppNotification/index.js",["2622"],"import React,{ Component }  from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport NotificationItem from './NotificationItem';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass AppNotification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  redirectPage = (url) => {\r\n    this.props.toggle();\r\n    this.props.history.push(url);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const notificationList = this.props.notificationList ? this.props.notificationList : [];\r\n    return (\r\n      <CustomScrollbars className=\"messages-list scrollbar\" style={{height: 280}}>\r\n        <ul className=\"list-unstyled\">\r\n        {\r\n            notificationList.length <= 0 ?\r\n            <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                        <span>\r\n                            No Notifications.\r\n                        </span> \r\n                      </div>\r\n          : \r\n            notificationList.map((notification, index) => \r\n              <NotificationItem clickFunc={this.redirectPage.bind(this)} key={index} notification={notification}/>\r\n            )\r\n          }\r\n        </ul>\r\n      </CustomScrollbars>\r\n    )\r\n    \r\n  }\r\n  \r\n};\r\n\r\nexport default withRouter(AppNotification);\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/EducationEdit.js",["2623","2624","2625"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport { yearList } from 'constants/List';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport * as notification from 'actions/Notification';\r\n\r\n\r\nclass EducationEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      eduId: null,\r\n      institution: '',\r\n      institutionText: '',\r\n      degree: '',\r\n      degreeYear: null,\r\n      description: '',\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.initEducationData();\r\n  }\r\n  \r\n  componentDidUpdate(oldProps) {\r\n    const newProps = this.props;\r\n    if (!newProps.listLoading && oldProps.listLoading) {\r\n      this.initEducationData();\r\n    }\r\n  }\r\n  \r\n  initEducationData = () => {\r\n    if (!this.props.listLoading) {\r\n      var institutionTemp = {};\r\n      var institution = this.props.eduData === undefined ? '' : this.props.institutionList.find(obj => { return obj.name === this.props.eduData.institution });\r\n      if (institution != '') {\r\n        institutionTemp.name = this.props.eduData.institution;\r\n        institution = institutionTemp;\r\n      }\r\n      if (this.props.eduData)\r\n        this.setState({\r\n          eduId: this.props.eduData._id==null ? null : this.props.eduData._id,\r\n          institution: institution,\r\n          degree: this.props.eduData.degree==null ? '' : this.props.eduData.degree,\r\n          degreeYear: this.props.eduData.degreeYear==null ? null : yearList().find(obj => { return obj.value===this.props.eduData.degreeYear }),\r\n          description: this.props.eduData.description==null ? '' : this.props.eduData.description,\r\n        });\r\n    }\r\n  }\r\n  \r\n  textboxChange = (e) => {\r\n    var name = e.target.name;\r\n    this.setState({ [name]: e.target.value });\r\n  }\r\n  \r\n  autocompleteChange = (e, value, name) => {\r\n    //var name = e.target.id.split('-')[0];\r\n    this.setState({ [name]: value });\r\n  }\r\n  \r\n  editSave = () => {\r\n    var institution = (this.state.institution && this.state.institution.name && this.state.institution.name == this.state.institutionText) ? this.state.institution.name : this.state.institutionText;\r\n    console.log(institution);\r\n    const data = {\r\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\r\n      eduId: this.state.eduId,\r\n      institution: institution,\r\n      degree: this.state.degree,\r\n      degreeYear: this.state.degreeYear==null ? null : this.state.degreeYear.value,\r\n      description: this.state.description,\r\n    };\r\n    axios.post('/api/candidates/set/profile/education/update', data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        this.props.refresh();\r\n        //this.props.requestInitUser();\r\n        notification.success(\"Your Profile has been updated successfully.\");\r\n        this.props.cancel();\r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { institution, institutionText, degree, degreeYear, description } = this.state;\r\n    const { institutionList } = this.props;\r\n    \r\n    const filterOptions = createFilterOptions({\r\n          matchFrom: 'any',\r\n          stringify: option => ((option.name ? option.name : \"\")),\r\n          });\r\n          \r\n    return (\r\n      <div className=\"media-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 col-12\">\r\n            {/*\r\n            <TextField\r\n              name=\"institution\"\r\n              label=\"Institution\"\r\n              value={institution}\r\n              onChange={this.textboxChange}\r\n              fullWidth\r\n            />*/}\r\n            <Autocomplete\r\n              value={institution}\r\n              options={institutionList ? institutionList : []}\r\n              getOptionLabel={option => option.name}\r\n              filterOptions={filterOptions}\r\n              freeSolo\r\n              //id=\"institution\"\r\n              name=\"institution\"\r\n              defaultValue={this.state.institutionText}\r\n              autoHighlight={true}\r\n              renderInput={params => (\r\n                <TextField \r\n                  {...params} \r\n                  label=\"Institution\" \r\n                  fullWidth \r\n                  //error={!(institution || institutionText)}\r\n                  //helperText={!(institution || institutionText) && \"Required\"}\r\n                />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'institution')}\r\n              onInputChange={(e, value) => this.autocompleteChange(e, value, 'institutionText')}\r\n            />\r\n          \r\n          </div>\r\n          <div className=\"col-md-6 col-12\">\r\n            <TextField\r\n              name=\"degree\"\r\n              label=\"Degree\"\r\n              placeholder=\"eg. Master of Business Administration\"\r\n              value={degree}\r\n              onChange={this.textboxChange}\r\n              fullWidth\r\n              //error={!degree}\r\n              //helperText={!degree && \"Required\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-6 col-12\">\r\n            <Autocomplete\r\n              id=\"degreeYear\"\r\n              value={degreeYear}\r\n              options={yearList()}\r\n              getOptionLabel={option => option.label}\r\n              autoHighlight={true}\r\n              blurOnSelect={true}\r\n              renderInput={params => (\r\n                <TextField \r\n                  {...params} \r\n                  label=\"Degree Year\" \r\n                  fullWidth \r\n                  //error={!degreeYear}\r\n                  //helperText={!degreeYear && \"Required\"}\r\n                />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'degreeYear')}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mt-2\">\r\n           \r\n            <TextField\r\n                  className=\"jobTextArea\"\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  fullWidth\r\n                  multiline={true}\r\n                  variant=\"outlined\"\r\n                  value={description}\r\n                  onChange={this.textboxChange}\r\n                />\r\n                {/*\r\n                 <label className=\"m-0\">Description</label>\r\n                <Textarea useCacheForDOMMeasurements className=\"w-100\" name=\"description\" placeholder=\"Please input your description...\" value={description} onChange={this.textboxChange} />\r\n                */}\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 mb-2 d-flex\">\r\n          <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\r\n          <Button className=\"mt-2 mr-2 mr-auto\" onClick={this.props.cancel}>Cancel</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { listLoading, institutionList } = state.list;\r\n  return { \r\n    listLoading,\r\n    institutionList }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  requestInitUser,\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EducationEdit));\r\n","/home/ubuntu/environment/jobslab-web/src/redux_saga/UploadCV.js",["2626"],"import {requestUploadCV, cvUpload, cvUploadSuccess, cvUploadError} from 'actions/UploadCV';\nimport { put,call } from 'redux-saga/effects';\nimport axios from \"axios\";\n\nexport function* fetchCVInfo(cvFile) {\n  try {\n    //const action = yield takeLatest(requestUploadCV);\n    //action.payload\n    yield put(cvUpload());\n    const data = yield call((cvFile) => {\n      return uploadCV(cvFile)\n      }\n    );\n    yield put(cvUploadSuccess(data));\n  } catch (error) {\n    yield put(cvUploadError());\n  }\n}\n\nfunction uploadCV(cvFile) {\n  console.log(\"uploadCV triggered\");\n  const formData = new FormData();\n  if (cvFile != null) {\n    formData.append('cvFile', cvFile);\n    var data = axios.post('/api/candidates/set/resume/upload', formData)\n    .then(res => {\n      return res.data;\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  return data;\n}\n","/home/ubuntu/environment/jobslab-web/src/redux_saga/List.js",[],"/home/ubuntu/environment/jobslab-web/src/redux_saga/Auth.js",[],"/home/ubuntu/environment/jobslab-web/src/components/UserInfo/UserInfoPopup.js",["2627","2628","2629","2630"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {NavLink, withRouter} from 'react-router-dom';\r\nimport { userSignOut, updateUserStatus, updateUser } from 'actions/Auth';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport axios from 'axios';\r\nimport Avatar from 'react-avatar';\r\nimport { requestInitUser } from 'actions/Auth';  \r\n\r\nclass UserInfoPopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n      isLoading: false,\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n  \r\n  logout = () => {\r\n    userSignOut().then(resp => {\r\n      if (resp.isSuccess) {\r\n        this.props.dispatch(requestInitUser());\r\n        this.props.history.push('/');\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { userType, userData } = this.props;\r\n    const { name, pictureUrl } = userData;\r\n    return (\r\n      <div>\r\n        <div className=\"user-profile\">\r\n          <Avatar \r\n            round={ true } \r\n            size={ 42 }\r\n            style={ {margin: 2, boxShadow: '0px 0px 30px grey', backgroundColor: 'white'} }\r\n            src={ pictureUrl } \r\n            name={ name.firstName+\" \"+name.lastName } \r\n          />\r\n          <div className=\"user-detail ml-2\">\r\n            <h4 className=\"user-name mb-0\">{name.firstName + \" \" + name.lastName}</h4>\r\n            {/*<small>Administrator</small>*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-decoration-none\">\r\n          <NavLink to={\"/\"+userType+\"/dashboard\"}>\r\n            <span className=\"jr-link dropdown-item text-muted\">\r\n              <i className=\"zmdi zmdi-view-dashboard zmdi-hc-fw mr-1\"/>\r\n              Dashboard\r\n            </span>\r\n          </NavLink>\r\n          { userType==\"candidate\" && \r\n          <NavLink to=\"/candidate/profile\">\r\n            <span className=\"jr-link dropdown-item text-muted\">\r\n              <i className=\"zmdi zmdi-face zmdi-hc-fw mr-1\"/>\r\n              <IntlMessages id=\"popup.profile\"/>\r\n            </span>\r\n          </NavLink>\r\n          }\r\n          <NavLink to=\"/settings\">\r\n            <span className=\"jr-link dropdown-item text-muted\">\r\n              <i className=\"zmdi zmdi-settings zmdi-hc-fw mr-1\"/>\r\n              <IntlMessages id=\"popup.setting\"/>\r\n            </span>\r\n          </NavLink>\r\n          <span className=\"jr-link dropdown-item text-muted\" onClick={this.logout}>\r\n            <i className=\"zmdi zmdi-sign-in zmdi-hc-fw mr-1\"/>\r\n            <IntlMessages id=\"popup.logout\"/>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { userType, userData } = state.auth;\r\n  return { userType, userData }\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps)(UserInfoPopup));\r\n\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/EducationItem.js",["2631","2632","2633","2634","2635","2636"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Detail from './Detail';\r\nimport EducationEdit from './EducationEdit';\r\nimport { toggleEducationEdit } from 'actions/Status';  \r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport * as notification from 'actions/Notification';\r\n\r\nclass EducationItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isDeleteWarning: false,\r\n      isDetailExpanded: false,\r\n      \r\n      eduId: null,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.eduData)\r\n      this.getEduData();\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.eduData !== prevProps.eduData) \r\n      this.getEduData();\r\n  }\r\n  \r\n  getEduData() {\r\n    this.setState({\r\n      eduId: this.props.eduData._id==null ? null : this.props.eduData._id, //For delete education use\r\n      institution: this.props.eduData.institution==null ? '' : this.props.eduData.institution,\r\n      degree: this.props.eduData.degree==null ? '' : this.props.eduData.degree,\r\n      major: this.props.eduData.major==null ? '' : this.props.eduData.major,\r\n      degreeYear: this.props.eduData.degreeYear==null ? null : this.props.eduData.degreeYear,\r\n      description: this.props.eduData.description==null ? '' : this.props.eduData.description,\r\n    });\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      isDetailExpanded: !prevState.isDetailExpanded\r\n    }));\r\n  }\r\n  \r\n  startEdit = () => {\r\n    this.setState({ isEdit: true });\r\n    this.props.toggleEducationEdit(true);\r\n  }\r\n  \r\n  cancelEdit = () => {\r\n    this.setState({ isEdit: false });\r\n    this.props.toggleEducationEdit(false);\r\n  }\r\n  \r\n  deleteItem = () => {\r\n    const data = {\r\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\r\n      eduId: this.state.eduId,\r\n    };\r\n    axios.post('/api/candidates/set/profile/education/delete', data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        this.props.refresh();\r\n        //this.props.requestInitUser();\r\n        this.setState({ isDeleteWarning: false });\r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const color = 'blue';\r\n    const image = 'graduation-cap';\r\n    const userRole = this.props.userRole;\r\n    const { institution, degree, /*major,*/ degreeYear, description } = this.props.eduData;\r\n    const { refresh } = this.props;\r\n    const { isEducationEditing } = this.props;\r\n    const { isEdit, isDeleteWarning, isDetailExpanded } = this.state;\r\n    \r\n    return (\r\n      <div className=\"media social-list-line\">\r\n        <Avatar className={`${color} z-index-20 size-40 align-item-self mr-3`}>\r\n          <i className={`zmdi zmdi-${image} text-white`}/>\r\n        </Avatar>\r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isEdit ?\r\n          <EducationEdit candidateData={this.props.candidateData} eduData={this.props.eduData} cancel={this.cancelEdit} refresh={refresh} />\r\n          :\r\n          <div className=\"media-body\">\r\n            <div className=\"d-flex\">\r\n              <h5 className=\"mr-auto mb-1 font-weight-bold\">{institution}</h5>\r\n                { (userRole==\"candidate\" || userRole==\"admin\") && !isEducationEditing && \r\n                  <IconButton className=\"icon-btn text-dark mt-n3 mr-n2\" onClick={this.startEdit}>\r\n                    <i class=\"zmdi zmdi-edit\"/>\r\n                  </IconButton>\r\n                }\r\n                { (userRole==\"candidate\" || userRole==\"admin\") && !isEducationEditing && \r\n                  <IconButton className=\"icon-btn text-dark mt-n3 mr-n2\" onClick={() => this.setState({ isDeleteWarning: true })}>\r\n                    <i class=\"zmdi zmdi-delete\"/>\r\n                  </IconButton>\r\n                }\r\n            </div>\r\n            <h5 className=\"mb-1\">{degree}{/*, {major}*/}</h5>\r\n            <span className=\"meta-date meta-date-light mb-3  w-75\">{degreeYear /*degreeDate==null? '':moment(degreeDate).format(\"YYYY/MM/DD\")*/}</span>\r\n            {\r\n              isDetailExpanded\r\n              ?\r\n              <Button size=\"small\" variant=\"contained\" className=\"mb-0 float-right float-sm-left float-md-right\" color=\"primary\" onClick={this.toggle}><small>Hide Detail</small></Button>\r\n              :\r\n              <Button size=\"small\" variant=\"contained\" className=\"mb-0 float-right float-sm-left float-md-right\" color=\"primary\" onClick={this.toggle}><small>Show Detail</small></Button>\r\n            }\r\n            <Detail description={description} open={isDetailExpanded}/>\r\n          </div>\r\n        }\r\n        <SweetAlert show={isDeleteWarning}\r\n                    warning\r\n                    showCancel\r\n                    confirmBtnText={<IntlMessages id=\"sweetAlerts.yesDeleteIt\"/>}\r\n                    confirmBtnBsStyle=\"danger\"\r\n                    cancelBtnBsStyle=\"default\"\r\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\r\n                    onConfirm={() => this.setState(this.deleteItem)}\r\n                    onCancel={() => this.setState({ isDeleteWarning: false })}\r\n        >\r\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\r\n        </SweetAlert>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { isEducationEditing } = state.status;\r\n  return { isEducationEditing }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleEducationEdit,\r\n  requestInitUser,\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EducationItem));\r\n","/home/ubuntu/environment/jobslab-web/src/constants/ThemeColors.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Header/CardHeader/CardMenu.js",[],"/home/ubuntu/environment/jobslab-web/src/util/CustomScrollbars.js",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/Career/Detail.js",["2637","2638","2639","2640"],"import React, { Component, Fragment } from \"react\";\nimport Expand from \"react-expand-animated\";\n\nimport {\n  Header,\n  Main,\n  BoxToggle,\n  BoxExpand,\n  BoxExpand1,\n  Button,\n  ExpandBoxes\n} from \"./Detail.styles.js\";\n\nclass Detail extends Component {\n  \n  state = { open: false };\n\n  toggle = () => {\n    this.setState(prevState => ({ open: !prevState.open }));\n  };\n\n  render() {\n    const styles = { \n      open: { background: \"#ecf0f1\" }\n    };\n    const transitions = [\"height\", \"opacity\", \"background\"];\n    const description = this.props.description;\n\n    return (\n      <Fragment>\n        <Main>\n          <Expand\n            open={this.props.open}\n            duration={500}\n            styles={styles}\n            transitions={transitions}\n          >\n            <ExpandBoxes>\n              <BoxExpand>\n                { description && description.split(\"\\n\").map((text, index) => (\n        \t\t \t\t\t<p key={index}>- {text.replace('*','')}</p>\n        \t\t \t\t))}\n              </BoxExpand>\n              {/*<BoxExpand1>Hallo</BoxExpand1>*/}\n            </ExpandBoxes>\n          </Expand>\n        </Main>\n      </Fragment>\n    );\n  }\n}\n\nexport default Detail;\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Education/Detail.js",["2641","2642","2643","2644"],"/home/ubuntu/environment/jobslab-web/src/components/Header/AppNotification/NotificationItem.js",["2645"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from \"moment\";\r\n\r\nconst NotificationItem = ({clickFunc, notification}) => {\r\n  const {pictureUrl, message, createdAt,redirectUrl} = notification;\r\n  return (\r\n    <li className=\"media\" onClick={() => clickFunc(redirectUrl)} style={{\"cursor\": \"pointer\"}}>\r\n      <Avatar\r\n        alt={pictureUrl}\r\n        src={pictureUrl}\r\n        className=\" mr-2\"\r\n      />\r\n      <div className=\"media-body align-self-center\">\r\n        <p className=\"sub-heading mb-0\">{message}</p>\r\n        <span className=\"meta-date\" style={{'float':'right'}}><small>{createdAt == null ? \"N/A\" : moment(createdAt).format(\"DD MMM YYYY, HH:mm\")}</small></span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","/home/ubuntu/environment/jobslab-web/src/components/UserInfo/index.js",["2646","2647","2648","2649"],"import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n//import Avatar from '@material-ui/core/Avatar'\r\nimport Avatar from 'react-avatar';\r\nimport { connect } from 'react-redux'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n//import {userSignOut} from 'actions/Auth';\r\nimport IntlMessages from '../../util/IntlMessages';\r\nimport { requestInitUser, userSignOut } from 'actions/Auth';  \r\n\r\nclass UserInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  /*componentDidMount() {\r\n    if (this.props.info) {\r\n      this.setState({\r\n        firstName : this.props.info.firstName,\r\n        lastName : this.props.info.lastName,\r\n        pictureUrl: this.props.info.pictureUrl,\r\n        isLoggedin : this.props.info.isLoggedin\r\n      });\r\n    }\r\n  }*/\r\n  \r\n  state = {\r\n    anchorEl: null,\r\n    open: false,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({open: true, anchorEl: event.currentTarget});\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n   logout = () => {\r\n    userSignOut().then(resp => {\r\n      if (resp.isSuccess) {\r\n        this.props.dispatch(requestInitUser());\r\n        this.props.history.push('/');\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { name, pictureUrl } = this.props.userData;\r\n    return (\r\n      <div className=\"user-profile d-flex flex-row align-items-center\">\r\n        <Avatar \r\n          round={ true } \r\n          size={ 42 }\r\n          style={ {margin: 10, boxShadow: '0px 0px 30px grey', backgroundColor: 'white'} }\r\n          src={ pictureUrl } \r\n          name={ name.firstName+\" \"+ name.lastName } \r\n        />\r\n        <div className=\"user-detail\">\r\n          <h4 className=\"user-name\" onClick={this.handleClick}> {name.firstName + \" \" + name.lastName} {/*<i\r\n            className=\"zmdi zmdi-caret-down zmdi-hc-fw align-middle\"/>*/}\r\n          </h4>\r\n        </div>\r\n        <div className=\"user-logout\" style={{'margin-left':'auto','cursor': 'pointer'}} onClick={this.logout}>\r\n          <i className=\"zmdi zmdi-sign-in zmdi-hc-2x ml-1 mr-3\"/>\r\n        </div>\r\n        {/*<Menu className=\"user-info\"\r\n              id=\"simple-menu\"\r\n              anchorEl={this.state.anchorEl}\r\n              open={this.state.open}\r\n              onClose={this.handleRequestClose}\r\n              PaperProps={{\r\n                style: {\r\n                  minWidth: 120,\r\n                  paddingTop: 0,\r\n                  paddingBottom: 0\r\n                }\r\n              }}\r\n        >\r\n          <MenuItem onClick={this.handleRequestClose}>\r\n            <i className=\"zmdi zmdi-account zmdi-hc-fw mr-2\"/>\r\n            <IntlMessages id=\"popup.profile\"/>\r\n          </MenuItem>\r\n          <MenuItem onClick={this.handleRequestClose}>\r\n            <i className=\"zmdi zmdi-settings zmdi-hc-fw mr-2\"/>\r\n            <IntlMessages id=\"popup.setting\"/>\r\n          </MenuItem>\r\n          <MenuItem onClick={() => {\r\n            this.handleRequestClose();\r\n          }}>\r\n            <i className=\"zmdi zmdi-sign-in zmdi-hc-fw mr-2\"/>\r\n\r\n            <IntlMessages id=\"popup.logout\"/>\r\n          </MenuItem>\r\n        </Menu>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {locale} = state.settings;\r\n  const { userData } = state.auth;\r\n  return {userData, locale}\r\n};\r\nexport default withRouter(connect(mapStateToProps)(UserInfo));\r\n\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Career/Detail.styles.js",["2650","2651"],"/home/ubuntu/environment/jobslab-web/src/components/profile/Education/Detail.styles.js",["2652","2653"],"/home/ubuntu/environment/jobslab-web/src/constants/List.js",[],"/home/ubuntu/environment/jobslab-web/src/components/auth/LoginContent.js",["2654","2655","2656","2657","2658","2659"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\nimport { LinkedInLoginButton } from \"react-social-login-buttons\";\nimport { requestInitUser } from 'actions/Auth';\nimport * as notification from 'actions/Notification';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      \n      email: '',\n      password: '',\n      \n      isEmailExist: true,\n      isPasswordCorrect: true,\n    };\n  }\n  \n  componentDidMount() {\n    console.log(\"Login Form Redirect URL: \" + this.props.redirectUrl);\n    if (this.props.activeStep) \n      this.setState({ activeStep: this.props.activeStep });\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value }, () => {\n      switch (name) {\n        case 'email':\n          this.setState({ isEmailExist: true });\n          break;\n        case 'password':\n          this.setState({ isPasswordCorrect: true });\n          break;\n      }\n    });\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    \n    this.setState({ isLoading: true });\n    const data = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    console.log(\"start to login\");\n    axios.post('/api/auth/login', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        console.log(\"Before updateUserStatus in LoginForm\");\n        this.setState({ isLoading: false });\n        if (this.props.isPopup)\n          this.props.closePopup();\n        this.props.requestInitUser();\n\n        console.log(\"After updateUserStatus in LoginForm\")\n        console.log(this.props.redirectUrl);\n        \n        this.setState({ email: '', password: '' });\n        if (this.props.redirectUrl) //Popup\n          this.props.history.push(this.props.redirectUrl);\n        else if (this.props.location.state != null) //Login page\n          this.props.redirectToPrevPage();\n        else {\n          this.props.history.push('/'+res.data.role+'/dashboard');\n          //setTimeout(() => {this.props.history.push('/candidate/dashboard');}, 1000);\n        }\n      }\n      else {\n        this.setState({ isLoading: false });\n        //notification.error(res.data.msg);\n        if (res.data.isEmailExist==false) \n          this.setState({ isEmailExist: false });\n        else if (res.data.isPasswordCorrect==false)\n          this.setState({ isPasswordCorrect: false });\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const { isEmailExist, isPasswordCorrect } = this.state;\n    \n    return (\n      <div className=\"login-form\">\n        <form onSubmit={this.formSubmit}>\n          {/*<fieldset>*/}\n            <TextField\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"example@jobslab.io\"\n              id=\"email\"\n              label=\"Email\"\n              fullWidth\n              onChange={this.textboxChange}\n              value={email}\n              margin=\"normal\"\n              variant=\"outlined\"\n              className=\"mt-1\"\n              /*InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}*/\n              error={!isEmailExist}\n              helperText={!isEmailExist && \"Invalid Email\"}\n              /*InputProps={{\n                style: {\n                  backgroundColor: \"white\",\n                  borderRadius: 4\n                }    \n              }}*/\n            />\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"********\"\n              id=\"password\"\n              label=\"Password\"\n              fullWidth\n              onChange={this.textboxChange}\n              value={password}\n              margin=\"normal\"\n              variant=\"outlined\"\n              className=\"mt-1\"\n              /*InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <VpnKeyIcon />\n                  </InputAdornment>\n                ),\n              }}*/\n              error={!isPasswordCorrect}\n              helperText={!isPasswordCorrect && \"Invalid Password\"}\n              /*InputProps={{\n                style: {\n                  backgroundColor: \"white\",\n                  borderRadius: 4\n                }    \n              }}*/\n            />\n            {/*<div id=\"test\" className=\"form-group\">\n              <input className=\"form-control form-control-lg\" \n              type=\"text\" name=\"email\" placeholder=\"Email\" \n              value={email} onChange={this.textboxChange} />\n            </div>\n            <div className=\"form-group login\">\n              <input className=\"form-control form-control-lg\" \n              type=\"password\" name=\"password\" placeholder=\"********\" \n              value={password} onChange={this.textboxChange} />\n            </div>*/}\n            \n            <div className=\"mt-4 mb-2\">\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"btn btn-primary jr-btn-rounded\" fullWidth disabled={this.state.isLoading} onClick={this.formSubmit}>\n                {this.state.isLoading && <i className='fa fa-spinner fa-spin' />} Sign In\n              </Button>\n            </div>\n            {/*<div className=\"login-btn\">\n              <button className=\"btn jr-btn-rounded btn-primary btn-rounded w-100\" type=\"submit\" disabled={this.state.isLoading}> {this.state.isLoading && <i className='fa fa-spinner fa-spin' />} Sign In</button>}\n            </div>*/}\n          {/*</fieldset>*/}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));","/home/ubuntu/environment/jobslab-web/src/components/auth/SignupContent.js",["2660","2661","2662","2663","2664","2665"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Dropzone from 'react-dropzone';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// Select from 'react-select';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport UploadButton from \"components/UploadButton\";\nimport { requestInitUser } from 'actions/Auth';  \nimport * as notification from 'actions/Notification';\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      isLoading: false,\n      isUploadLoading: false,\n      isUploadSuccess: false,\n      isUploaded: false,\n      \n      userType: 'candidate',\n      \n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      password2: '',\n      dial: { value: \"+852\", label: \"+852\" },\n      phone_number: '',\n      company: '',\n      companyText: '',\n      //cvData: {},\n      cvFile: null,\n      cvToken: null,\n      cvFileType: null,\n      cvFilePath: null,\n      \n      isEmailUnused: true,\n    };\n  }\n  \n  componentDidMount() {\n    if (this.props.isClient)\n      this.setState({ userType: 'client' });\n    \n    this.suggestThemeSignUp = {\n      container:                'containerProfile',\n      containerOpen:            'containerOpenProfile',\n      input:                    'inputSignUp',\n      inputOpen:                'inputOpenProfile',\n      inputFocused:             'inputFocusedProfile',\n      suggestionsContainer:     'suggestionsContainerSignUp',\n      suggestionsContainerOpen: 'suggestionsContainerOpenProfile',\n      suggestionsList:          'suggestionsListProfile',\n      suggestion:               'suggestionProfile',\n      suggestionFirst:          'suggestionFirstProfile',\n      suggestionHighlighted:    'suggestionHighlightedProfile',\n      sectionContainer:         'sectionContainerProfile',\n      sectionContainerFirst:    'sectionContainerFirstProfile',\n      sectionTitle:             'sectionTitleProfile'\n    }\n  }\n\n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value }, () => {\n      switch (name) {\n        case 'email':\n          this.setState({ isEmailUnused: true });\n          break;\n      }\n    });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  /*handleSelectChange = (object, name) => {\n    this.setState({ [name]: object });\n  };*/\n  \n  cvUpload = (acceptedFiles) => {\n  //cvUpload = (e) => {\n    //e.preventDefault();\n    this.setState({ isUploadLoading: true });\n    \n    //let cvFile = e.target.files[0]\n    //console.log(e.target.files);\n    let cvFile = acceptedFiles[0];\n    const formData = new FormData();\n    if (cvFile != null && cvFile.name &&cvFile.name.toLowerCase().match(/(pdf|doc|docx).*/)) {\n      formData.append('cvFile', cvFile);\n      console.log('start to upload cv');\n      axios.post('/api/auth/resume/upload', formData)\n      .then(res => {\n        if (res.data.isSuccess) {\n          this.setState({\n            isUploadLoading: false,\n            isUploadSuccess: true,\n            \n            email: res.data.cvDataParsed.email==null ? '' : res.data.cvDataParsed.email,\n            firstName: res.data.cvDataParsed.firstName==null ? '' : res.data.cvDataParsed.firstName,\n            lastName: res.data.cvDataParsed.lastName==null ? '' : res.data.cvDataParsed.lastName,\n            dial: res.data.cvDataParsed.dial==null ? '' : { value: res.data.cvDataParsed.dial, label: res.data.cvDataParsed.dial } ,\n            phone_number: res.data.cvDataParsed.phone_number==null ? '' : res.data.cvDataParsed.phone_number,\n            cvToken: res.data.cvToken,\n            cvFileType: res.data.cvFileType,\n            cvFilePath: res.data.cvFilePath,\n            //cvDataParsed: res.data.cvDataParsed,\n            cvFile: null,\n          });\n        }  \n        else {\n          if(res.data.msg)\n            notification.error(res.data.msg);\n          else\n            notification.error(\"Upload CV failed. Please try again later.\");\n          this.setState({ isUploadLoading: false });\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  formSubmit = (e) => {\n    e.preventDefault();\n    \n    this.setState({ isLoading: true });\n    const data = {\n      userType: this.state.userType,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      dial: this.state.dial==null ? null : this.state.dial.label,\n      phone_number: this.state.phone_number,\n      cvToken: this.state.cvToken==null ? null : this.state.cvToken,\n      cvFileType: this.state.cvFileType==null ? null : this.state.cvFileType,\n      cvFilePath: this.state.cvFilePath==null ? null : this.state.cvFilePath,\n    };\n    \n    if (this.props.isClient) {\n      var company = (this.state.company && this.state.company.name) ? this.state.company.name : this.state.companyText;\n      console.log(company)\n      data.company = company;\n    }\n      \n    axios.post('/api/auth/signup', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have registered your account successfully.\");\n        const data = {\n          email: this.state.email,\n          password: this.state.password\n        }\n        axios.post('/api/auth/login', data)\n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({ isLoading: false });\n            if (this.props.isPopup)\n              this.props.closePopup();\n            this.props.requestInitUser();\n            this.props.history.push('/verification');\n          }\n          else {\n            notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n            this.setState({ isLoading: false });\n          }\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        notification.error(res.data.msg);\n        this.setState({ isLoading: false });\n        if (res.data.isEmailUnused==false) \n          this.setState({ isEmailUnused: false });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  render() {\n    const { isClient } = this.props;\n    const { isUploadLoading, isUploadSuccess, isUploaded } = this.state;\n    const { firstName, lastName, email, password, password2, dial, phone_number } = this.state;\n    const { isEmailUnused } = this.state;\n    const { dialList, companyList } = this.props;\n    const { company, companyText } = this.state;\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.name ? option.name : \"\")),\n    });\n    \n    return (\n      <div className=\"login-form\">\n        { (!isUploaded && !isClient) && <div className=\"upload-CV\">\n          <p class=\"font-weight-bold\">Upload your CV</p>\n          <p class=\"font-weight-bold\">Auto-build your profile in seconds</p>\n          <div className=\"mx-auto w-75 my-3\">\n            <Dropzone className=\"dropzone\" accept='.doc,.docx,.pdf' onDrop={acceptedFiles => this.cvUpload(acceptedFiles)}> \n              {({getRootProps, getInputProps}) => (\n                <div {...getRootProps({style:{'top':'15%','position': 'relative'}, className: 'dropzone-file-btn'})}>\n                  <input {...getInputProps()} />\n                  { isUploadLoading ?\n                    <CircularProgress color=\"secondary\" className=\"m-auto\" />\n                    :\n                    <p>Drag and drop CV here, or click to select CV.</p>\n                  }\n                </div>\n              )}\n            </Dropzone>\n          </div>\n          {/*<UploadButton name=\"Upload CV\" accept=\".doc,.docx,.pdf\" isLoading={isUploadLoading} onChange={this.cvUpload} />*/}\n    \t\t  <div className=\"extra-login\">\n            <span className=\"or\">OR</span>\n          </div>\n          <div className=\"mb-4\">\n            <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary jr-btn-rounded\" fullWidth disabled={this.state.isUploadLoading} onClick={() => this.setState({ isUploaded: true })}>\n              {/*<i className=\"la la-key\"></i>*/}\n              Register Account\n            </Button>\n          </div>\n    \t\t</div>\n        }\n        { (isUploaded || isClient) &&\n          <form onSubmit={this.formSubmit}>\n            <div className=\"form-group\">\n              { isClient && <Autocomplete\n                  value={company}\n                  options={companyList ? companyList : []}\n                  getOptionLabel={option => option.name}\n                  filterOptions={filterOptions}\n                  freeSolo\n                  autoHighlight={true}\n                  blurOnSelect={true}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      label=\"Company\" \n                      fullWidth\n                      variant=\"outlined\"\n                      error={!(company || companyText)}\n                      helperText={!(company || companyText) && \"Required\"}\n                      /*InputProps={{\n                        style: {\n                          backgroundColor: \"white\",\n                          borderRadius: 4\n                        }    \n                      }}*/\n                    />\n                    /*<InputBase ref={params.InputProps.ref}\n                      inputProps={params.inputProps} placeholder=\"Company Name\" className=\"form-control form-control-lg employer\" />*/\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'company')}\n                  onInputChange={(e, value) => this.autocompleteChange(e, value, 'companyText')}\n              /> }\n              {/*<input type=\"text\" name=\"company\" placeholder=\"Company Name\" value={this.state.company} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg employer\"/>*/}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 col-6\">\n                <div className=\"form-group half-input\">\n                  {/*<input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.textboxChange}\n                         className=\"form-control form-control-lg\"/>*/}\n                  <TextField\n                    name=\"firstName\"\n                    label=\"First Name\"\n                    value={firstName}\n                    onChange={this.textboxChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    error={!firstName}\n                    helperText={!firstName && \"Required\"}\n                    /*InputProps={{\n                      style: {\n                        backgroundColor: \"white\",\n                        borderRadius: 4\n                      }    \n                    }}*/\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-6 col-6\">\n                <div className=\"form-group half-input\">\n                  {/*<input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.textboxChange}\n                         className=\"form-control form-control-lg\"/>*/}\n                  <TextField\n                    name=\"lastName\"\n                    label=\"Last Name\"\n                    value={lastName}\n                    onChange={this.textboxChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    error={!lastName}\n                    helperText={!lastName && \"Required\"}\n                    /*InputProps={{\n                      style: {\n                        backgroundColor: \"white\",\n                        borderRadius: 4\n                      }    \n                    }}*/\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              {/*<input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg\"/>*/}\n              <TextField\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"exmaple@jobslab.io\"\n                id=\"email\"\n                label=\"Email\"\n                fullWidth\n                onChange={this.textboxChange}\n                value={email}\n                margin=\"normal\"\n                variant=\"outlined\"\n                className=\"mt-1\"\n                error={!email || !isEmailUnused}\n                helperText={!email ? \"Required\" : !isEmailUnused && \"This email has been used.\"}\n                /*InputProps={{\n                  style: {\n                    backgroundColor: \"white\",\n                    borderRadius: 4\n                  }    \n                }}*/\n              />\n            </div>\n            <div className=\"form-group\">\n              {/*<input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg\"/>*/}\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                //error={isPasswordMismatch}\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"******\"\n                //variant=\"outlined\"\n                value={password}\n                onChange={this.textboxChange}\n                error={!password || !(password.length>=8)}\n                helperText={!password ? \"Required\" : !(password.length>=8) && \"Password must be at least 8 characters long.\"}\n                /*InputProps={{\n                  style: {\n                    backgroundColor: \"white\",\n                    borderRadius: 4\n                  }    \n                }}*/\n              />\n            </div>\n            <div className=\"form-group\">\n              {/*<input type=\"password\" name=\"password2\" placeholder=\"Confirm Password\" value={this.state.password2} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg\"/>*/}\n              <TextField\n                name=\"password2\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"******\"\n                //variant=\"outlined\"\n                value={password2}\n                onChange={this.textboxChange}\n                error={!(password==password2)}\n                helperText={!(password==password2) && \"Password mismatch.\"}\n                /*InputProps={{\n                  style: {\n                    backgroundColor: \"white\",\n                    borderRadius: 4\n                  }    \n                }}*/\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-5 col-6\">\n                <div className=\"form-group\">\n                  {/*<div className=\"form-control form-control-lg dial\">\n                    <Select\n    \t\t\t\t  \t\t\t  className=\"react-select-container\"\n    \t\t\t \t\t\t\t\t  classNamePrefix=\"react-select\"\n                      value={this.state.dial}\n                      onChange={(obj) => this.handleSelectChange(obj,'dial')}\n                      options={dialList}\n                      isMulti={false}\n                      defaultMenuIsOpen={false}\n                    />\n                  </div>*/}\n                  <Autocomplete\n                    value={dial}\n                    options={dialList ? dialList : []}\n                    getOptionLabel={option => option.label}\n                    autoHighlight={true}\n                    blurOnSelect={true}\n                    disableClearable={true}\n                    renderInput={params => (\n                      <TextField \n                        {...params} \n                        label=\"Dial\" \n                        fullWidth \n                        variant=\"outlined\"\n                        error={!dial}\n                        helperText={!dial && \"Required\"}\n                        /*InputProps={{\n                          style: {\n                            backgroundColor: \"white\",\n                            borderRadius: 4\n                          }    \n                        }}*/\n                      />\n                    )}\n                    onChange={(e, value) => this.autocompleteChange(e, value, 'dial')}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-7 col-6\">\n                <div className=\"form-group\">\n                  <TextField\n                    name=\"phone_number\"\n                    label=\"Number\"\n                    value={phone_number}\n                    onChange={this.textboxChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    //className=\"bg-white rounded\"\n                    error={!phone_number}\n                    helperText={!phone_number && \"Required\"}\n                  />\n                  {/*<div className=\"form-control form-control-lg phone\">\n                    <input type=\"text\" name=\"phone_number\" placeholder=\"Phone Number\" value={this.state.phone_number} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg\"/>\n                  </div>*/}               \n                </div>\n              </div>\n            </div>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"my-3 btn btn-primary jr-btn-rounded\" fullWidth disabled={this.state.isLoading} onClick={this.formSubmit}>\n              {this.state.isLoading && <i className='fa fa-spinner fa-spin'/>} Register\n            </Button>\n            {/*<div className=\"mt-4 mb-2\">\n              <button type=\"submit\" className=\"btn btn-primary jr-btn-rounded w-100\"\n              disabled={this.state.isLoading}>{this.state.isLoading && <i className='fa fa-spinner fa-spin'/>}\n                Register\n              </button>\n            </div>*/}\n            \n          </form>\n        }\n        { !isClient && \n          <p>\n            {/*<IntlMessages id=\"appModule.hvAccount\"/>*/}\n            Register as a Client?\n            <Link to=\"/employer/register\" className=\"ml-1\" onClick={this.props.closePopup}>\n              {/*<IntlMessages id=\"appModule.signIn\"/>*/}\n              Sign Up\n            </Link>\n          </p> \n        }\n        <SweetAlert show={isUploadSuccess} success title={\"Congratulations!\"/*<IntlMessages id=\"sweetAlerts.goodJob\"/>*/}\n                    onConfirm={ () => this.setState({ isUploadSuccess: false, isUploaded: true }) }>\n          Your CV has been uploaded successfully.\n          {/*<IntlMessages id=\"sweetAlerts.btnClicked\"/>*/}\n        </SweetAlert>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  const { dialList, companyList } = state.list;\n  return { dialList, companyList };\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignupForm));\n","/home/ubuntu/environment/jobslab-web/src/components/SearchBox/index.js",["2666","2667","2668","2669"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { getSuggestions } from './functions.js';\r\nimport './autoSuggestStyleHome.css';\r\n\r\nconst getSuggestionValue = suggestion => suggestion.name;\r\n\r\nconst renderSuggestion = suggestion => (\r\n  <span>\r\n    {suggestion.name}\r\n  </span>\r\n);\r\n\r\n\r\nclass SearchBox extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state ={\r\n        suggestions: []\r\n      }\r\n      \r\n      this.suggestTheme = {\r\n        container:                'containerHome',\r\n        containerOpen:            'containerOpenHome',\r\n        input:                    'inputHome',\r\n        inputOpen:                'inputOpenHome',\r\n        inputFocused:             'inputFocusedHome',\r\n        suggestionsContainer:     'suggestionsContainerHome',\r\n        suggestionsContainerOpen: 'suggestionsContainerOpenHome',\r\n        suggestionsList:          'suggestionsListHome',\r\n        suggestion:               'suggestionHome',\r\n        suggestionFirst:          'suggestionFirstHome',\r\n        suggestionHighlighted:    'suggestionHighlightedHome',\r\n        sectionContainer:         'sectionContainerHome',\r\n        sectionContainerFirst:    'sectionContainerFirstHome',\r\n        sectionTitle:             'sectionTitleHome'\r\n      }\r\n    }\r\n    \r\n  componentDidMount() {\r\n    this.setState({\r\n          clearBtnStyle: (this.props.clearBtnStyle ? this.props.clearBtnStyle : \"clear-icon\")\r\n    });\r\n    \r\n  }\r\n  \r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n        var enableSuggestion = this.props.enableSuggestion == false ? false : true;\r\n        var searchList = (this.props.searchList && enableSuggestion)?this.props.searchList:[];\r\n        this.setState({\r\n          suggestions: getSuggestions(value, searchList)\r\n        });\r\n    };\r\n    \r\n  onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n    \r\n  onSuggestionSelected = (event, {suggestionValue}) => {\r\n    \tvar targetElement = event.target;\r\n  \t  var targetName = \"\";\r\n  \t  var isTargetFound = false;\r\n  \t  var name =  (this.props.name)?this.props.name:\"searchText\";\r\n  \t  //find autosuggest container\r\n    \twhile(!isTargetFound)\r\n      {\r\n        if(targetElement.tagName == \"DIV\")\r\n        {\r\n          if(targetElement.classList.contains(\"containerHome\"))\r\n          {\r\n            isTargetFound = true;\r\n          }\r\n        }\r\n        if(!isTargetFound)\r\n          targetElement = targetElement.parentNode;\r\n      }\r\n      \r\n      var childElements =  targetElement.children;\r\n  \t\tfor(var i = 0; i < childElements.length; i++){\r\n  \t\t\tif (childElements[i].tagName == \"INPUT\") {\r\n  \t\t\t   targetName = childElements[i].name;\r\n  \t\t\t   break;\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\tif(this.props.selectSearchText)\r\n  \t\t    this.props.selectSearchText(suggestionValue, name);\r\n  \t\t    \r\n  \t\tevent.preventDefault();\r\n  \t\tevent.stopPropagation();\r\n  \t\t/*\r\n      this.setState({\r\n        [targetName]: suggestionValue\r\n      });\r\n      */\r\n    }\r\n    \r\n  render(){\r\n      const {clearBtnStyle} = this.state;\r\n      \r\n      var name =  (this.props.name)?this.props.name:\"searchText\";\r\n      const inputPropsAutoSuggestSearch = {\r\n        value: (this.props.value)?this.props.value:\"\",\r\n        id: (this.props.id)?this.props.id:\"searchText\",\r\n        name: name,\r\n        onChange: this.props.onChange,\r\n        onKeyPress: this.props.searchByKey,\r\n        placeholder:this.props.placeholder ? this.props.placeholder : \"Search jobs...\" ,\r\n        \r\n        endAdornment: (\r\n          <IconButton onClick={() => this.props.onChange(\"\")}>\r\n            <ClearIcon />\r\n          </IconButton>\r\n        )\r\n        \r\n      };\r\n      \r\n    \r\n      return (\r\n      <div className={`search-bar right-side-icon bg-transparent ${this.props.styleName}`}>\r\n      <div className=\"form-group\">\r\n          <Autosuggest className=\"form-control border-0\"\r\n                  suggestions={this.state.suggestions}\r\n                  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                  onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                  onSuggestionSelected={this.onSuggestionSelected}\r\n                  getSuggestionValue={getSuggestionValue}\r\n                  renderSuggestion={renderSuggestion}\r\n                  inputProps={inputPropsAutoSuggestSearch}\r\n                  theme={this.suggestTheme}\r\n                />\r\n          {\r\n            this.props.value ? \r\n              <IconButton className={clearBtnStyle} onClick={() => this.props.clearText(name)}>\r\n                <ClearIcon style={{\"font-size\":\"15px\"}} />\r\n              </IconButton>\r\n              : \"\"\r\n          }\r\n          \r\n          <button className=\"search-icon\"><i className=\"zmdi zmdi-search zmdi-hc-lg\"/></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { searchList } = state.list;\r\n  return { searchList }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchBox);\r\n","/home/ubuntu/environment/jobslab-web/src/components/SearchBox/functions.js",[],"/home/ubuntu/environment/jobslab-web/src/components/UploadButton/index.js",[],"/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/zh-Hans-CN.js",[],"/home/ubuntu/environment/jobslab-web/src/lngProvider/entries/en-US.js",[],"/home/ubuntu/environment/jobslab-web/src/actions/Function.js",[],"/home/ubuntu/environment/jobslab-web/src/components/CircularProgress/index.js",[],"/home/ubuntu/environment/jobslab-web/src/constants/AutoSuggest.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/ApplicationListForm.js",["2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2680"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nimport Widget from \"components/Widget\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport axios from \"axios\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport { numberWithCommas } from 'util/functions.js';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport moment from \"moment\";\n\nimport AdminJobListApplicationFilter from 'components/popup/AdminJobListApplicationFilter';\nimport TrueFalseIcon from 'components/TrueFalseIcon';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass ApplicationListForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      application_list: [],\n\n      hasMore: true,\n      noRecordFound: false,\n  \t  pageSize: 20,\n  \t  pageNum: 1,\n  \t  pageReady: false,\n  \t  activeCandidate: null,\n  \t  //for filter\n  \t  similarity: { min: 0, max: 100 },\n  \t  experience: { min: 0, max: 50 },\n      recommendedCandidate: false,\n      appStateList: [],\n      searchText: \"\",\n      //checkedItemsAppStat: new Map(),\n      appStateSelected : [],\n    }\n  }\n  \n  componentDidMount() {\n    this.state.pageReady = true;\n    this.getMoreCandidate();\n    this.initData();\n  }\n  \n  initData = async () => {\n\n    var applicationStateList = [];\n    const appStatResult = await axios.get('/api/admins/get/application/state/list'); //For React-Select\n    if(appStatResult.data.isSuccess)\n    {\n      applicationStateList = appStatResult.data.applicationState_list;\n      this.setState({appStateList : appStatResult.data.applicationState_list});\n    }\n }\n  \n  getMoreCandidate = () => {\n    if(this.state.pageReady && this.props.jobId && this.state.hasMore)\n    {\n       var appStat = \"\"\n      this.state.appStateSelected.forEach(function(object) {\n        if(object.value)\n          appStat += object.value + \",\";\n      });\n      \n      if(appStat.length>0)\n        appStat = appStat.substr(0, appStat.length-1); \n      axios.post('/api/clients/get/application/list',{\n        jobId: this.props.jobId,\n        pageNum: this.state.pageNum,\n        recordNum: this.state.recordNum,\n        //new\n        searchData: this.state.searchText,\n        minSimilarity: this.state.similarity.min,\n        maxSimilarity: this.state.similarity.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        appStat: appStat,\n        recommendedCandidate: this.state.recommendedCandidate,\n      }) \n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({\n                application_list:  this.state.application_list.concat(res.data.app_list),\n                hasMore: (res.data.hasMore == true)? true : false,\n                pageNum: this.state.pageNum + 1\n            });\n \n            //if records are not returned\n            if(!this.state.lastUserId)\n            {\n                 this.setState({ noRecordFound:true });\n            }\n          } \n          else {\n            this.setState({\n                hasMore: false,\n            });\n          }\n        })\n        .catch(function (err) {\n          //console.log(err);\n        });   \n      \n    }\n  }\n  closeForm = () => {\n    this.props.closeModal('applicationListOpen');\n    this.resetForm();\n  }\n  \n  resetForm = () => {\n    this.setState({\n      application_list: [],\n      activeCandidate: \"\",\n      hasMore: true,\n      noRecordFound: false,\n  \t  pageNum : 1\n    })\n  }\n  \n  viewApplcation = (application) => {\n    var applicationId = (application != null) ? application : \"\";\n    if(applicationId)\n      window.open(\"/application/\"+applicationId, \"_blank\");\n    else\n      alert(\"Application data error!\");\n  }\n  \n  viewProfile = (application) => {\n    if (this.props.userType==\"admin\") {\n      window.open(\"/resume/\"+application.candidate._id._id, \"_blank\");\n    }\n    else {\n      var applicationId = (application != null) ? application : \"\";\n      if(applicationId)\n        window.open(\"/resume/\"+applicationId, \"_blank\");\n      else\n        alert(\"Candidate data error!\");\n    }\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n }\n \n \n searchApplication = (e) => {\n   this.resetForm();\n   this.closeModal('showFilterPopup');\n   this.getMoreCandidate();\n\n  }\n  \n  handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n }\n \n inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n  \n  clearFilter = () => {\n  \n    this.setState({\n      //checkedItemsAppStat: new Map(),\n      industrySelected : [],\n      appStateSelected : [],\n      similarity: { min: 0, max: 100 },\n      experience: { min: 0, max: 50 },\n      searchText : \"\",\n      recommendedCandidate: false\n    });\n  }\n  \n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  openModal = (e) => {\n    e.preventDefault();\n    this.setState({showFilterPopup: true});\n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name]: false });\n  }\n \n  render() {\n    const { userType } = this.props;\n    const { isOpen } = this.props;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.application_list.map((application, i) => {\n      items.push(\n                  <StyledTableRow key='1'>\n                    <StyledTableCell align=\"center\">{application && application.updatedAt ?  moment(application.updatedAt).format(\"YYYY/MM/DD\") :\"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\"><a target='_blank' href={\"/resume/\"+ (userType==\"admin\" ? application.candidate._id._id : application._id)}>{application && application.candidate && application.candidate._id && application.candidate._id.name ? \n                      application.candidate._id.name.firstName + \" \" + application.candidate._id.name.lastName\n                     :\"\"}</a>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {application && application.candidate && application.candidate.salary ? \"$\"+numberWithCommas(application.candidate.salary) :\"\"}<br/>\n                      {application && application.candidate && application.candidate.experience ? application.candidate.experience+\" Yr\" :\"\"}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {application.sim && application.sim.score ? Math.round(application.sim.score*100)+'%' : '0%'}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && application.state ? application.state : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && <TrueFalseIcon checker={application.referral} /> }</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && <TrueFalseIcon checker={application.isCvSent} /> }\n                    </StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewProfile(application && application._id ? application._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewApplcation(application && application._id ? application._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });\n    \n    return (\n      <Dialog open={isOpen} onClose={()=>this.closeForm()} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n        <DialogContent id=\"application-list\">  \n          <div className=\"mb-3\">\n            <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Application List <span className=\"close-popup\" onClick={()=>this.closeForm()}><i className=\"la la-close\"></i></span></h3>\n          </div>\n          \n          <Dialog open={this.state.showFilterPopup} onClose={() => this.closeModal('showFilterPopup')} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n              <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}>  \n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Filter <span className=\"close-popup\" onClick={() => this.closeModal('showFilterPopup')}><i className=\"la la-close\"></i></span></h3>\n                  </div>\n                  <AdminJobListApplicationFilter \n                          //industrySelected={this.state.industrySelected}\n                          appStateSelected={this.state.appStateSelected}\n                          similarity={this.state.similarity} \n                          experience={this.state.experience}\n                          recommendedCandidate={this.state.recommendedCandidate}\n                          //activeJob={this.state.activeJob}\n                          appStateList={this.state.appStateList}\n                          handleCheckBoxChange={this.updateCheckList.bind(this)}\n                          search={this.searchApplication.bind(this)}\n                          handlePropChange={this.handlePropChange.bind(this)}\n                          onFieldChanged={this.inputRangeChanged.bind(this)}\n                          clearFilter={this.clearFilter.bind(this)}\n                          updateSearchText={this.updateSearchText.bind(this)}\n                          selectSearchText={this.selectSearchText.bind(this)}\n                          searchText={this.state.searchText}\n                          autocompleteChange={this.autocompleteChange.bind(this)}\n                  />\n            </DialogContent>\n          </Dialog>\n          <div className=\"col-xl-4 col-lg-4 col-md-4 col-4 mb-4\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                      onClick={(e) => this.openModal(e)}>\n                  <font size=\"+1\">Filter</font>\n                </Button>\n          </div>  \n          \n          \n          <div className=\"account-popup-area signup-popup-box\">\n        \t  <div className=\"referral-popup\">\n          \t  <div className=\"row justify-content-left\">\n                <div id=\"inif-container-popup\" className=\"table-container admin-infinite-popup-table\">\n                  <Table stickyHeader aria-label=\"sticky customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell align=\"center\">Update Date</StyledTableCell>\n                          <StyledTableCell align=\"center\">Name</StyledTableCell>\n                          <StyledTableCell align=\"center\">Current Salary<br/>Experience</StyledTableCell>\n                          <StyledTableCell align=\"center\">Matching Score</StyledTableCell>\n                          <StyledTableCell align=\"center\">Application Status</StyledTableCell>\n                          <StyledTableCell align=\"center\">Refer</StyledTableCell>\n                          <StyledTableCell align=\"center\">Sent CV to Client</StyledTableCell>\n                          {/*<StyledTableCell align=\"center\">Applicant Profile</StyledTableCell>*/}\n                          <StyledTableCell align=\"center\">Application Details</StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                    \n                        <InfiniteScroll\n                              className=\"MuiTableBody-root\"\n                              pageStart={0}\n                              element={'tbody'}\n                              loadMore={this.getMoreCandidate.bind(this)}\n                              hasMore={this.state.hasMore}\n                              loader={loaderComponent}\n                              useWindow={false}\n                              getScrollParent={() => document.getElementById('inif-container-popup')}\n                            >\n                              {items}\n                        </InfiniteScroll>\n                      {/*\n                          <StyledTableRow key='1'>\n                            <StyledTableCell align=\"center\">{this.state.candidate !=null ? \n                              (this.state.candidate.name ? this.state.candidate.name.lastName + \" \" + this.state.candidate.name.firstName\n                              :\"\")\n                             :\"\"}\n                            </StyledTableCell>\n                            <StyledTableCell align=\"center\">{this.state.candidate !=null ? this.state.candidate.email :\"\"}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{this.state.candidate !=null ? \n                              (this.state.candidate.phone ? this.state.candidate.phone.dial + \" \" + this.state.candidate.phone.number \n                              :\"\")\n                             :\"\"}</StyledTableCell>\n                            <StyledTableCell align=\"center\">\n                            { this.state.candidate !=null ?\n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={() => this.viewProfile()}>\n                                  View Details\n                              </Button>\n                              : \"\"\n                            }\n                            </StyledTableCell>\n                            <StyledTableCell align=\"center\">\n                            { this.state.candidate !=null ?\n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={(e) => this.recommendJob(e)}>\n                                  Refer\n                              </Button>\n                              : \"\"\n                            }\n                            </StyledTableCell>\n                          </StyledTableRow>\n                      */}\n        \n                  \n                    </Table>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n     \n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default connect(mapStateToProps, null)(ApplicationListForm);\n","/home/ubuntu/environment/jobslab-web/src/components/popup/OfferForm.js",[],"/home/ubuntu/environment/jobslab-web/src/components/InputNumber/InputSalary.js",[],"/home/ubuntu/environment/jobslab-web/src/components/application/ClientList.js",["2681","2682","2683"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport WidgetHeader from \"components/WidgetHeader/index\";\r\n\r\nimport UserContactForm from 'components/popup/UserContactForm';\r\n\r\nfunction Status(props) {\r\n  const isType = props.isType;\r\n  if (isType === 'online') {\r\n    return <span className=\"badge-status-dot bg-success\"/>;\r\n  } else if (isType === 'away') {\r\n    return <span className=\"badge-status-dot bg-warning\"/>;\r\n  } else {\r\n    return <span className=\"badge-status-dot bg-red\"/>;\r\n  }\r\n}\r\n\r\nclass ClientList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clientList: [],\r\n      contactModalIsOpen: false,\r\n      activeAdmin : null\r\n    }\r\n  }\r\n  \r\n  openModal = (e, client) => {\r\n    console.log(e);\r\n    console.log(client);\r\n    this.setState({\r\n      contactModalIsOpen: true,\r\n      activeExpert: client\r\n    });\r\n  }\r\n  \r\n  closeModal = (name) => {\r\n    this.setState({\r\n      [name]: false,\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const {expertList, contactModalIsOpen} = this.state;\r\n    const { clientList } = this.props;\r\n    return (\r\n      <div className=\"jr-entry-sec\">\r\n        <WidgetHeader title={<span>Client List {/*<span className=\"text-grey\">(27 Mutual)</span>*/}</span>}/>\r\n        <ul className=\"jr-fnd-list\">\r\n          {clientList.map((client, index) =>\r\n            <Tooltip key={index} id=\"tooltip-fab\" title={\"Contact: \"+client._id.phone.dial+\" \"+client._id.phone.number} placement=\"bottom\">\r\n              <li className=\"mb-2\" key={index} style={{cursor: 'pointer'}} onClick={(e)=>{ e.preventDefault();this.openModal(e, client._id);}}>\r\n                <div className=\"jr-user-fnd\">\r\n                  <img alt=\"...\" src={client._id.pictureUrl} />\r\n                  <div className=\"jr-user-fnd-content\">\r\n                    {/*<span className=\"jr-badge\"><Status isType={user.status}/></span>*/}\r\n                    <h6>{client._id.name.firstName + \" \" + client._id.name.lastName}</h6>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </Tooltip>\r\n          )}\r\n        </ul>\r\n        <UserContactForm expertData={this.state.activeExpert} isOpen={contactModalIsOpen} closeModal={() => this.closeModal('contactModalIsOpen')} />\r\n        {/*<SignupForm isOpen={contactModalIsOpen} closeModal={this.closeModal} />*/}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ClientList;","/home/ubuntu/environment/jobslab-web/src/components/application/JobDescription.js",[],"/home/ubuntu/environment/jobslab-web/src/components/application/CandidateHeader.js",["2684","2685","2686","2687"],"import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//import Avatar from '@material-ui/core/Avatar';\r\nimport Avatar from 'react-avatar';\r\nimport { numberWithCommas } from 'actions/Function.js';\r\n\r\n\r\nclass CandidateHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDownloadLoading: false,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n  }\r\n  \r\n  openResume = () => {\r\n    var userType = this.props.userType;\r\n    switch (userType) {\r\n      case 'admin':\r\n        var { _id } = this.props.candidateData._id;\r\n        window.open(\"/resume/\" + _id, \"_blank\");\r\n        break;\r\n      case 'client':\r\n        var appId = this.props.appId;\r\n        window.open(\"/resume/\" + appId, \"_blank\");\r\n        break;\r\n      default: \r\n        var resumeToken = this.props.resumeToken;\r\n        window.open(\"/applicant/\" + resumeToken, \"_blank\");\r\n        break;\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const appId = this.props.appId;\r\n    console.log(this.props.candidateData)\r\n    const { name, pictureUrl } = this.props.candidateData._id;\r\n    const { salary, experience, career } = this.props.candidateData;\r\n    const { userType } = this.props;\r\n    \r\n    return (\r\n      <div className=\"jr-profile-banner blurish-green\">\r\n        <div className=\"jr-profile-container\">\r\n          <div className=\"jr-profile-banner-top\">\r\n            <div className=\"jr-profile-banner-top-left\">\r\n              <div className=\"jr-profile-banner-avatar\">\r\n              <div className=\"propic-hover profile\">\r\n                <Avatar \r\n                  round={ true } \r\n                  size={ 150 }\r\n                  style={ {margin: 2, boxShadow: '0px 0px 30px grey', backgroundColor: 'white', cursor: 'default'} }\r\n                  src={ pictureUrl } \r\n                  name={ name && name.firstName+\" \"+name.lastName } \r\n                />\r\n              </div>\r\n              </div>\r\n              <div className=\"jr-profile-banner-avatar-info\">\r\n                <h2 className=\"mb-2 jr-mb-sm-3 jr-fs-xxl jr-font-weight-light\">\r\n                  { name && name.firstName+\" \"+name.lastName }\r\n                </h2>\r\n                <p className=\"mb-2 jr-fs-lg\">{career && (career.length>0 && career[0].jobTitle + \" at \" + career[0].company)} </p>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={() => this.openResume()}>\r\n                  View Resume\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"jr-profile-banner-top-right\">\r\n              <ul className=\"jr-follower-list\">\r\n                <li>\r\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">{salary ? \"$\" + numberWithCommas(salary) : \"-\"}</span>\r\n                  <span className=\"jr-fs-sm\">Monthly Salary</span></li>\r\n                <li>\r\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">{experience}</span>\r\n                  <span className=\"jr-fs-sm\">Year of Exp.</span></li>\r\n                <li>\r\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">{career && career.length}</span>\r\n                  <span className=\"jr-fs-sm\">Career Count</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"jr-profile-banner-bottom\">\r\n            <span className=\"jr-link jr-profile-setting\">\r\n              \r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { userType } = state.auth;\r\n  return { userType };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(CandidateHeader));\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/components/application/TimeLine.js",["2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708","2709","2710","2711","2712","2713"],"import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport {Tablet, PhonelinkRing, AssignmentLate, AssignmentTurnedIn, AssignmentInd, AssignmentReturn, AssignmentReturned, Schedule, Update, Today, VideoCall, Videocam, ThumbUp, HowToReg} from '@material-ui/icons';\nimport * as notification from 'actions/Notification';\n\nimport {\n  CANDIDATE_INTERESTED,\n  ADMIN_ACCEPTED,\n  CANDIDATE_APPLIED,\n  ADMIN_RECOMMENDED,\n  ADMIN_REJECTED,\n  CANDIDATE_WITHDRAWN_1,\n  APPLICATION_CONFIRMED,\n  CLIENT_VIDEO_REQUESTED,\n  CANDIDATE_VIDEO_SUBMITTED,\n  CANDIDATE_VIDEO_EXPIRED,\n  CLIENT_INTERVIEW_REQUEST,\n  INTERVIEW_RESCHEDULE_REQUESTED,\n  INTERVIEWING,\n  SELECTED,\n  CLIENT_REJECTED,\n  CANDIDATE_WITHDRAWN_2,\n  HIRED\n} from 'constants/ApplicationState';\n\nimport TimeLineItem from 'components/application/TimeLineItem';\nimport InterviewScheduleForm from 'components/popup/InterviewScheduleForm';\nimport InterviewVideoRequestForm from 'components/popup/InterviewVideoRequestForm';\n\n\nclass TimeLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      interviewVideoModalIsOpen: false,\n      interviewModalIsOpen: false,\n      isInterviewConfirmed: false, //false: Interview Request, true: Interview Schedule\n    };\n  }\n  \n  /*applyJob = () => {\n    const jobId = this.props.jobId;\n    const data = { jobId };\n    axios.post('/api/candidates/set/application/apply', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have applied the job successfully.\");\n        this.props.updateApp();\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }*/\n  \n  confirmApply = () => {\n    const appId = this.props.appId;\n    const data = { appId };\n    axios.post('/api/candidates/set/application/confirm', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have confirmed the application successfully.\");\n        this.props.updateApp();\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  acceptInterview = (interviewId) => {\n    const appId = this.props.appId;\n    const data = { appId, interviewId };\n    axios.post('/api/candidates/set/interview/accept', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have accepted the interview.\");\n        this.props.updateApp();\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  rescheduleInterview = (interviewId) => {\n    const appId = this.props.appId;\n    const data = { appId, interviewId };\n    axios.post('/api/candidates/set/interview/reschedule', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have requested interview reschedule. Our career expert will contact you shortly.\");\n        this.props.updateApp();\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  openModal = (modalType) => {\n    switch (modalType) {\n      case 'interviewVideo':\n        this.setState({ \n          interviewVideoModalIsOpen: true,\n        });\n        break;\n      case 'interviewRequest':\n        this.setState({ \n          interviewModalIsOpen: true,\n          isInterviewConfirmed: false\n        });\n        break;\n      case 'interviewSchedule':\n        this.setState({ \n          interviewModalIsOpen: true,\n          isInterviewConfirmed: true\n        });\n        break;\n    }\n    \n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name]: false});\n  }\n  \n  completeSchedule = () => {\n    this.setState({ \n      interviewVideoModalIsOpen: false,\n      interviewModalIsOpen: false \n    });\n    this.props.updateApp();\n  }\n  \n  adminAllow = () => {\n    console.log(\"Start to accept candidate to the application...\")\n    const appId = this.props.appId;\n    const data = { appId };\n    axios.post('/api/admins/set/application/allow', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have allowed this application\");\n        this.props.updateApp();\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  adminBlock = () => {\n    const appId = this.props.appId;\n    const data = { appId };\n    axios.post('/api/admins/set/application/block', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        this.props.updateApp();\n      }\n      else {\n        alert(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  \n  getTimeLineItem(event, index, isPresent) {\n    const userType = this.props.userType;\n    \n    switch (event.state._id) {\n      case CANDIDATE_INTERESTED:\n        return userType!='client' && \n        <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"purple\" \n          timeLine={event} \n          isPresent={isPresent} \n          adminAllow={this.adminAllow} \n          adminBlock={this.adminBlock}\n        >\n          <AssignmentLate/>\n        </TimeLineItem>;\n      case ADMIN_ACCEPTED:\n        return userType!='client' && \n        <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"blue\" \n          timeLine={event} \n          isPresent={isPresent} \n          confirmApply={this.confirmApply}\n        >\n          <AssignmentTurnedIn/>\n        </TimeLineItem>;\n      case ADMIN_REJECTED:\n        return /*userType!='candidate' &&*/ userType!='client' && \n        <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"red\" \n          timeLine={event} \n          isPresent={isPresent} \n          adminAllow={this.adminAllow}\n        >\n          <AssignmentReturned/>\n        </TimeLineItem>;\n      case CANDIDATE_APPLIED:\n        return userType!='client' && \n        <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"purple\" \n          timeLine={event} \n          isPresent={isPresent} \n          adminAllow={this.adminAllow} \n          adminBlock={this.adminBlock}\n        >\n          <AssignmentLate/>\n        </TimeLineItem>;\n      case ADMIN_RECOMMENDED:\n        return userType!='client' && \n        <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"pink\" \n          timeLine={event} \n          isPresent={isPresent} \n          confirmApply={this.confirmApply}\n        >\n          <PhonelinkRing/>\n        </TimeLineItem>;\n      case CANDIDATE_WITHDRAWN_1:\n        return userType!='client' && \n        <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"grey\" \n          timeLine={event}\n        >\n          <AssignmentReturn/>\n        </TimeLineItem>;\n      case APPLICATION_CONFIRMED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"amber\" \n          timeLine={event} \n          isPresent={isPresent} \n          requestInterviewVideo={() => this.openModal('interviewVideo')}\n          requestInterview={() => this.openModal('interviewRequest')} \n          scheduleInterview={() => this.openModal('interviewSchedule')} \n        >\n          <AssignmentInd/>\n        </TimeLineItem>;\n      case CLIENT_VIDEO_REQUESTED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"cyan\" \n          timeLine={event} \n          isPresent={isPresent} \n        >\n          <Videocam/>\n        </TimeLineItem>;\n      case CANDIDATE_VIDEO_SUBMITTED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"green\" \n          timeLine={event} \n          isPresent={isPresent} \n          requestInterviewVideo={() => this.openModal('interviewVideo')}\n          requestInterview={() => this.openModal('interviewRequest')} \n          scheduleInterview={() => this.openModal('interviewSchedule')} \n        >\n          <VideoCall/>\n        </TimeLineItem>;\n      case CANDIDATE_VIDEO_EXPIRED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"red\" \n          timeLine={event} \n          isPresent={isPresent} \n          requestInterviewVideo={() => this.openModal('interviewVideo')}\n          requestInterview={() => this.openModal('interviewRequest')} \n          scheduleInterview={() => this.openModal('interviewSchedule')} \n        >\n          <Videocam/>\n        </TimeLineItem>;\n      case CLIENT_INTERVIEW_REQUEST:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"cyan\" \n          timeLine={event} \n          isPresent={isPresent} \n          acceptInterview={this.acceptInterview} \n          rescheduleInterview={this.rescheduleInterview} \n          requestInterview={() => this.openModal('interviewRequest')} \n          scheduleInterview={() => this.openModal('interviewSchedule')}\n        >\n          <Schedule/>\n        </TimeLineItem>;\n      case INTERVIEW_RESCHEDULE_REQUESTED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"cyan\" \n          timeLine={event} \n          isPresent={isPresent} \n          scheduleInterview={() => this.openModal('interviewSchedule')}\n        >\n          <Update/>\n        </TimeLineItem>;\n      case INTERVIEWING:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"green\" \n          timeLine={event} \n          isPresent={isPresent} \n          requestInterviewVideo={() => this.openModal('interviewVideo')}\n          requestInterview={() => this.openModal('interviewRequest')} \n          scheduleInterview={() => this.openModal('interviewSchedule')}\n        >\n          <Today/>\n        </TimeLineItem>;\n      case SELECTED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"orange\" \n          timeLine={event} \n          isPresent={isPresent} \n          acceptOffer={this.acceptOffer} \n          requestNegotiation={this.requestNegotiation}\n        >\n          <ThumbUp/>\n        </TimeLineItem>;\n      case CLIENT_REJECTED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"red\" \n          timeLine={event}\n        >\n          <AssignmentReturned/>\n        </TimeLineItem>;\n      case CANDIDATE_WITHDRAWN_2:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"grey\" \n          timeLine={event}\n        >\n          <AssignmentReturn/>\n        </TimeLineItem>;\n      case HIRED:\n        return <TimeLineItem \n          styleName={ index%2==0 ? \"timeline-inverted\" : \"\" } \n          color=\"orange\" \n          timeLine={event}\n        >\n          <HowToReg/>\n        </TimeLineItem>;\n      default:\n        return <div></div>;\n    }\n  }\n  \n  render() {\n    const { appId, history } = this.props;\n    const { interviewModalIsOpen, isInterviewConfirmed, interviewVideoModalIsOpen } = this.state;\n    return (\n      <div className=\"timeline-section timeline-center clearfix animated slideInUpTiny animation-duration-3\">\n        { history.map((event, index) => {\n          return this.getTimeLineItem(event, index, index==history.length-1);\n        })}\n        <InterviewScheduleForm appId={appId} isOpen={interviewModalIsOpen} isConfirmed={isInterviewConfirmed} completeSchedule={this.completeSchedule} closeModal={this.closeModal} />\n        <InterviewVideoRequestForm appId={appId} isOpen={interviewVideoModalIsOpen} completeSchedule={this.completeSchedule} closeModal={this.closeModal} />\n      </div>\n    )\n  }\n};\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default connect(mapStateToProps, null)(TimeLine);","/home/ubuntu/environment/jobslab-web/src/components/profile/SkillTag/index.js",["2714","2715","2716","2717","2718","2719"],"import React, {Component} from \"react\";\r\nimport Widget from \"components/Widget\";\r\nimport IconButton from '@material-ui/core/IconButton'\r\n//import WidgetHeader from \"components/WidgetHeader/index\";\r\nimport Button from '@material-ui/core/Button';\r\nimport SkillEdit from './SkillEdit';\r\n//import Chip from '@material-ui/core/Chip';\r\n\r\nclass SkillTag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.isEdit)\r\n      this.setState({ isEdit: this.props.isEdit });\r\n  }\r\n  \r\n  editCancel = () => {\r\n    this.setState({ isEdit: false })\r\n  }\r\n  \r\n  render() {\r\n    const userRole = this.props.userRole;\r\n    const { speciality, /*skill,*/ language } = this.props.candidateData;\r\n    const { getUserData } = this.props;\r\n    const { isEdit } = this.state;\r\n    const { isUploadEdit, cancelUploadEdit, uploadedCV } = this.props;\r\n    \r\n    return (\r\n      <div className=\"jr-entry-sec\">\r\n        <Widget styleName=\"jr-card-profile\">\r\n          <div className=\"d-flex\">\r\n            <h3 className=\"card-title mr-auto mb-1 mb-md-3\">Specialities and Languages</h3>\r\n            { (userRole==\"candidate\" || userRole==\"admin\") && !isEdit &&\r\n              <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => this.setState({ isEdit: true })}>\r\n                <i class=\"zmdi zmdi-edit\"/>\r\n              </IconButton>\r\n            }\r\n          </div>\r\n          \r\n          { (userRole==\"candidate\" || userRole==\"admin\") && isUploadEdit && \r\n            <div className=\"border border-info rounded w-100 p-2 mb-2\">\r\n              <h3 className=\"card-heading text-info\">Extracted from Resume</h3>\r\n              <SkillEdit isUploadEdit={isUploadEdit} candidateData={this.props.candidateData} specData={uploadedCV && uploadedCV.speciality} /*skillData={uploadedSkill}*/ langData={uploadedCV && uploadedCV.language} cancel={cancelUploadEdit} refresh={getUserData} />\r\n            </div>\r\n          }\r\n          \r\n          { (userRole==\"candidate\" || userRole==\"admin\") && isEdit && !isUploadEdit ? \r\n            <SkillEdit candidateData={this.props.candidateData} cancel={this.editCancel} refresh={getUserData} />\r\n            :\r\n            <div>\r\n              <p>Specialities</p>\r\n              <ul className=\"list-inline list-inline-3\">\r\n                {speciality.map((spec, index) =>\r\n                  <li key={index} className=\"list-inline-item mr-0 mb-2\">\r\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\">{spec}</Button>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              \r\n              {/*<p>Other Skills</p>\r\n              <ul className=\"list-inline list-inline-3\">\r\n                {skill.map((skill, index) =>\r\n                  <li key={index} className=\"list-inline-item mr-0 mb-2\">\r\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\">{skill}</Button>\r\n                  </li>\r\n                )}\r\n              </ul>*/}\r\n              \r\n              <p>Languages</p>\r\n              <ul className=\"list-inline list-inline-3\">\r\n                {language.map((lang, index) =>\r\n                  <li key={index} className=\"list-inline-item mr-0 mb-2\">\r\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\">{lang.name}</Button>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          }\r\n        </Widget>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default SkillTag;","/home/ubuntu/environment/jobslab-web/src/components/profile/Contact/index.js",["2720","2721","2722","2723"],"import React, {Component} from \"react\";\r\nimport Widget from \"components/Widget\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactEdit from \"./ContactEdit\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n    };\r\n  }\r\n  \r\n  editCancel = () => {\r\n    this.setState({ isEdit: false });\r\n  }\r\n\r\n  render(){\r\n    //const classes = useStyles();\r\n    const { isEdit } = this.state;\r\n    const userRole = this.props.userRole;\r\n    const { email, phone } = this.props.userData;\r\n    const { getUserData } = this.props;\r\n    return (\r\n      <Widget styleName=\"jr-card-profile-sm\">\r\n        <div className=\"d-flex\">\r\n          <h3 className=\"card-title mr-auto mb-1 mb-md-3\">Contact</h3>\r\n          { (userRole==\"candidate\" || userRole==\"admin\") && !isEdit &&\r\n            <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => this.setState({ isEdit: true })}>\r\n              <i class=\"zmdi zmdi-edit\"/>\r\n            </IconButton>\r\n          }\r\n        </div>\r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isEdit \r\n          ?\r\n          <ContactEdit userData={this.props.userData} cancel={this.editCancel} refresh={getUserData}/>\r\n          :\r\n          <div>\r\n            <div className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\r\n              <div className=\"mr-3\">\r\n                <i className={`zmdi zmdi-email jr-fs-xxl text-grey`}/>\r\n              </div>\r\n              <div className=\"media-body\">\r\n                <div>\r\n                  <span className=\"mb-0 text-grey jr-fs-sm\">Email</span>\r\n                  <p className=\"mb-0\"><a className=\"jr-link\" href={\"mailto:\"+email}>{email}</a></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\r\n              <div className=\"mr-3\">\r\n                <i className={`zmdi zmdi-phone jr-fs-xxl text-grey`}/>\r\n              </div>\r\n              <div className=\"media-body\">\r\n                <div>\r\n                  <span className=\"mb-0 text-grey jr-fs-sm\">Phone</span>\r\n                  <p className=\"mb-0\"><a className=\"jr-link\" href={phone==null ? \"\" : \"tel:\"+phone.dial+phone.number}>\r\n                    {phone==null ? \"N/A\" : phone.dial+\" \"+phone.number}\r\n                  </a></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<div className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\r\n              <div className=\"mr-3\">\r\n                <i className={`zmdi zmdi-link jr-fs-xxl text-grey`}/>\r\n              </div>\r\n              <div className=\"media-body\">\r\n                <span className=\"mb-0 text-grey jr-fs-sm\">LinkedIn Profile</span>\r\n                <p className=\"mb-0\"><a className=\"jr-link\" href=\"https://www.linkedin.com\">https://www.linkedin.com</a></p>\r\n              </div>\r\n            </div>*/}\r\n            {/*contactList.map((data, index) =>\r\n              <div key={index} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\r\n                <div className=\"mr-3\">\r\n                  <i className={`zmdi zmdi-${data.icon} jr-fs-xxl text-grey`}/>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                  <span className=\"mb-0 text-grey jr-fs-sm\">{data.title}</span>\r\n                  <p className=\"mb-0\">{data.desc}</p>\r\n                </div>\r\n              </div>\r\n            )*/}\r\n          </div>\r\n        }\r\n      </Widget>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Biography/index.js",["2724","2725","2726","2727","2728","2729","2730"],"import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport axios from 'axios';\r\nimport Widget from \"components/Widget\";\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Textarea from 'react-textarea-autosize';\r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport * as notification from 'actions/Notification';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Biography extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      \r\n      newDescription: '',\r\n      uploadedDescription: null,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.isEdit)\r\n      this.setState({ isEdit: this.props.isEdit });\r\n    if (this.props.candidateData)\r\n      this.setState({ \r\n        newDescription: this.props.candidateData.description \r\n      });\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) { //For Upload CV\r\n    console.log(this.props.uploadedCV)\r\n    if (this.props.uploadedCV !== prevProps.uploadedCV) \r\n      this.setState({ uploadedDescription: this.props.uploadedCV.description });\r\n  }\r\n  \r\n  editSave = (description) => {\r\n    const data = {\r\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\r\n      description,\r\n    }\r\n    \r\n    axios.post('/api/candidates/set/profile/description/update', data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        this.props.getUserData();\r\n        //this.props.requestInitUser();\r\n        this.setState({ isEdit: false });\r\n        notification.success(\"Your Profile has been updated successfully.\");\r\n        this.props.cancelUploadEdit();\r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  editCancel = () => {\r\n    this.setState({\r\n      isEdit: false,\r\n      newDescription: this.props.candidateData.description\r\n    })\r\n  }\r\n  \r\n  textboxChange = (e) => {\r\n    this.setState({ \r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const userRole = this.props.userRole;\r\n    const { description } = this.props.candidateData;\r\n    const { isUploadEdit, cancelUploadEdit } = this.props;\r\n    const { isEdit, newDescription, uploadedDescription } = this.state;\r\n    \r\n    return (\r\n      <Widget styleName=\"jr-card-profile\">\r\n        <div className=\"d-flex\">\r\n          <h3 className=\"card-title mr-auto mb-1 mb-md-3\">Biography</h3>\r\n          { (userRole==\"candidate\" || userRole==\"admin\") && !isEdit && !isUploadEdit && \r\n            <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => this.setState({ isEdit: true })}>\r\n              <i class=\"zmdi zmdi-edit\"/>\r\n            </IconButton>\r\n          }\r\n        </div>\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isUploadEdit &&\r\n          <div className=\"border border-info rounded w-100 p-2 mb-2\">\r\n            <h3 className=\"card-heading text-info\">AI Generated</h3>\r\n            <TextField\r\n              className=\"jobTextArea\"\r\n              name=\"uploadedDescription\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              multiline={true}\r\n              variant=\"outlined\"\r\n              value={uploadedDescription}\r\n              onChange={this.textboxChange}\r\n              />\r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={() => this.editSave(uploadedDescription)}>Replace</Button>\r\n            <Button className=\"mt-2 mr-2 mr-auto\" onClick={cancelUploadEdit}>Cancel</Button>\r\n          </div>\r\n        }\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isEdit && !isUploadEdit\r\n          ?\r\n          <div>\r\n            <TextField\r\n              className=\"jobTextArea\"\r\n              name=\"newDescription\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              multiline={true}\r\n              variant=\"outlined\"\r\n              value={newDescription}\r\n              onChange={this.textboxChange}\r\n              />\r\n                {/*\r\n                <Textarea useCacheForDOMMeasurements className=\"w-100\" name=\"newDescription\" placeholder=\"Please input your description...\" value={newDescription} onChange={this.textboxChange} />\r\n                */}\r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={() => this.editSave(newDescription)}>Save</Button>\r\n            <Button className=\"mt-2 mr-2\" onClick={this.editCancel}>Cancel</Button>\r\n          </div>\r\n          :\r\n          description && description.split(\"\\n\").map((text, index) => (\r\n \t\t\t\t\t  <p key={index}>{text}</p>\r\n \t\t\t\t\t))\r\n        }\r\n      </Widget>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  requestInitUser,\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Biography));\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/About/index.js",["2731","2732","2733","2734","2735","2736"],"import React from \"react\";\nimport Widget from \"components/Widget/index\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AboutEdit from \"./AboutEdit\";\nimport AboutItem from \"./AboutItem\";\nimport { numberWithCommas } from 'actions/Function.js';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n    };\n  }\n  \n  editCancel = () => {\n    this.setState({ isEdit: false })\n  }\n  \n  render() {\n    const userRole = this.props.userRole;\n    const { address, location, openToRelocation, industry, subIndustry, salary, bonus, experience, noticePeriod, openToOpportunity } = this.props.candidateData;\n    const { getUserData } = this.props;\n    const { isEdit } = this.state;\n    const { uploadedCV, isUploadEdit, cancelUploadEdit } = this.props;\n    \n    return (\n      <Widget styleName=\"jr-card-full jr-card-tabs-right jr-card-profile\">\n        <div className=\"card-header d-flex\">\n          <h4 className=\"card-title mr-auto mt-2 mb-1\">About</h4>\n          { (userRole==\"candidate\" || userRole==\"admin\") && !isEdit &&\n            <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => this.setState({ isEdit: true })}>\n              <i className=\"zmdi zmdi-edit\"/>\n            </IconButton>\n          }\n        </div>\n        <div className=\"jr-tabs-classic\">\n          <div className=\"jr-tabs-content jr-task-list\">\n          { (userRole==\"candidate\" || userRole==\"admin\") && isUploadEdit && \n            <div className=\"border border-info rounded w-100 p-2 mb-2\">\n              <h3 className=\"card-heading text-info\">Extracted from Resume</h3>\n              <AboutEdit isUploadEdit={isUploadEdit} candidateData={this.props.candidateData} locData={uploadedCV && uploadedCV.location} indData={uploadedCV && uploadedCV.industry} expData={uploadedCV && uploadedCV.experience} cancel={cancelUploadEdit} refresh={getUserData} />\n            </div>\n          }\n          \n          { (userRole==\"candidate\" || userRole==\"admin\") && isEdit && !isUploadEdit ?\n            <AboutEdit candidateData={this.props.candidateData} cancel={this.editCancel} refresh={getUserData} />\n            :\n            <div className=\"row\">\n              {/*<div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Work At\", icon: \"city-alt\", desc: [company]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Went to\", icon: \"graduation-cap\", desc: [education[0].institutionName]} }/>\n              </div>*/}\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Lives in\", icon: \"home\", desc: [(address && address.city ? address.city+\", \" : \"\") + (location ? location.name : \"\")]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Industry\", icon: \"case\", desc: [industry && industry.name]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Job Function\", icon: \"wrench\", desc: [subIndustry && subIndustry.name]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Relocation\", icon: \"globe\", desc: [openToRelocation ? \"Open\" : \"Not Open\"]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Monthly Salary (HKD)\", icon: \"money-box\", desc: [salary && \"$\"+numberWithCommas(salary)]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Most Recent Bonus (HKD)\", icon: \"card-giftcard\", desc: [bonus && \"$\"+numberWithCommas(bonus)]} }/>\n              </div>\n              <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                <AboutItem data={ { title: \"Year of Experience\", icon: \"time\", desc: [experience]} }/>\n              </div>\n              { openToOpportunity &&\n                <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <AboutItem data={ { title: \"Notice Period (in Months)\", icon: \"calendar-note\", desc: [noticePeriod]} }/>\n                </div>\n              }\n            </div>\n          }\n          </div>\n        </div>\n      </Widget>\n    );\n  }\n}\n\n\nexport default About;\n","/home/ubuntu/environment/jobslab-web/src/components/profile/ProfileHeader/index.js",["2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747","2748","2749"],"import React, {Component} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Link as ScrollLink } from 'react-scroll';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\n//import Avatar from '@material-ui/core/Avatar';\nimport Avatar from 'react-avatar';\nimport { store } from 'react-notifications-component';\nimport { requestInitUser } from 'actions/Auth';  \nimport { numberWithCommas } from 'actions/Function.js';\n\nimport UploadButton from \"components/UploadButton\";\nimport ProfilePictureEdit from 'components/popup/ProfilePictureEdit';\n\nclass ProfileHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //isEdit: false,\n      isProfileEdit: false,\n      //isUploadLoading: false,\n      isDownloadLoading: false,\n      \n      //newFirstName: '',\n      //newLastName: '',\n      newPicturlUrl: '',\n      image:'',\n      isOpenDragDropImgPop: false,\n      isOpenChangeImgPop: false,\n      imagescale: 1\n    };\n  }\n  \n  componentDidMount() {\n    if (this.props.userData)\n      this.setState({\n        //newFirstName: this.props.userData.name && this.props.userData.name.firstName,\n        //newLastName: this.props.userData.name && this.props.userData.name.lastName,\n        newPictureUrl: this.props.userData.name.pictureUrl,\n      })\n  }\n  \n  /*textboxChange = (e) => {\n    this.setState({ \n      [e.target.name]: e.target.value\n    });\n  }*/\n  \n  handleDrop = dropped => {\n    this.setState({ newPictureUrl: dropped[0] })\n  }\n  \n  /*editSave = () => {\n    const data = {\n      firstName: this.state.newFirstName,\n      lastName: this.state.newLastName,\n    };\n    axios.post('/api/users/set/profile/name/update', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        this.props.requestInitUser();\n        this.setState({ isEdit: false });\n        \n        store.addNotification({\n          title: \"Success\",\n          message: \"Your Profile has been updated successfully\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"bottom-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            //onScreen: true\n          }\n        });\n      }\n      else {\n        alert(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  editCancel = () => {\n    this.setState({\n      isEdit: false,\n      newFirstName: this.props.userData.name && this.props.userData.name.firstName,\n      newLastName: this.props.userData.name && this.props.userData.name.lastName,\n    })\n  }*/\n  \n  cvUpload = (e) => {\n    console.log(\"Start to upload CV\");\n    e.preventDefault();\n      \n    let cvFile = e.target.files[0]\n    console.log(e.target.files);\n    this.props.cvUpload(cvFile);\n    e.target.value = null;\n  }\n  \n  cvDownload = () => {\n    this.setState({ isDownloadLoading: true });\n    console.log(\"Start to download CV\");\n    //console.log(this.state.candId)\n    if(this.props.candidateData) {\n      var data = {};\n      if (this.props.history.location.pathname.includes(\"/applicant\"))\n        data = { token: this.props.match.params.token }\n      else \n        data = { candId: this.props.candidateData._id }\n      axios({\n        url: '/api/candidates/set/resume/download',//'/api/gen/getCV',\n        method: 'POST',\n        data: data,\n        responseType: 'blob', // important\n      }).then((response) => {\n        this.setState({ isDownloadLoading: false });\n        var filename = null;\n        var disposition = response.headers['content-disposition'];\n        if (disposition && disposition.indexOf('attachment') !== -1) {\n          var filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n          var matches = filenameRegex.exec(disposition);\n          if (matches != null && matches[1]) { \n            filename = matches[1].replace(/['\"]/g, '');\n          }\n        }\n        if(filename)\n        {\n          var url = window.URL.createObjectURL(new Blob([response.data]));\n          var link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', filename);\n          document.body.appendChild(link);\n          link.click();\n          //clean element\n          document.body.removeChild(link);\n      　　window.URL.revokeObjectURL(url);\n        }\n        else\n        {\n          this.setState({ isDownloadLoading: false });\n          alert(\"Error! Cannot download CV.\");\n        }\n      }).catch((error) => {\n        this.setState({ isDownloadLoading: false });\n        alert(\"Cannot download CV. Please login again.\");\n      })\n    }\n    else\n    {\n      this.setState({ isDownloadLoading: false });\n      alert(\"Error! Cannot download CV.\");\n    }\n    \n  }\n  \n  closeProfilePictEdit =() => {\n    this.setState({ isProfileEdit: false });\n  }\n\n  \n  render() {\n    const userRole = this.props.userRole;\n    const { name, pictureUrl } = this.props.userData;\n    const { salary, experience, career } = this.props.candidateData;\n    const { /*isEdit, newFirstName, newLastName,*/ /*isUploadLoading,*/ isDownloadLoading } = this.state;\n    const { isUploadLoading } = this.props;\n\n    return (\n      <div className=\"jr-profile-banner blurish-green profile-photo-bg\"><div className=\"color-overlay\"></div>\n        <div className=\"jr-profile-container\">\n          <div className=\"jr-profile-banner-top\">\n            <div className=\"jr-profile-banner-top-left\">\n              <div className=\"jr-profile-banner-avatar\">\n              <div className={`profile ${(userRole==\"candidate\") ? \"propic-hover\" : \"\"}`}>\n                <Avatar \n                  round={ true } \n                  size={ 150 }\n                  style={ {margin: 2, boxShadow: '0px 0px 30px grey', backgroundColor: 'white', cursor: userRole==\"candidate\" ? 'pointer' : 'default'} }\n                  src={ pictureUrl } \n                  name={ name && name.firstName+\" \"+name.lastName } \n                  onClick={ () => userRole==\"candidate\" && this.setState({ isProfileEdit: true }) } \n                />\n                <div className=\"edit-propic profile\" onClick={ () => this.setState({ isProfileEdit: true }) }><h3><i className=\"zmdi zmdi-camera\"></i>&nbsp;Upload</h3></div>\n              </div>\n                {/*<Avatar className=\"size-90\" alt=\"...\" src='https://via.placeholder.com/124x106'/>*/}\n              </div>\n              <div className=\"jr-profile-banner-avatar-info\">\n                <h2 className=\"mb-2 jr-mb-sm-3 jr-fs-xxl jr-font-weight-light\">\n                  { name && name.firstName+\" \"+name.lastName }\n                  {/* !isEdit && name && name.firstName+\" \"+name.lastName }\n                  { isCandidate && !isEdit &&\n                    <IconButton className=\"icon-btn text-light mt-n2 mr-n2\" onClick={() => this.setState({ isEdit: true })}>\n                      <i className=\"zmdi zmdi-edit\"/>\n                    </IconButton>\n                  }\n                  { isCandidate && isEdit &&\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <TextField\n                          id=\"newFirstName\"\n                          name=\"newFirstName\"\n                          label=\"First Name\"\n                          value={newFirstName}\n                          onChange={this.textboxChange}\n                          fullWidth\n                          InputLabelProps={{\n                            style: { color: \"white\" },\n                          }}\n                          InputProps={{\n                            style: { color: \"white\" },\n                          }}\n                        />\n                      </div>\n                      <div className=\"col-6\">\n                        <TextField\n                          id=\"newLAstName\"\n                          name=\"newLastName\"\n                          label=\"Last Name\"\n                          value={newLastName}\n                          onChange={this.textboxChange}\n                          fullWidth\n                          InputLabelProps={{\n                            style: { color: \"white\" },\n                          }}\n                          InputProps={{\n                            style: { color: \"white\" },\n                          }}\n                        />\n                      </div>\n                      <div className=\"col-12\">\n                        <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\n                        <Button className=\"mt-2 mr-2 text-white\" onClick={this.editCancel}>Cancel</Button>\n                      </div>\n                    </div>\n                  */}\n                </h2>\n                <p className=\"mb-0 jr-fs-lg\">{career && (career.length>0 && career[0].jobTitle + \" at \" + career[0].company)} </p>\n                {/*<span className=\"badge badge-info badge-pill d-inline-block mt-2 px-3\"><i class=\"fas fa-unlock pr-1\"></i>Public</span>*/}\n                <span className=\"badge badge-secondary badge-pill d-inline-block mt-2 px-3\" style={{\"background-color\":\"#e06a92\"}}><i class=\"fas fa-lock pr-1\"></i>Private</span>\n              </div>\n            </div>\n            <div className=\"jr-profile-banner-top-right\">\n              <ul className=\"jr-follower-list\">\n                <li>\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">${salary ? numberWithCommas(salary) : \"-\"}</span>\n                  <span className=\"jr-fs-sm\">Monthly Salary</span></li>\n                <li>\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">{experience ? experience : \"-\"}</span>\n                  <span className=\"jr-fs-sm\">Years(s) Exp.</span></li>\n                <li>\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">{career && career.length}</span>\n                  <span className=\"jr-fs-sm\">Career Count</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"jr-profile-banner-bottom\">\n            <div className=\"jr-tab-list\">\n              <ul className=\"jr-navbar-nav\">\n                <li>\n                  <ScrollLink activeClass=\"active\" className=\"jr-link\" to=\"about\" spy={true} smooth={true} offset={-80} duration={500}>About</ScrollLink>\n                  {/*<span className=\"jr-link\">About</span>*/}\n                </li>\n                <li>\n                  <ScrollLink activeClass=\"active\" className=\"jr-link\" to=\"career\" spy={true} smooth={true} offset={-80} duration={500}>Career</ScrollLink>\n                </li>\n                <li>\n                  <ScrollLink activeClass=\"active\" className=\"jr-link\" to=\"education\" spy={true} smooth={true} offset={-80} duration={500}>Education</ScrollLink>\n                </li>\n                <li>\n                  <ScrollLink activeClass=\"active\" className=\"jr-link\" to=\"speciality\" spy={true} smooth={true} offset={-80} duration={500}>Speciality</ScrollLink>\n                </li>\n                <li>\n                  <ScrollLink activeClass=\"active\" className=\"jr-link\" to=\"introductionVideo\" spy={true} smooth={true} offset={-80} duration={500}>Intro-Video</ScrollLink>\n                </li>\n                {/*<li>\n                  <ScrollLink activeClass=\"active\" className=\"jr-link\" to=\"contact\" spy={true} smooth={true} offset={-80} duration={500}>Contact</ScrollLink>\n                </li>*/}\n              </ul>\n            </div>\n            <span className=\"jr-link jr-profile-setting\">\n              { (userRole==\"candidate\" || userRole==\"client\" || userRole==\"admin\") &&\n                <Button className=\"jr-btn jr-btn-lg text-white\" onClick={this.cvDownload}>\n                { isDownloadLoading ?\n                  <CircularProgress color=\"secondary\" size={20} className=\"mr-2\" />\n                  :\n                  <i className=\"zmdi zmdi-download zmdi-hc-fw\"/>\n                }\n                  <span>Download CV</span>\n                </Button>\n              }\n              { (userRole==\"candidate\" || userRole==\"admin\") && <UploadButton name=\"Upload CV\" accept=\".doc,.docx,.pdf\" isLoading={isUploadLoading} onChange={this.cvUpload} /> }\n            </span>\n            {/*<span className=\"jr-link jr-profile-setting\">\n              <i className=\"zmdi zmdi-settings mr-2\"/>\n              <span className=\"d-inline-flex align-middle ml-1 jr-ml-sm-0\" onClick={this.props.editProfile}>Edit Profile</span>\n            </span>*/}\n          </div>\n        </div>\n        \n        <ProfilePictureEdit isProfileEdit={this.state.isProfileEdit} closeModal={this.closeProfilePictEdit} />\n      </div>\n    )\n  }\n}\n\n/*const mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default connect(null, mapDispatchToProps)(ProfileHeader);*/\nexport default withRouter(ProfileHeader);\n\n","/home/ubuntu/environment/jobslab-web/src/components/settings/PhoneChange.js",[],"/home/ubuntu/environment/jobslab-web/src/components/settings/PasswordChange.js",["2750","2751","2752"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Widget from \"components/Widget\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport * as notification from 'actions/Notification';\n\nclass PasswordChange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n      newPassword2: '',\n      \n      isPasswordCorrect: true,\n      isNewPasswordLong: true,\n    };\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value }, () => {\n      this.inputValidate(name);\n    });\n  }\n  \n  inputValidate = (name) => {\n    switch (name) {\n      case 'newPassword':\n        this.setState({ isNewPasswordLong: this.state.newPassword.length>=8 ? true : false });\n        break;\n    }\n  }\n  \n  editSave = () => {\n    const data = {\n      oldPassword: this.state.oldPassword,\n      newPassword: this.state.newPassword,\n      newPassword2: this.state.newPassword2,\n    };\n    axios.post('/api/users/set/password/change', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"Your name has been updated successfully.\");\n        this.setState({\n          oldPassword: '',\n          newPassword: '',\n          newPassword2: '',\n        }, () => {\n          if (res.data.isPasswordCorrect!=null)\n          this.setState({ isPasswordCorrect: true });\n        });\n      }\n      else {\n        notification.error(res.data.msg);\n        if (res.data.isPasswordCorrect!=null)\n          this.setState({ isPasswordCorrect: false });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const { oldPassword, newPassword, newPassword2 } = this.state;\n    const { isPasswordCorrect, isNewPasswordLong } = this.state;\n    \n    return (\n      <Widget styleName=\"jr-card-profile\">\n        <div className=\"mb-12\">\n          <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Change Password</h3>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-md-12 mb-md-4\">\n            <TextField\n              name=\"oldPassword\"\n              label=\"Old Password\"\n              type=\"password\"\n              fullWidth\n              placeholder=\"******\"\n              //variant=\"outlined\"\n              value={oldPassword}\n              onChange={this.textboxChange}\n              error={!isPasswordCorrect}\n              helperText={!isPasswordCorrect && \"The password is not correct.\"}\n            />\n          </div>\n          \n          <div className=\"col-md-12 mb-md-4\">\n            <TextField\n              name=\"newPassword\"\n              label=\"New Password\"\n              type=\"password\"\n              //error={isPasswordMismatch}\n              fullWidth\n              placeholder=\"******\"\n              //variant=\"outlined\"\n              value={newPassword}\n              onChange={this.textboxChange}\n              error={!isNewPasswordLong}\n              helperText={!isNewPasswordLong && \"Password must be at least 8 characters long.\"}\n            />\n          </div>\n                        \n          <div className=\"col-md-12 mb-md-4\">\n            <TextField\n              name=\"newPassword2\"\n              label=\"Confirm New Password\"\n              type=\"password\"\n              fullWidth\n              placeholder=\"******\"\n              //variant=\"outlined\"\n              value={newPassword2}\n              onChange={this.textboxChange}\n              error={!(newPassword==newPassword2)}\n              helperText={!(newPassword==newPassword2) && \"Password mismatch.\"}\n            />\n          </div>\n          \n          <div className=\"col-12 mt-2 mb-2 d-flex\">\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\n          </div>\n\n        </div>\n      </Widget>\n    );\n  }\n}\n\nexport default PasswordChange;\n","/home/ubuntu/environment/jobslab-web/src/components/settings/NameChange.js",["2753","2754"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Widget from \"components/Widget\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { requestInitUser } from 'actions/Auth';  \nimport * as notification from 'actions/Notification';\n\nclass NameChange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n    };\n  }\n  \n  componentDidMount() {\n    if (this.props.userData)\n      this.setState({\n        firstName: this.props.userData.name && this.props.userData.name.firstName,\n        lastName: this.props.userData.name && this.props.userData.name.lastName,\n      })\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n  \n  editSave = () => {\n    const data = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n    };\n    axios.post('/api/users/set/profile/name/update', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        notification.success(\"Your name has been updated successfully.\");\n        this.props.requestInitUser();\n        this.setState({ isEdit: false });\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const { firstName, lastName } = this.state;\n    const { isFirstNameInput, isLastNameInput } = this.state;\n    \n    return (\n      <Widget styleName=\"jr-card-profile\">\n        <div className=\"mb-12\">\n          <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Change Name</h3>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-md-6 mb-md-4\">\n            <TextField\n              id=\"firstName\"\n              name=\"firstName\"\n              label=\"First Name\"\n              value={firstName}\n              onChange={this.textboxChange}\n              fullWidth\n              error={!firstName}\n              helperText={!firstName && \"Please input First Name.\"}\n              /*InputLabelProps={{\n                style: { color: \"white\" },\n              }}\n              InputProps={{\n                style: { color: \"white\" },\n              }}*/\n            />\n          </div>\n          \n          <div className=\"col-md-6 mb-md-4\">\n            <TextField\n              id=\"lastName\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              value={lastName}\n              onChange={this.textboxChange}\n              fullWidth\n              error={!lastName}\n              helperText={!lastName && \"Please input Last Name.\"}\n              /*InputLabelProps={{\n                style: { color: \"white\" },\n              }}\n              InputProps={{\n                style: { color: \"white\" },\n              }}*/\n            />\n          </div>\n                        \n          <div className=\"col-12 mt-2 mb-2 d-flex\">\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\n          </div>\n\n        </div>\n      </Widget>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userData } = state.auth;\n  return { userData };\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameChange);\n","/home/ubuntu/environment/jobslab-web/src/components/settings/ProfilePictureChange.js",["2755","2756","2757","2758"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Widget from \"components/Widget\";\nimport Avatar from 'react-avatar';\nimport ProfilePictureEdit from 'components/popup/ProfilePictureEdit';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport InputRange from 'react-input-range';\nimport Button from '@material-ui/core/Button';\nimport { dataURItoBlob } from 'util/functions.js';\nimport { requestInitUser } from 'actions/Auth';\n\nimport 'react-input-range/lib/css/index.css';\nimport * as notification from 'actions/Notification';\n\nclass ProfilePictureChange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProfileEdit: false,\n      \n      image:'',\n      isOpenChangeImgPop: false,\n      imagescale: 1\n    };\n  }\n  \n  changeImgPop = (dragDropPop, changeImgPop) => {\n    this.setState({\n      isOpenDragDropImgPop: dragDropPop,\n      isOpenChangeImgPop: changeImgPop\n    })\n  }\n  \n  handleDrop = dropped => {\n    this.setState({ newPictureUrl: dropped[0] })\n  }\n\n  submitProfilePic = () =>{\n    const canvas = this.editor.getImageScaledToCanvas().toDataURL();\n    var blobImg = dataURItoBlob(canvas);\n    //this.props.updateProfilePic(blobImg);\n    const formData = new FormData();\n    formData.append('file', blobImg);\n    \n    axios.post('/api/users/set/picture/upload', formData)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"Your profile picture has been updated successfully.\");\n        console.log(res.data);\n        //alert(\"The picture has been uploaded to S3!\");\n        this.props.requestInitUser();\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  setEditorRef = (editor) => this.editor = editor;\n  \n  \n  \n  closeProfilePictEdit =() => {\n    this.setState({ isProfileEdit: false });\n  }\n\n  render() {\n    const { name, pictureUrl } = this.props.userData;\n    const { isProfileEdit } = this.state;\n    \n    return (\n      <Widget styleName=\"jr-card-profile\">\n        <div className=\"mb-2\">\n          <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Change Profile Picture</h3>\n        </div>\n        \n        {/*<div className=\"dropzone-card ml-auto mr-auto\">\n          <Dropzone className=\"dropzone\" onDrop={acceptedFiles => {this.setState({image:acceptedFiles[0]}); this.changeImgPop(false,true); }}>\n            {({getRootProps, getInputProps}) => (\n              <section style={{'width':'270px','height':'270px'}}>\n                <div {...getRootProps({style:{'top':'15%','position': 'relative', margin: 0}, className: 'dropzone-file-btn'})}>\n                  <input {...getInputProps()} />\n                  <p>Drag and drop image here, or click to select image.</p>\n                </div>\n              </section>\n            )}\n          </Dropzone>\n        </div>\n         {this.state.isOpenChangeImgPop &&\n          <div className=\"ml-auto mr-auto\">\n            <AvatarEditor\n              ref={this.setEditorRef}\n              style={{'background':'gray'}}\n              image={ this.state.image } \n              width={250}\n              height={250}\n              border={10}\n              color={[255, 255, 255, 0.6]} // RGBA\n              scale={this.state.imagescale}\n              rotate={0}\n            />\n            <span style={{'display':'block','color':'white'}}>\n            Scale:\n              <InputRange\n  \t \t\t\t\t  step={0.1}\n              maxValue={2}\n              minValue={1}\n              value={this.state.imagescale}\n              onChange={imagescale => { this.setState({imagescale: Math.round( imagescale * 10 ) / 10 })}} />\n            </span>\n            <span>\n              <Button style={{'display':'grid','width':'100%'}} color=\"primary\" className=\"jr-btn jr-btn-lg text-white bg-primary\" onClick={(e) => this.submitProfilePic()}>\n                Submit\n              </Button> \n            </span>\n          </div>\n         }*/}\n        \n        <div className=\"propic-hover profile ml-auto mr-auto\">\n          <Avatar \n            round={ true } \n            size={ 150 }\n            style={ {margin: 2, boxShadow: '0px 0px 30px grey', backgroundColor: 'white', cursor: 'pointer'} }\n            src={ pictureUrl } \n            name={ name && name.firstName+\" \"+name.lastName } \n            onClick={ () => this.setState({ isProfileEdit: true }) } \n          />\n          <div className=\"edit-propic profile settings\" onClick={ () => this.setState({ isProfileEdit: true }) }><h3><i className=\"zmdi zmdi-camera\"></i>&nbsp;Upload</h3></div>\n        </div>\n        \n        <ProfilePictureEdit isProfileEdit={isProfileEdit} closeModal={this.closeProfilePictEdit} />\n      </Widget>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userData } = state.auth;\n  return { userData };\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePictureChange);\n","/home/ubuntu/environment/jobslab-web/src/components/register/RegisterConfirmAdmin.js",["2759","2760","2761"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport * as notification from 'actions/Notification';\r\n\r\nclass RegisterConfirmAdmin extends React.Component {\r\n  state = {\r\n  };\r\n  \r\n  componentDidMount() {\r\n  }\r\n\r\n  \r\n  tickboxChange = (e) => {\r\n    this.setState({ \r\n      [e.target.name]: e.target.checked\r\n    }, () => {\r\n      console.log(this.state.isAgreeTC)\r\n    });\r\n  }\r\n  \r\n  formSubmit = () => {\r\n    const data = {\r\n      user: this.props.userData\r\n    }\r\n    axios.post('/api/admins/set/candidate/complete', data)\r\n    .then(res => {\r\n      if (res.data.isSuccess) {\r\n        notification.success(\"Email has been sent to notice new user.\");\r\n        this.props.history.push('/admin/candidatelist');\r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { activeStep, handleBack } = this.props;\r\n    const { userData } = this.props;\r\n    const { isAgreeTC } = this.state;\r\n\r\n    return (\r\n      <div className=\"tab-pane\" id=\"tab2-4\">\r\n        <h3 className=\"title text-primary\">Candidate Create Complete</h3>\r\n        <p>\r\n          {userData.name && (userData.name.firstName + \" \" + userData.name.lastName)}'s candidate profile has been completed. \r\n          To continue, click Finish button below to send notification email to inform candidate's new user account. \r\n          Candidate will be asked to reset their password before first login.  \r\n        </p>\r\n        {/*<p>You’re almost there! Simply complete your profile and our AI will instantly start matching you with great jobs!</p>\r\n        <p>By creating an account, you agree to JobsLab’s Terms of Use and that you have read the Data Policy and Cookie Use.</p>*/}\r\n        <div className=\"d-flex\">\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            className=\"ml-auto mr-2\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.formSubmit}>\r\n            Finish\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RegisterConfirmAdmin);","/home/ubuntu/environment/jobslab-web/src/components/register/ProfilePicture.js",["2762","2763"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from 'react-avatar';\r\nimport ProfilePictureEdit from 'components/popup/ProfilePictureEdit';\r\nimport * as notification from 'actions/Notification';\r\n\r\nclass ProfilePicture extends React.Component {\r\n  state = {\r\n    pictureUrl: '',\r\n    isProfileEdit: false,\r\n  };\r\n  \r\n  componentDidMount() {\r\n  }\r\n  \r\n  closeProfilePictEdit = () => {\r\n    this.setState({ isProfileEdit: false });\r\n  }\r\n  \r\n  render() {\r\n    const { name, pictureUrl } = this.props.userData;\r\n    const { activeStep, handleBack, handleNext } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"propic-hover\">\r\n                <Avatar \r\n                  round={ true } \r\n                  size={ 250 }\r\n                  style={ {margin: 2, boxShadow: '0px 0px 30px grey', backgroundColor: 'white', cursor: 'pointer'} }\r\n                  src={ pictureUrl } \r\n                  name={ name.firstName+\" \"+name.lastName } \r\n                  onClick={ () => this.setState({ isProfileEdit: true }) }\r\n                />\r\n                <div class=\"edit-propic settings\" onClick={ () => this.setState({ isProfileEdit: true }) }><h3><i class=\"zmdi zmdi-camera\"></i>&nbsp;Upload</h3></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 register-text\">\r\n              <h3 className=\"register-title\">Upload a Profile Picture</h3>\r\n              <h3>Complete you profile with a good looking photo to </h3>\r\n              <h3>make your profile more attractive to employers.</h3>\r\n            </div>\r\n          </div>\r\n        <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\r\n        <div className=\"d-flex\">\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            className=\"ml-auto mr-2\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <ProfilePictureEdit isProfileEdit={this.state.isProfileEdit} closeModal={this.closeProfilePictEdit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePicture;","/home/ubuntu/environment/jobslab-web/src/components/register/DetailInfo.js",["2764","2765","2766","2767","2768","2769"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Widget from \"components/Widget\";\r\nimport Biography from 'components/profile/Biography';\r\nimport Career from 'components/profile/Career';\r\nimport Education from 'components/profile/Education';\r\nimport SkillTag from 'components/profile/SkillTag';\r\nimport UploadButton from \"components/UploadButton\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport * as notification from 'actions/Notification';\r\nimport UploadCV from 'components/register/UploadCV';\r\n\r\nclass DetailInfo extends React.Component {\r\n  state = {\r\n    careerIsAdd: true,\r\n    eduIsAdd: true,\r\n    \r\n    isUploadLoading: false,\r\n    isUploadSuccess: false,\r\n    uploadedCV: null,\r\n    \r\n    isUploadedCareerEdit: [],\r\n    isUploadedEducationEdit: [],\r\n    isUploadedDescriptionEdit: false,\r\n    isUploadedSpecialityEdit: false,\r\n  };\r\n  \r\n  componentDidMount() {\r\n    if (this.props.candidateData) {\r\n      if (this.props.candidateData.career && this.props.candidateData.career.length > 0)\r\n        this.setState({ careerIsAdd: false });\r\n      if (this.props.candidateData.education && this.props.candidateData.education.length > 0)\r\n        this.setState({ eduIsAdd: false });\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) { \r\n    if (this.props.candidateData !== prevProps.candidateData) {\r\n      if (this.props.candidateData.career && this.props.candidateData.career.length > 0)\r\n        this.setState({ careerIsAdd: false });\r\n      if (this.props.candidateData.education && this.props.candidateData.education.length > 0)\r\n        this.setState({ eduIsAdd: false });\r\n    }\r\n  }\r\n  \r\n  cvUpload = (acceptedFiles) => {\r\n    //let cvFile = e.target.files[0];\r\n    let cvFile = acceptedFiles[0];\r\n    this.setState({ isUploadLoading: true });\r\n    \r\n    const formData = new FormData();\r\n    if (cvFile != null) {\r\n      formData.append('cvFile', cvFile);\r\n      console.log('start to upload cv');\r\n      axios.post('/api/candidates/set/resume/upload', formData)\r\n      .then(res => {\r\n        if (res.data.isSuccess) {\r\n          //alert(\"CV auto-filled. Remember to SAVE your resume after modification.\");\r\n          console.log(res.data.cvDataParsed)\r\n          this.setState({ \r\n            careerIsAdd: false,\r\n            eduIsAdd: false, \r\n            \r\n            isUploadLoading: false,\r\n            isUploadSuccess: true,\r\n            \r\n            uploadedCV: (res.data.cvDataParsed==null) ? null : res.data.cvDataParsed,\r\n            isUploadedCareerEdit: (res.data.cvDataParsed.career==null) ? [] : new Array(res.data.cvDataParsed.career.length).fill(true),\r\n            isUploadedEducationEdit: (res.data.cvDataParsed.education==null) ? [] : new Array(res.data.cvDataParsed.education.length).fill(true),\r\n            isUploadedDescriptionEdit: true,\r\n            isUploadedSpecialityEdit: true,\r\n          });\r\n        }\r\n        else {\r\n          this.setState({ isUploadLoading: false });\r\n          notification.error(res.data.msg);\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        this.setState({ isUploadLoading: false });\r\n        console.log(err);\r\n        //e.preventDefault();\r\n      });\r\n    }\r\n  }\r\n  \r\n  cancelUploadCareer = (index) => {\r\n    let array = [...this.state.isUploadedCareerEdit];\r\n    if (index !== -1) {\r\n      array[index] = false;\r\n      this.setState({isUploadedCareerEdit: array});\r\n    }\r\n  }\r\n  \r\n  cancelUploadEducation = (index) => {\r\n    let array = [...this.state.isUploadedEducationEdit];\r\n    if (index !== -1) {\r\n      array[index] = false;\r\n      this.setState({isUploadedEducationEdit: array});\r\n    }\r\n  }\r\n  \r\n  cancelUploadDescription = () => {\r\n    this.setState({ isUploadedDescriptionEdit: false })\r\n  }\r\n  \r\n  cancelUploadSpeciality = () => {\r\n    this.setState({ isUploadedSpecialityEdit: false })\r\n  }\r\n  \r\n  nextStep = () => {\r\n    var candidateData = this.props.candidateData;\r\n    //if (candidateData.speciality && candidateData.speciality.length > 0 && candidateData.speciality.length < 11 && candidateData.language && candidateData.language.length > 0 && candidateData.language.length < 6 && candidateData.career.length > 0)\r\n    if (candidateData.career.length > 0)\r\n      this.props.handleNext();\r\n    else\r\n      notification.error(\"Please input and save career info to complete your profile.\")\r\n  }\r\n  \r\n  render() {\r\n    const { candidateData, getUserData } = this.props;\r\n    const { careerIsAdd, eduIsAdd } = this.state;\r\n    const { acceptedFiles,  isUploadLoading, isUploadSuccess } = this.state;\r\n    const { uploadedCV, isUploadedCareerEdit, isUploadedEducationEdit, isUploadedDescriptionEdit, isUploadedSpecialityEdit } = this.state;\r\n    const { activeStep, handleNext, handleBack } = this.props;\r\n    \r\n    return ( \r\n      <div className=\"tab-pane\" id=\"tab2-3\">\r\n        { !uploadedCV && <UploadCV isUploadLoading={isUploadLoading} cvUpload={this.cvUpload}/> }\r\n        <div className=\"row\">\r\n          {/*<div className=\"col-12\">\r\n            <UploadButton name=\"Upload CV\" accept=\".doc,.docx,.pdf\" isLoading={isUploadLoading} onChange={this.cvUpload} />\r\n          >*/}\r\n          {/*<div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <SkillTag isEdit={true} userRole={\"candidate\"} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedSpecialityEdit} cancelUploadEdit={this.cancelUploadSpeciality} getUserData={this.getUserData} />\r\n            </div>\r\n          </div>*/}\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <Biography isEdit={true} userRole={\"candidate\"} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedDescriptionEdit} cancelUploadEdit={this.cancelUploadDescription} getUserData={getUserData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <Career isAdd={careerIsAdd} userRole={\"candidate\"} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedCareerEdit} cancelUploadEdit={this.cancelUploadCareer} getUserData={getUserData} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <Education isAdd={eduIsAdd} userRole={\"candidate\"} candidateData={candidateData} uploadedCV={uploadedCV} isUploadEdit={isUploadedEducationEdit} cancelUploadEdit={this.cancelUploadEducation} getUserData={getUserData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\r\n        <div className=\"d-flex\">\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            className=\"ml-auto mr-2\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.nextStep}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <SweetAlert show={isUploadSuccess} success title={\"Congratulations!\"/*<IntlMessages id=\"sweetAlerts.goodJob\"/>*/}\r\n                    onConfirm={ () => this.setState({ isUploadSuccess: false }) }>\r\n          Your CV has been uploaded successfully.\r\n          {/*<IntlMessages id=\"sweetAlerts.btnClicked\"/>*/}\r\n        </SweetAlert>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailInfo;","/home/ubuntu/environment/jobslab-web/src/components/register/BasicInfo.js",["2770","2771","2772","2773","2774","2775"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputSalary from 'components/InputNumber/InputSalary';\nimport * as notification from 'actions/Notification';\nimport {SPECIALITY_LENGTH} from 'constants/AutoSuggest';\n\nclass BasicInfo extends React.Component {\n  state = {\n    location: null,\n    city: null,\n    openToRelocation: false,\n    industry: null,\n    subIndustry: null,\n    salary: null,\n    bonus: null,\n    experience: null,\n    noticePeriod: null,\n    openToOpportunity: true,\n    speciality: [],\n    language: [],\n  };\n  \n  componentDidMount() {\n    if (this.props.candidateData)\n      this.getUserData();\n  }\n  \n  componentDidUpdate(prevProps) { \n    if (this.props.candidateData !== prevProps.candidateData) \n      this.getUserData();\n  }\n  \n  getUserData = () => {\n    this.setState({ \n        location: this.props.candidateData.location ? { value: this.props.candidateData.location._id, label: this.props.candidateData.location.name } : this.props.countryList.find(obj => { return obj.label===\"Hong Kong\" }),\n        city: this.props.candidateData.address && this.props.candidateData.address.city,\n        openToRelocation: this.props.candidateData.openToRelocation,\n        industry: this.props.candidateData.industry && { value: this.props.candidateData.industry._id, label: this.props.candidateData.industry.name },\n        subIndustry: this.props.candidateData.subIndustry && { value: this.props.candidateData.subIndustry._id, label: this.props.candidateData.subIndustry.name },\n        salary: this.props.candidateData.salary==null ? null : this.props.candidateData.salary,\n        bonus: this.props.candidateData.bonus==null ? null : this.props.candidateData.bonus,\n        experience: this.props.candidateData.experience,\n        noticePeriod: this.props.candidateData.noticePeriod,\n        openToOpportunity: this.props.candidateData.openToOpportunity,\n        speciality: this.props.candidateData.speciality==null ? [] : this.props.candidateData.speciality,\n        language: this.props.candidateData.language==null ? [] : this.props.candidateData.language.map(obj => { return { value: obj._id, label: obj.name } }),\n      });\n  }\n  \n  \n  handleNumberInputChange = (e, name) => {\n    var name = e.target.name;\n    this.setState({ [name]: parseInt(e.target.value, 10) });\n  };\n  \n  handleSwitchChange = (e, checked) => {\n    this.setState({ [e.target.name]: checked });\n  };\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    //var name = e.target.id.split('-')[0];\n    this.setState({ [name]: value }, () => {\n      if (name=='industry')\n        this.setState({ subIndustry: null, isSubIndustryInput: false });\n    });\n  }\n  \n  autocompleteTextChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  formSubmit = () => {\n    const data = {\n      candId: this.props.candidateData ? this.props.candidateData._id : null,\n      location: this.state.location && this.state.location.value,\n      city: this.state.city && this.state.city,\n      openToRelocation: this.state.openToRelocation,\n      industry: this.state.industry && this.state.industry.value,\n      subIndustry: this.state.subIndustry && this.state.subIndustry.value,\n      salary: this.state.salary,\n      bonus: this.state.bonus,\n      experience: this.state.experience,\n      noticePeriod: this.state.noticePeriod,\n      openToOpportunity: this.state.openToOpportunity,\n    };\n    axios.post('/api/candidates/set/profile/about/update', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        const spec_data = {\n          candId: this.props.candidateData ? this.props.candidateData._id : null,\n          speciality: this.state.speciality,\n          language: this.state.language.map(obj => obj.value),\n        };\n        axios.post('/api/candidates/set/profile/skill/update', spec_data)\n        .then(res => {\n          if (res.data.isSuccess) {\n            this.props.getUserData();\n            this.props.handleNext();\n          } else {\n            notification.error(res.data.msg);\n          }\n        });\n      }\n      else {\n        notification.error(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const { location, city, openToRelocation, industry, subIndustry, salary, bonus, experience, noticePeriod, openToOpportunity, speciality, language } = this.state;\n    const { countryList, industryList, specialityList, languageList } = this.props;\n    const { activeStep, handleBack, handleNext } = this.props;\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Location</h3>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <Autocomplete\n                  value={location}\n                  options={countryList}\n                  getOptionLabel={option => option.label}\n                  autoHighlight={true}\n                  blurOnSelect={true}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      label=\"Country\" \n                      fullWidth \n                      error={!location}\n                      helperText={!location && \"Required\"}\n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'location')}\n                />\n              </div>\n              <div className=\"col-12\">\n                <FormControlLabel\n                  control={\n                    <Switch name=\"openToRelocation\"\n                      color=\"primary\"\n                      classes={{\n                        checked: 'text-primary',\n                        //bar: 'bg-primary',\n                      }}\n                      checked={openToRelocation}\n                      onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                    />\n                  }\n                  label=\"Open to Relocation\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <TextField\n              //id=\"jobTitle\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              onChange={this.textboxChange}\n              fullWidth\n            />\n          </div>\n          \n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Industry</h3>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              value={industry}\n              options={industryList}\n              getOptionLabel={option => option.label}\n              autoHighlight={true}\n              blurOnSelect={true}\n              renderInput={params => (\n                <TextField \n                  {...params} \n                  label=\"Industry\" \n                  fullWidth\n                  error={!industry}\n                  helperText={!industry && \"Required\"}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'industry')}\n            />\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              value={subIndustry}\n              options={this.state.industry==null ? [] : industryList.find(obj => { return obj.value === this.state.industry.value })['subIndustry_list']} \n              getOptionLabel={option => option.label}\n              autoHighlight={true}\n              blurOnSelect={true}\n              renderInput={params => (\n                <TextField \n                  {...params} \n                  label=\"Job Function\" \n                  fullWidth \n                  error={!subIndustry}\n                  helperText={!subIndustry && \"Required\"}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'subIndustry')}\n            />\n          </div>\n                    \n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Skills</h3>\n          </div>\n          \n          <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              multiple\n              id=\"speciality\"\n              open={this.state.specialityText !=null ? (this.state.specialityText.length >= SPECIALITY_LENGTH ? true : false) : false}\n              options={specialityList}\n              //getOptionLabel={option => option.label}\n              value={speciality}\n              autoHighlight={true}\n              blurOnSelect={'touch'}\n              filterSelectedOptions={true}\n              freeSolo\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Specialities\"\n                  placeholder=\"\"\n                  fullWidth\n                  error={!(speciality.length>0 && speciality.length<21)}\n                  helperText={!(speciality.length>0) ? \"Required\" : (!(speciality.length<21) ? \"No. of speciality exceeds maximum number of 20.\" : \"\")}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'speciality')}\n              onInputChange={(e, value) => this.autocompleteTextChange(e, value, 'specialityText')}\n          />\n          </div>\n          \n          <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              multiple\n              id=\"language\"\n              options={languageList}\n              getOptionLabel={option => option.label}\n              //value={language}\n              value={languageList.filter(item => (language ? language : []).find(i => i.value === item.value))}\n              autoHighlight={true}\n              blurOnSelect={'touch'}\n              filterSelectedOptions={true}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Languages\"\n                  placeholder=\"\"\n                  fullWidth\n                  error={!(language.length>0 && language.length<6)}\n                  helperText={!(language.length>0) ? \"Required\" : (!(language.length<6) ? \"No. of language exceeds maximum number of 5.\" : \"\")}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'language')}\n            />\n          </div>\n          \n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Statistics</h3>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <InputSalary\n              name=\"salary\"\n              label=\"Monthly Salary (HKD)\"\n              value={salary}\n              onChange={this.handleNumberInputChange}\n              //error={!salary}\n              helperText={!salary && \"Please input for better Job Match\"}\n            />\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <InputSalary\n              name=\"bonus\"\n              label=\"Most Recent Bonus (HKD)\"\n              value={bonus}\n              onChange={this.handleNumberInputChange}\n              //error={!bonus}\n              helperText={!bonus && \"Please input for better Job Match\"}\n            />\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <TextField\n              //id=\"experience\"\n              name=\"experience\"\n              type=\"number\"\n              label=\"Year of Experience\"\n              inputProps={{ min: \"0\", max: \"100\", step: \"1\" }}\n              value={experience}\n              onChange={this.handleNumberInputChange}\n              error={!experience}\n              helperText={!experience && \"Required\"}\n              fullWidth\n            />\n          </div>\n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Job Seeking</h3>\n          </div>\n          { openToOpportunity &&\n            <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n              <TextField\n                name=\"noticePeriod\"\n                label=\"Notice Period (in Month)\"\n                type=\"number\"\n                inputProps={{ min: \"0\", step: \"1\" }}\n                value={noticePeriod}\n                onChange={this.handleNumberInputChange}\n                error={!noticePeriod}\n                helperText={!noticePeriod && \"Required\"}\n                fullWidth\n              />\n            </div>\n          }\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <FormControlLabel\n              control={\n                <Switch name=\"openToOpportunity\"\n                  color=\"primary\"\n                  classes={{\n                    checked: 'text-primary',\n                    //bar: 'bg-primary',\n                  }}\n                  checked={openToOpportunity}\n                  onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                />\n              }\n              label=\"I'm Open to Opportunity\"\n            />\n          </div>\n        </div>\n        <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n        <div className=\"d-flex\">\n          <Button\n            disabled={activeStep === 0 || activeStep === 1}\n            onClick={handleBack}\n            className=\"ml-auto mr-2\"\n          >\n            Back\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.formSubmit}>\n            Next\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { countryList, industryList, specialityList, languageList } = state.list;\n  return { countryList, industryList, specialityList, languageList };\n};\n\nexport default connect(mapStateToProps, null)(BasicInfo);","/home/ubuntu/environment/jobslab-web/src/components/register/AccountInfo.js",["2776","2777","2778","2779","2780","2781","2782"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport UploadButton from \"components/UploadButton\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport * as notification from 'actions/Notification';\r\n\r\nclass AccountInfo extends React.Component {\r\n  state = {\r\n    isLoading: false,\r\n    isUploadLoading: false,\r\n    isUploadSuccess: false,\r\n    \r\n    userType: 'candidate',\r\n    \r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    dial: { value: \"+852\", label: \"+852\" },\r\n    phone_number: '',\r\n    //cvData: {},\r\n    cvFile: null,\r\n    cvToken: null,\r\n    cvFileType: null,\r\n    cvFilePath: null,\r\n    \r\n    isEmailUnused: true,\r\n  };\r\n  \r\n  componentDidMount() {\r\n  }\r\n  \r\n  textboxChange = (e) => {\r\n    var name = e.target.name;\r\n    this.setState({ [name]: e.target.value }, () => {\r\n      switch (name) {\r\n        case 'email':\r\n          this.setState({ isEmailUnused: true });\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  \r\n  autocompleteChange = (e, value, name) => {\r\n    this.setState({ [name]: value });\r\n  }\r\n  \r\n  cvUpload = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isUploadLoading: true });\r\n    \r\n    let cvFile = e.target.files[0]\r\n    const formData = new FormData();\r\n    if (cvFile != null && cvFile.name &&cvFile.name.toLowerCase().match(/(pdf|doc|docx).*/)) \r\n    {\r\n      formData.append('cvFile', cvFile);\r\n      console.log('start to upload cv');\r\n      axios.post('/api/auth/resume/upload', formData)\r\n      .then(res => {\r\n        if (res.data.isSuccess) {\r\n          this.setState({\r\n            isUploadLoading: false,\r\n            isUploadSuccess: true,\r\n            \r\n            email: res.data.cvDataParsed.email==null ? '' : res.data.cvDataParsed.email,\r\n            firstName: res.data.cvDataParsed.firstName==null ? '' : res.data.cvDataParsed.firstName,\r\n            lastName: res.data.cvDataParsed.lastName==null ? '' : res.data.cvDataParsed.lastName,\r\n            dial: res.data.cvDataParsed.dial==null ? '' : { value: res.data.cvDataParsed.dial, label: res.data.cvDataParsed.dial } ,\r\n            phone_number: res.data.cvDataParsed.phone_number==null ? '' : res.data.cvDataParsed.phone_number,\r\n            cvToken: res.data.cvToken,\r\n            cvFileType: res.data.cvFileType,\r\n            cvFilePath: res.data.cvFilePath,\r\n            cvFile: null,\r\n          });\r\n        }  \r\n        else {\r\n          if(res.data.msg)\r\n            notification.error(res.data.msg);\r\n          else\r\n            notification.error(\"Upload CV failed. Please try again later.\");\r\n          this.setState({ isUploadLoading: false });\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n  \r\n  formSubmit = () => {\r\n    this.setState({ isLoading: true });\r\n    const data = {\r\n      userType: this.state.userType,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      dial: this.state.dial==null ? null : this.state.dial.label,\r\n      phone_number: this.state.phone_number,\r\n      cvToken: this.state.cvToken==null ? null : this.state.cvToken,\r\n      cvFileType: this.state.cvFileType==null ? null : this.state.cvFileType,\r\n      cvFilePath: this.state.cvFilePath==null ? null : this.state.cvFilePath,\r\n    };\r\n    \r\n    axios.post('/api/admins/set/candidate/create', data)\r\n    .then(res => {\r\n      if (res.data.isSuccess) {\r\n        this.setState({ isLoading: false });\r\n        this.props.getUserData(res.data.userId);\r\n        this.props.handleNext();\r\n      } else {\r\n        notification.error(res.data.msg);\r\n        this.setState({ isLoading: false });\r\n        if (res.data.isEmailUnused==false) \r\n          this.setState({ isEmailUnused: false });\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { activeStep, handleBack, handleNext } = this.props;\r\n    const { isLoading, isUploadLoading, isUploadSuccess } = this.state;\r\n    const { firstName, lastName, email, password, password2, dial, phone_number } = this.state;\r\n    const { isEmailUnused } = this.state;\r\n    const { dialList } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <UploadButton name=\"Upload CV\" accept=\".doc,.docx,.pdf\" isLoading={isUploadLoading} onChange={this.cvUpload} />\r\n          </div>\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n            <h3 className=\"mt-3\">Login Credential</h3>\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"exmaple@jobslab.io\"\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              fullWidth\r\n              onChange={this.textboxChange}\r\n              value={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className=\"mt-1\"\r\n              error={!email || !isEmailUnused}\r\n              helperText={!email ? \"Required\" : !isEmailUnused && \"This email has been used.\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\r\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n            <TextField\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"******\"\r\n              value={password}\r\n              onChange={this.textboxChange}\r\n              error={!password || !(password.length>=8)}\r\n              helperText={!password ? \"Required\" : !(password.length>=8) && \"Password must be at least 8 characters long.\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n            <TextField\r\n              name=\"password2\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"******\"\r\n              value={password2}\r\n              onChange={this.textboxChange}\r\n              error={!(password==password2)}\r\n              helperText={!(password==password2) && \"Password mismatch.\"}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n            <h3 className=\"mt-3\">Name</h3>\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n            <TextField\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              value={firstName}\r\n              onChange={this.textboxChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              error={!firstName}\r\n              helperText={!firstName && \"Required\"}\r\n              /*InputProps={{\r\n                style: {\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 4\r\n                }    \r\n              }}*/\r\n            />\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n            <TextField\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n              value={lastName}\r\n              onChange={this.textboxChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              error={!lastName}\r\n              helperText={!lastName && \"Required\"}\r\n              /*InputProps={{\r\n                style: {\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: 4\r\n                }    \r\n              }}*/\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n            <h3 className=\"mt-3\">Contact</h3>\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-6 col-12\">\r\n            <Autocomplete\r\n              value={dial}\r\n              options={dialList ? dialList : []}\r\n              getOptionLabel={option => option.label}\r\n              autoHighlight={true}\r\n              blurOnSelect={true}\r\n              disableClearable={true}\r\n              renderInput={params => (\r\n                <TextField \r\n                  {...params} \r\n                  label=\"Dial\" \r\n                  fullWidth \r\n                  variant=\"outlined\"\r\n                  error={!dial}\r\n                  helperText={!dial && \"Required\"}\r\n                  /*InputProps={{\r\n                    style: {\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: 4\r\n                    }    \r\n                  }}*/\r\n                />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'dial')}\r\n            />\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n            <TextField\r\n              name=\"phone_number\"\r\n              label=\"Number\"\r\n              value={phone_number}\r\n              onChange={this.textboxChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              //className=\"bg-white rounded\"\r\n              error={!phone_number}\r\n              helperText={!phone_number && \"Required\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\r\n        <div className=\"d-flex\">\r\n          <Button\r\n            //disabled={activeStep === 0}\r\n            //onClick={handleBack}\r\n            onClick={() => this.props.history.push(\"/admin/candidatelist\")}\r\n            className=\"ml-auto mr-2\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" disabled={isLoading} onClick={this.formSubmit}>\r\n             { isLoading && <CircularProgress color=\"secondary\" size={20} className=\"mr-2\" /> } Next\r\n          </Button>\r\n        </div>\r\n        <SweetAlert show={isUploadSuccess} success title={\"Congratulations!\"/*<IntlMessages id=\"sweetAlerts.goodJob\"/>*/}\r\n                    onConfirm={ () => this.setState({ isUploadSuccess: false }) }>\r\n          Your CV has been uploaded successfully.\r\n          {/*<IntlMessages id=\"sweetAlerts.btnClicked\"/>*/}\r\n        </SweetAlert>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { dialList } = state.list;\r\n  return { dialList };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(AccountInfo));","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminCandidateFilter/AdminCandidateFilter.js",["2783","2784","2785","2786","2787","2788","2789","2790","2791","2792"],"import React, {Component, Fragment} from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\nimport InputRange from 'react-input-range';\nimport { withRouter } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Expand from \"react-expand-animated\";\nimport SearchBox from 'components/SearchBox';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport CircleUnchecked from '@material-ui/icons/RadioButtonUnchecked';\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Main,\n  BoxExpand,\n  ExpandBoxes\n} from \"./App.styles.js\";\n\nconst AutocompleteWithFilterStyle = withStyles({\n  tag: {\n    height: 24,\n    position: \"relative\",\n    backgroundColor: \"#3f51b5\",\n    //zIndex: 0,\n    \n    \"& .MuiChip-label\": {\n      color: \"#fff\"\n    },\n    \"& .MuiChip-deleteIcon\": {\n      width: 18,\n      color: \"#fff\"\n    },\n    \"&:hover .MuiChip-deleteIcon\": {\n      color: \"#f0f0fb\"\n    },\n    \n  }\n})(Autocomplete);\n\nclass AdminCandidateFilter extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {  \n       country_list : [],\n       industry_list : [],\n       salary: { min: 0, max: 500000 },\n       experience: { min: 0, max: 50 },\n       openBtnList : new Map(),\n       open: false,\n       myCandidate: false,\n       activeCandidate: false,\n       onlyNotCompletedCandidate: false,\n       locationSelected: [],\n    };\n    \n  }\n  \n  componentDidMount() {\n    const countryData = this.props.countryList;\n    const industryData = this.props.industryList;\n    //console.log(countryData);\n    if((countryData != null))\n        this.setState({country_list : Object.assign([], countryData)});\n    if((industryData != null))\n        this.setState({industry_list : Object.assign([], industryData)});\n  }\n\n  /*clearText = (name) => {\n   this.props.selectSearchText(\"\", name);\n  }*/\n \n  clearText = (name) => {\n   this.props.selectSearchText(\"\", name);\n  }\n  \n  handleChange = name => (event, checked) => {\n    this.setState({[name]: checked});\n  };\n  \n  toggle = (targetListName) => {\n    var list = this.state.openBtnList;\n    var isOpen = true;\n    if(list.has(targetListName))\n      isOpen = !(list.get(targetListName));\n    else\n      list.set(targetListName,isOpen);\n  \n    //console.log(list);\n    \n    list.forEach(function(value, key, map) {\n      //console.log(key);\n      if(key==targetListName)\n        list.set(key,isOpen);\n      else\n        list.set(key,false);\n    });\n    this.setState({\n      openBtnList : list\n    });\n  }\n\n  render() {\n    const transitions = [\"height\", \"opacity\", \"background\"];\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-12\"  style={{'overflow-y':'auto'}}>\n        \n                  \n                    \n          <div style={{'margin-bottom':'5px'}}>\n            <SearchBox placeholder=\"Name, phone or email\"\n                       onChange={this.props.updateSearchText}\n                       selectSearchText={this.props.selectSearchText}\n                       clearText={this.clearText.bind(this)}\n                       value={this.props.searchUserText}\n                       enableSuggestion={false}\n                       name={\"searchUserText\"}\n                       id={\"searchUserText\"}\n                 />\n          </div>\n          \n          <div style={{'margin-bottom':'5px'}}>\n            <SearchBox placeholder=\"Candidate Info...\"\n                       onChange={this.props.updateSearchText}\n                       selectSearchText={this.props.selectSearchText}\n                       clearText={this.clearText.bind(this)}\n                       value={this.props.searchText}\n\n                 />\n          </div>\n          \n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Industries</p>\n          <AutocompleteWithFilterStyle\n            multiple\n            limitTags={2}\n            id=\"industry\"\n            options={this.state.industry_list}\n            disableCloseOnSelect\n            getOptionLabel={option => option.label}\n            value={this.state.industry_list.filter(item => (this.props.industrySelected ? this.props.industrySelected : []).find(i => i.value === item.value))}\n            renderOption={(option, { selected }) => (\n              <React.Fragment>\n                <Checkbox\n                  icon={<CircleUnchecked />}\n                  checkedIcon={<CircleCheckedFilled />}\n                  style={{ marginRight: 2 }}\n                  checked={selected}\n                />\n                {option.label}\n              </React.Fragment>\n            )}\n            style={{ width: \"95%\" }}\n            className=\"tagLimitStyle\"\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'industrySelected')}\n          />\n          \n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Locations</p>\n          <AutocompleteWithFilterStyle\n            multiple\n            limitTags={2}\n            id=\"location\"\n            options={this.state.country_list}\n            disableCloseOnSelect\n            getOptionLabel={option => option.label}\n            value={this.state.country_list.filter(item => (this.props.locationSelected ? this.props.locationSelected : []).find(i => i.value === item.value))}\n            renderOption={(option, { selected }) => (\n              <React.Fragment>\n                <Checkbox\n                  icon={<CircleUnchecked />}\n                  checkedIcon={<CircleCheckedFilled />}\n                  style={{ marginRight: 2 }}\n                  checked={selected}\n                />\n                {option.label}\n              </React.Fragment>\n            )}\n            style={{ width: \"95%\" }}\n            className=\"tagLimitStyle\"\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'locationSelected')}\n          />\n           {/*\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('industry')}>Industries</Button>\n          <Fragment>\n            <Main>\n              <Expand\n                open={this.state.openBtnList.get('industry') == true ? true : false}\n                duration={500}\n                transitions={transitions}\n              >\n                <ExpandBoxes>\n                  <BoxExpand>\n                      <div  className=\"mb-12 filter-group\">\n                        <FormGroup>\n                          {this.state.industry_list.map(item => (\n                                      <FormControlLabel\n                                        control={\n                                          <Checkbox\n                                            color=\"primary\"\n                                            checked={(this.props.checkedItemsIndustry)?this.props.checkedItemsIndustry.get(item.value):false}\n                                            onChange= { () => this.props.handleCheckBoxChange('checkedItemsIndustry',item.value)}\n                                            value={item.label}\n                                          />\n                                        }\n                                        label={item.label}\n                                      />\n            \n                                    ))}\n            \n                        </FormGroup>\n                      </div>\n                  </BoxExpand>\n                </ExpandBoxes>\n              </Expand>\n            </Main>\n          </Fragment>\n          \n         \n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('location')}>Locations</Button>\n          <Fragment>\n            <Main>\n              <Expand\n                open={this.state.openBtnList.get('location') == true ? true : false}\n                duration={500}\n                transitions={transitions}\n              >\n                <ExpandBoxes>\n                  <BoxExpand>\n                      <div className=\"col-md-12 mb-md-12\"> \n                          <Autocomplete\n                            multiple\n                            id=\"location\"\n                            options={this.state.country_list}\n                            getOptionLabel={option => option.label}\n                            value={this.props.locationSelected}\n                            renderInput={params => (\n                              <TextField\n                                {...params}\n                                variant=\"outlined\"\n                                label=\"\"\n                                placeholder=\"\"\n                                fullWidth\n                              />\n                            )}\n                            onChange={(e, value) => this.props.autocompleteChange(e, value, 'locationSelected')}\n                          />  \n                      </div>\n                  </BoxExpand>\n                </ExpandBoxes>\n              </Expand>\n            </Main>\n          </Fragment>\n          \n          */}\n          \n\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Salary</p>\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\n\t\t \t\t\t\t<InputRange\n\t\t \t\t\t\t  step={10000}\n              maxValue={500000}\n              minValue={0}\n              value={this.props.salary}\n              onChange={salary => { this.props.onFieldChanged(\"salary\", salary)}} />\n\t\t \t\t\t</div>\n\t\t\t \t\t\t\n\t\t\t \t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Experience</p>\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\n\t\t \t\t\t\t<InputRange\n\t\t \t\t\t\t  step={1}\n              maxValue={50}\n              minValue={0}\n              value={this.props.experience}\n              onChange={experience => { this.props.onFieldChanged(\"experience\", experience)}} />\n\t\t \t\t\t</div>\n\t\t \t\t\t\n\t\t\t \t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Only show my candidates</p>\t\n          <Switch\n          classes={{\n            checked: 'text-primary',\n            track: 'bg-primary',\n          }}\n          checked={this.props.myCandidate}\n          onChange={ () => this.props.handlePropChange('myCandidate')}\n          aria-label=\"Only show my candidate\"\n          />\n          \n          {/*<p className=\"MuiFormHelperText-root text-black filterHeader\">Only show active candidates</p>\t\n          <Switch\n          classes={{\n            checked: 'text-primary',\n            track: 'bg-primary',\n          }}\n          checked={this.props.activeCandidate}\n          onChange={ () => this.props.handlePropChange('activeCandidate')}\n          aria-label=\"Only show active candidates\"\n          />*/}\n          \n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Only show candidates who open to opportunities</p>\t\n          <Switch\n          classes={{\n            checked: 'text-primary',\n            track: 'bg-primary',\n          }}\n          checked={this.props.openToOpportunity}\n          onChange={ () => this.props.handlePropChange('openToOpportunity')}\n          aria-label=\"Only show candidates who open to opportunities\"\n          />\n          \n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Only show candidates who have not completed</p>\t\n          <Switch\n          classes={{\n            checked: 'text-primary',\n            track: 'bg-primary',\n          }}\n          checked={this.props.onlyNotCompletedCandidate}\n          onChange={ () => this.props.handlePropChange('onlyNotCompletedCandidate')}\n          aria-label=\"Only show candidates who have not completed\"\n          />\n          \n        <br/>\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.clearFilter() }}>\n                        <font size=\"\"><i className=\"la la-undo mr-2\"/></font>\n                            Clear\n        </Button>\n\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.search() }}>\n                        <font size=\"\"><i className=\"la la-search mr-2\"/></font>\n                            Search\n        </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList, industryList} = state.list;\n  return {\n    countryList,\n    industryList\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminCandidateFilter));","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListFilter/AdminJobListFilter.js",["2793","2794","2795","2796","2797","2798","2799","2800","2801","2802","2803"],"import React, {Component, Fragment} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputRange from 'react-input-range';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Expand from \"react-expand-animated\";\r\nimport SearchBox from 'components/SearchBox';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircleUnchecked from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Main,\r\n  BoxExpand,\r\n  ExpandBoxes\r\n} from \"./App.styles.js\";\r\n\r\nconst AutocompleteWithFilterStyle = withStyles({\r\n  tag: {\r\n    height: 24,\r\n    position: \"relative\",\r\n    backgroundColor: \"#3f51b5\",\r\n    //zIndex: 0,\r\n    \r\n    \"& .MuiChip-label\": {\r\n      color: \"#fff\"\r\n    },\r\n    \"& .MuiChip-deleteIcon\": {\r\n      width: 18,\r\n      color: \"#fff\"\r\n    },\r\n    \"&:hover .MuiChip-deleteIcon\": {\r\n      color: \"#f0f0fb\"\r\n    },\r\n    \r\n  }\r\n})(Autocomplete);\r\n\r\nclass AdminJobListFilter extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n       country_list : [],\r\n       industry_list : [],\r\n       salary: { min: 0, max: 500000 },\r\n       experience: { min: 0, max: 50 },\r\n       openBtnList : new Map(),\r\n       open: false,\r\n       myCandidate: false,\r\n       activeCandidate: false,\r\n       locationSelected: [],\r\n    };\r\n    \r\n  }\r\n  \r\n  componentDidMount() {\r\n    const countryData = this.props.countryList;\r\n    const industryData = this.props.industryList;\r\n    //console.log(countryData);\r\n    if((countryData != null))\r\n        this.setState({country_list : Object.assign([], countryData)});\r\n    if((industryData != null))\r\n        this.setState({industry_list : Object.assign([], industryData)});\r\n  }\r\n\r\n  handleChange = name => (event, checked) => {\r\n    this.setState({[name]: checked});\r\n  };\r\n\r\n \r\n  toggle = (targetListName) => {\r\n    var list = this.state.openBtnList;\r\n    var isOpen = true;\r\n    if(list.has(targetListName))\r\n      isOpen = !(list.get(targetListName));\r\n    else\r\n      list.set(targetListName,isOpen);\r\n  \r\n    //console.log(list);\r\n    \r\n    list.forEach(function(value, key, map) {\r\n      //console.log(key);\r\n      if(key==targetListName)\r\n        list.set(key,isOpen);\r\n      else\r\n        list.set(key,false);\r\n    });\r\n    this.setState({\r\n      openBtnList : list\r\n    });\r\n  }\r\n\r\n  /*clearText = () => {\r\n   this.props.selectSearchText(\"\");\r\n }*/\r\n  clearText = (name) => {\r\n   this.props.selectSearchText(\"\", name);\r\n  }\r\n  \r\n  render() {\r\n    const transitions = [\"height\", \"opacity\", \"background\"];\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\"  style={{'overflow-y':'auto'}}>\r\n          <div style={{'margin-bottom':'5px'}}>\r\n            <SearchBox placeholder=\"Job Info...\"\r\n                       onChange={this.props.updateSearchText}\r\n                       selectSearchText={this.props.selectSearchText}\r\n                       clearText={this.clearText.bind(this)}\r\n                       value={this.props.searchText}\r\n\r\n                 />\r\n          </div>\r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('industry')}>Industries</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('industry') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                      <div  className=\"mb-12 filter-group\">\r\n                        <FormGroup>\r\n                          {this.state.industry_list.map(item => (\r\n                                      <FormControlLabel\r\n                                        control={\r\n                                          <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={(this.props.checkedItemsIndustry)?this.props.checkedItemsIndustry.get(item.value):false}\r\n                                            onChange= { () => this.props.handleCheckBoxChange('checkedItemsIndustry',item.value)}\r\n                                            value={item.label}\r\n                                          />\r\n                                        }\r\n                                        label={item.label}\r\n                                      />\r\n            \r\n                                    ))}\r\n            \r\n                        </FormGroup>\r\n                      </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment>\r\n          */}\r\n          \r\n          \r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Industries</p>\r\n          <AutocompleteWithFilterStyle\r\n            multiple\r\n            limitTags={2}\r\n            id=\"industry\"\r\n            options={this.state.industry_list}\r\n            disableCloseOnSelect\r\n            getOptionLabel={option => option.label}\r\n            value={this.state.industry_list.filter(item => (this.props.industrySelected ? this.props.industrySelected : []).find(i => i.value === item.value))}\r\n            renderOption={(option, { selected }) => (\r\n              <React.Fragment>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  style={{ marginRight: 2 }}\r\n                  checked={selected}\r\n                />\r\n                {option.label}\r\n              </React.Fragment>\r\n            )}\r\n            style={{ width: \"95%\" }}\r\n            className=\"tagLimitStyle\"\r\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'industrySelected')}\r\n          />\r\n          \r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Locations</p>\r\n          <AutocompleteWithFilterStyle\r\n            multiple\r\n            limitTags={2}\r\n            id=\"location\"\r\n            options={this.state.country_list}\r\n            disableCloseOnSelect\r\n            getOptionLabel={option => option.label}\r\n            value={this.state.country_list.filter(item => (this.props.locationSelected ? this.props.locationSelected : []).find(i => i.value === item.value))}\r\n            renderOption={(option, { selected }) => (\r\n              <React.Fragment>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  style={{ marginRight: 2 }}\r\n                  checked={selected}\r\n                />\r\n                {option.label}\r\n              </React.Fragment>\r\n            )}\r\n            style={{ width: \"95%\" }}\r\n            className=\"tagLimitStyle\"\r\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'locationSelected')}\r\n          />\r\n   \r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('location')}>Locations</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('location') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                      <div className=\"col-md-12 mb-md-12\"> \r\n                          <Autocomplete\r\n                            multiple\r\n                            id=\"location\"\r\n                            options={this.state.country_list}\r\n                            getOptionLabel={option => option.label}\r\n                            value={this.props.locationSelected}\r\n                            renderInput={params => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"outlined\"\r\n                                placeholder=\"\"\r\n                                fullWidth\r\n                              />\r\n                            )}\r\n                            onChange={(e, value) => this.props.autocompleteChange(e, value, 'locationSelected')}\r\n                          />  \r\n                          \r\n                          \r\n                          <Autocomplete\r\n                            multiple\r\n                            limitTags={2}\r\n                            id=\"checkboxes-tags-demo\"\r\n                            options={top100Films}\r\n                            disableCloseOnSelect\r\n                            getOptionLabel={option => option.title}\r\n                            renderOption={(option, { selected }) => (\r\n                              <React.Fragment>\r\n                                <Checkbox\r\n                                  icon={icon}\r\n                                  checkedIcon={checkedIcon}\r\n                                  style={{ marginRight: 2 }}\r\n                                  checked={selected}\r\n                                />\r\n                                {option.title}\r\n                              </React.Fragment>\r\n                            )}\r\n                            style={{ width: 500 }}\r\n                            renderInput={params => <TextField {...params} variant=\"standard\" />}\r\n                          />\r\n                          \r\n                         \r\n                      </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment> */}\r\n          \r\n          \r\n\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Salary</p>\r\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\r\n\t\t \t\t\t\t<InputRange\r\n\t\t \t\t\t\t  step={10000}\r\n              maxValue={500000}\r\n              minValue={0}\r\n              value={this.props.salary}\r\n              onChange={salary => { this.props.onFieldChanged(\"salary\", salary)}} />\r\n\t\t \t\t\t</div>\r\n\t\t\t \t\t\t\r\n\t\t\t \t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Experience</p>\r\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\r\n\t\t \t\t\t\t<InputRange\r\n\t\t \t\t\t\t  step={1}\r\n              maxValue={50}\r\n              minValue={0}\r\n              value={this.props.experience}\r\n              onChange={experience => { this.props.onFieldChanged(\"experience\", experience)}} />\r\n\t\t \t\t\t</div>\r\n\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.clearFilter() }}>\r\n                        <font size=\"\"><i className=\"la la-undo mr-2\"/></font>\r\n                            Clear\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.search() }}>\r\n                        <font size=\"\"><i className=\"la la-search mr-2\"/></font>\r\n                            Search\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   const {countryList, industryList} = state.list;\r\n  return {\r\n    countryList,\r\n    industryList\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AdminJobListFilter));","/home/ubuntu/environment/jobslab-web/src/components/CardBox/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/AdminCandidateFilter/App.styles.js",["2804","2805"],"/home/ubuntu/environment/jobslab-web/src/components/AdminTable/index.js",["2806","2807","2808","2809"],"import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\n\nclass AdminTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  componentDidMount() {\n    \n  }\n  \n  render() {\n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    var tableHeader = [];\n    \n    //generate table header\n    this.props.tableFields.map((obj, i) => {\n      tableHeader.push(\n          <StyledTableCell align=\"center\">{obj.title}</StyledTableCell>\n        )\n    });\n    \n    return (\n      <div id=\"inif-container\" className=\"table-container admin-infinite-table\">\n            <Table stickyHeader aria-label=\"sticky customized table\">\n                <TableHead>\n                  <TableRow>\n                    {tableHeader}\n                  </TableRow>\n                </TableHead>\n                  <InfiniteScroll\n                      className=\"MuiTableBody-root\"\n                      pageStart={0}\n                      element={'tbody'}\n                      loadMore={this.props.getMoreItems.bind(this)}\n                      hasMore={this.props.hasMore == true ? true : false}\n                      loader={loaderComponent}\n                      useWindow={false}\n                      getScrollParent={() => document.getElementById('inif-container')}\n                    >\n                      {this.props.items ? this.props.items : []}\n                  </InfiniteScroll>\n            </Table>\n          </div>\n    );\n  }\n}\n\nexport default AdminTable;\n\n","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListFilter/App.styles.js",["2810","2811"],"/home/ubuntu/environment/jobslab-web/src/components/profile/SkillTag/SkillEdit.js",["2812"],"import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport * as notification from 'actions/Notification';\r\nimport {SPECIALITY_LENGTH} from 'constants/AutoSuggest';\r\n\r\nclass SkillEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      speciality: [],\r\n      //skill: [],\r\n      language: [],\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.candidateData)\r\n      this.setState({\r\n        //speciality: (this.props.specData==null) ? [] : this.props.specData.map(obj => { return { value: obj._id, label: obj.name } }),\r\n        speciality: this.props.specData ?\r\n          (this.props.specData==null) ? [] : this.props.specData\r\n        :\r\n          (this.props.candidateData.speciality==null) ? [] : this.props.candidateData.speciality,\r\n        //skill: (this.props.skillData==null) ? [] : this.props.skillData,\r\n        language: this.props.langData ?\r\n          (this.props.langData==null) ? [] : this.props.langData.map(obj => { return { value: obj._id, label: obj.name } })\r\n        :\r\n          (this.props.candidateData.language==null) ? [] : this.props.candidateData.language.map(obj => { return { value: obj._id, label: obj.name } }),\r\n      });\r\n  }\r\n  \r\n  autocompleteChange = (e, value, name) => {\r\n    //var name = e.target.id.split('-')[0];\r\n    this.setState({ [name]: value });\r\n  }\r\n  \r\n  autocompleteTextChange = (e, value, name) => {\r\n    this.setState({ [name]: value });\r\n  }\r\n  \r\n  editSave = () => {\r\n    const data = {\r\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\r\n      //speciality: this.state.speciality.map(obj => obj.value),\r\n      speciality: this.state.speciality,\r\n      //skill: this.state.skill,\r\n      language: this.state.language.map(obj => obj.value),\r\n    };\r\n    axios.post('/api/candidates/set/profile/skill/update', data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        this.props.refresh();\r\n        //this.props.requestInitUser();\r\n        notification.success(\"Your Profile has been updated successfully.\");\r\n        this.props.cancel(); \r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { speciality, skill, language } = this.state;\r\n    const { specialityList, languageList } = this.props;\r\n    const { isUploadEdit } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <p>Specialities (Max 20)</p>\r\n        <ul className=\"list-inline list-inline-3\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"speciality\"\r\n            open={this.state.specialityText !=null ? (this.state.specialityText.length >= SPECIALITY_LENGTH ? true : false) : false}\r\n            options={specialityList}\r\n            //getOptionLabel={option => option.label}\r\n            value={speciality}\r\n            autoHighlight={true}\r\n            blurOnSelect={'touch'}\r\n            filterSelectedOptions={true}\r\n            freeSolo\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Specialities\"\r\n                placeholder=\"\"\r\n                fullWidth\r\n                error={!(speciality.length>0 && speciality.length<21)}\r\n                helperText={!(speciality.length>0) ? \"Please select Specialities.\" : (!(speciality.length<21) ? \"No. of speciality exceeds maximum number of 20.\" : \"\")}\r\n              />\r\n            )}\r\n            onChange={(e, value) => this.autocompleteChange(e, value, 'speciality')}\r\n            onInputChange={(e, value) => this.autocompleteTextChange(e, value, 'specialityText')}\r\n          />  \r\n        </ul>\r\n        \r\n        {/*<p>Other Skills</p>\r\n        <ul className=\"list-inline list-inline-3\">\r\n          <Autocomplete\r\n            multiple\r\n            //value={this.state.skill}\r\n            id=\"skill\"\r\n            value={skill}\r\n            freeSolo\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"\"\r\n                placeholder=\"\"\r\n                fullWidth\r\n              />\r\n            )}\r\n            onChange={(e, value) => this.autocompleteChange(e, value, 'skill')}\r\n          />\r\n        </ul>*/}\r\n        \r\n        <p>Languages (Max 5)</p>\r\n        <ul className=\"list-inline list-inline-3\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"language\"\r\n            options={languageList}\r\n            getOptionLabel={option => option.label}\r\n            //value={language}\r\n            value={languageList.filter(item => (language ? language : []).find(i => i.value === item.value))}\r\n            autoHighlight={true}\r\n            blurOnSelect={'touch'}\r\n            filterSelectedOptions={true}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Languages\"\r\n                placeholder=\"\"\r\n                fullWidth\r\n                error={!(language.length>0 && language.length<6)}\r\n                helperText={!(language.length>0) ? \"Please select Languages.\" : (!(language.length<6) ? \"No. of language exceeds maximum number of 5.\" : \"\")}\r\n              />\r\n            )}\r\n            onChange={(e, value) => this.autocompleteChange(e, value, 'language')}\r\n          />  \r\n        </ul>\r\n        \r\n        <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}> { isUploadEdit ? \"Replace\" : \"Save\" }</Button>\r\n        <Button className=\"mt-2 mr-2\" onClick={this.props.cancel}>Cancel</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { specialityList, languageList } = state.list;\r\n  return { \r\n    specialityList, \r\n    languageList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  requestInitUser,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SkillEdit));\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Contact/ContactEdit.js",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/About/AboutItem.js",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/About/AboutEdit.js",["2813","2814"],"import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputSalary from 'components/InputNumber/InputSalary';\nimport * as notification from 'actions/Notification';\nimport { requestInitUser } from 'actions/Auth';  \n\nclass AboutEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: null,\n      openToRelocation: false,\n      city: null,\n      industry: null,\n      subIndustry: null,\n      salary: null,\n      bonus: null,\n      experience: null,\n      noticePeriod: null,\n      openToOpportunity: true,\n    };\n  }\n  \n  componentDidMount() {\n    if (this.props.candidateData)\n      this.setState({ \n        location: this.props.locData ?\n          this.props.countryList.find(obj => { return obj.value===this.props.locData._id })\n        : \n          this.props.candidateData.location ? \n            { value: this.props.candidateData.location._id, label: this.props.candidateData.location.name } \n          : \n            this.props.countryList.find(obj => { return obj.label===\"Hong Kong\" }),\n        city: this.props.candidateData.address && this.props.candidateData.address.city, //{ value: this.props.candidateData.address.city, label: this.props.candidateData.address.city },\n        openToRelocation:  this.props.candidateData.openToRelocation==null ? false : this.props.candidateData.openToRelocation,\n        industry: this.props.indData ? \n          this.props.industryList.find(obj => { return obj.value===this.props.indData._id })\n        :\n          this.props.candidateData.industry && { value: this.props.candidateData.industry._id, label: this.props.candidateData.industry.name },\n        subIndustry: this.props.candidateData.subIndustry && { value: this.props.candidateData.subIndustry._id, label: this.props.candidateData.subIndustry.name },\n        salary: this.props.candidateData.salary==null ? null : this.props.candidateData.salary,\n        bonus: this.props.candidateData.bonus==null ? null : this.props.candidateData.bonus,\n        experience: this.props.expData ? this.props.expData : this.props.candidateData.experience,\n        noticePeriod: this.props.candidateData.noticePeriod,\n        openToOpportunity: this.props.candidateData.openToOpportunity==null ? true :this.props.candidateData.openToOpportunity,\n      });\n  }\n  \n  handleNumberInputChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: parseInt(e.target.value, 10) });\n  };\n  \n  handleSwitchChange = (e, checked) => {\n    this.setState({ [e.target.name]: checked });\n  };\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    //var name = e.target.id.split('-')[0];\n    this.setState({ [name]: value }, () => {\n      if (name=='location') {\n        this.setState({ city: null });\n      }\n      if (name=='industry')\n        this.setState({ subIndustry: null });\n    });\n  }\n  \n  editSave = () => {\n    const data = {\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\n      location: this.state.location && this.state.location.value,\n      city: this.state.city && this.state.city,\n      openToRelocation: this.state.openToRelocation,\n      industry: this.state.industry && this.state.industry.value,\n      subIndustry: this.state.subIndustry && this.state.subIndustry.value,\n      salary: this.state.salary,\n      bonus: this.state.bonus,\n      experience: this.state.experience,\n      noticePeriod: this.state.noticePeriod,\n      openToOpportunity: this.state.openToOpportunity,\n    };\n    axios.post('/api/candidates/set/profile/about/update', data)\n    .then(res => {\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        this.props.refresh();\n        //this.props.requestInitUser();\n        notification.success(\"Your Profile has been updated successfully.\");\n        this.props.cancel(); \n      }\n      else {\n        notification.error(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  render() {\n    const { location, city, openToRelocation, industry, subIndustry, salary, bonus, experience, noticePeriod, openToOpportunity } = this.state;\n    const { countryList, industryList } = this.props;\n    \n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Location</h3>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <Autocomplete\n                  value={location}\n                  options={countryList}\n                  getOptionLabel={option => option.label}\n                  autoHighlight={true}\n                  blurOnSelect={true}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      label=\"Country\" \n                      fullWidth \n                      error={!location}\n                      helperText={!location && \"Required\"}\n                    />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'location')}\n                />\n              </div>\n              <div className=\"col-12\">\n                <FormControlLabel\n                  control={\n                    <Switch name=\"openToRelocation\"\n                      color=\"primary\"\n                      classes={{\n                        checked: 'text-primary',\n                        //bar: 'bg-primary',\n                      }}\n                      checked={openToRelocation}\n                      onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                    />\n                  }\n                  label=\"Open to Relocation\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <TextField\n              //id=\"jobTitle\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              onChange={this.textboxChange}\n              fullWidth\n            />\n          </div>\n          {/* location && countryList.find(obj => { return obj.value === location.value })['city_list'].length>0 &&\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              value={city}\n              options={location==null ? [] : countryList.find(obj => { return obj.value === location.value })['city_list']} \n              getOptionLabel={option => option.label}\n              autoHighlight={true}\n              blurOnSelect={true}\n              renderInput={params => (\n                <TextField \n                  {...params} \n                  label=\"City\" \n                  fullWidth \n                  error={!city}\n                  helperText={!city && \"Required\"}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'city')}\n            />\n          </div>\n          */}\n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Industry</h3>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              value={industry}\n              options={industryList}\n              getOptionLabel={option => option.label}\n              autoHighlight={true}\n              blurOnSelect={true}\n              renderInput={params => (\n                <TextField \n                  {...params} \n                  label=\"Industry\" \n                  fullWidth\n                  error={!industry}\n                  helperText={!industry && \"Required\"}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'industry')}\n            />\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <Autocomplete\n              value={subIndustry}\n              options={industry==null ? [] : industryList.find(obj => { return obj.value === industry.value })['subIndustry_list']} \n              getOptionLabel={option => option.label}\n              autoHighlight={true}\n              blurOnSelect={true}\n              renderInput={params => (\n                <TextField \n                  {...params} \n                  label=\"Job Function\" \n                  fullWidth\n                  error={!subIndustry}\n                  helperText={!subIndustry && \"Required\"}\n                />\n              )}\n              onChange={(e, value) => this.autocompleteChange(e, value, 'subIndustry')}\n            />\n          </div>\n          \n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Statistics</h3>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <InputSalary\n              name=\"salary\"\n              label=\"Monthly Salary (HKD)\"\n              value={salary}\n              onChange={this.handleNumberInputChange}\n              //error={!salary}\n              helperText={!salary && \"Please input for better Job Match\"}\n            />\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <InputSalary\n              name=\"bonus\"\n              label=\"Most Recent Bonus (HKD)\"\n              value={bonus}\n              onChange={this.handleNumberInputChange}\n              //error={!bonus}\n              helperText={!bonus && \"Please input for better Job Match\"}\n            />\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n            <TextField\n              //id=\"experience\"\n              name=\"experience\"\n              label=\"Year of Experience\"\n              type=\"number\"\n              inputProps={{ min: \"0\", max: \"100\", step: \"1\" }}\n              value={experience}\n              onChange={this.handleNumberInputChange}\n              error={!experience}\n              helperText={!experience && \"Required\"}\n              fullWidth\n            />\n          </div>\n          \n          <div className=\"m-3 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"></div>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"mt-3\">Job Seeking</h3>\n          </div>\n          { openToOpportunity &&\n            <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n              <TextField\n                name=\"noticePeriod\"\n                label=\"Notice Period (in Month)\"\n                type=\"number\"\n                inputProps={{ min: \"0\", step: \"1\" }}\n                value={noticePeriod}\n                onChange={this.handleNumberInputChange}\n                error={!noticePeriod}\n                helperText={!noticePeriod && \"Required\"}\n                fullWidth\n              />\n              {/*<FormControl fullWidth>\n                <InputLabel htmlFor=\"noticePeriod\">Notice Period (in Month)</InputLabel>\n                <Input\n                  //id=\"noticePeriod\"\n                  name=\"noticePeriod\"\n                  type=\"number\"\n                  value={noticePeriod}\n                  onChange={(e) => this.handleNumberInputChange(e)}\n                />\n              </FormControl>*/}\n            </div>\n          }\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <FormControlLabel\n              control={\n                <Switch name=\"openToOpportunity\"\n                  color=\"primary\"\n                  classes={{\n                    checked: 'text-primary',\n                    //bar: 'bg-primary',\n                  }}\n                  checked={openToOpportunity}\n                  onChange={(e, checked) => this.handleSwitchChange(e, checked)}\n                />\n              }\n              label=\"Open to Opportunities\"\n            />\n          </div>\n        </div>\n        <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\n        <Button className=\"mt-2 mr-2\" onClick={this.props.cancel}>Cancel</Button>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  const { countryList, industryList } = state.list;\n  return { countryList, industryList };\n};\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AboutEdit))\n","/home/ubuntu/environment/jobslab-web/src/components/JobContent/index.js",["2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Widget from \"components/Widget\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport ReportBox from 'components/ReportBox/index';\nimport ChartCard from 'components/ChartCard/ChartCard';\nimport {Bar, BarChart, ResponsiveContainer} from 'recharts';\nimport {Progress} from \"reactstrap\";\nimport SkillTag from \"components/JobList/SkillTag/index\";\n\nimport LoginForm from 'components/popup/LoginForm';\nimport SignupForm from 'components/popup/SignupForm';\nimport ReferralForm from 'components/popup/ReferralForm';\nimport ReferCandidateForm from 'components/popup/ReferCandidateForm';\nimport * as notification from 'actions/Notification';\nimport { numberWithCommas } from 'util/functions.js';\nimport { Helmet } from 'react-helmet';\nimport { isMobile } from 'util/functions';\nimport Tour from 'reactour'\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { WEB_IMAGE_URL, INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\n\nconst chartData = [\n  {name: '6.00', uv: 500, pv: 1100, amt: 20},\n  {name: '7.00', uv: 600, pv: 1600, amt: 21},\n  {name: '8.00', uv: 500, pv: 1900, amt: 29},\n  {name: '9.00', uv: 600, pv: 2100, amt: 20},\n  {name: '10.00', uv: 700, pv: 2500, amt: 28},\n  {name: '11.00', uv: 800, pv: 2200, amt: 32},\n  {name: '12.00', uv: 700, pv: 2000, amt: 21},\n  {name: '13.00', uv: 800, pv: 1900, amt: 25},\n  {name: '14.00', uv: 850, pv: 1700, amt: 29},\n  {name: '15.00', uv: 1000, pv: 2100, amt: 33},\n];\n\n\nclass JobContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      noJobFound: false,\n      activeJob: this.props.activeJob,\n      \n      //userType: null,\n      postDate: null,\n      jobTitle: '',\n      company: null,\n      category: [],\n      location: '',\n      city: '',\n      summary: '',\n      responsibility: [],\n     \trequirement: [],\n      salary: '',\n      experience: '',\n      industry: '',\n      //subIndustry: '',\n      majorSpeciality: [],\n      minorSpeciality: [],\n      majorLanguage: [],\n      minorLanguage: [],\n      \n      expertName: '',\n      expertEmail: '',\n      expertPhone: '',\n      expertPictureUrl: '',\n      expertInsight: '',\n      \n      viewCount: 0,\n      applyCount: 0,\n      interviewCount: 0,\n      referralCount: 0,\n      \n      isExclusive: false,\n      isInterested: false,\n      isEligible: false,\n      isApplied: false,\n      isSaved: false,\n      isFeatured: false,\n      \n      loginModalIsOpen: false,\n      signupModalIsOpen: false,\n      \n      //Candidate Referral \n      refUrl:'',\n      referralModalIsOpen: false,\n      referCandidateOpen: false,\n      \n      //Admin Recommend Jobs\n      showRecommendPopup: false,\n      isTourOpen: false\n    }\n  }\n  \n  componentDidMount() {\n    //from JD\n    //if(this.props.activeJob)\n    //console.log(this.props.history);\n    this.selectJob();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    //From JobList\n    if (prevState.activeJob !== this.state.activeJob || prevProps.isLoggedin !== this.props.isLoggedin) {\n      this.setState({\n        activeJob : this.state.activeJob\n      });\n      this.selectJob();\n    }\n  }\n  \n  noJobFound = () => {\n    this.setState({\n      loading : false,\n      noJobFound : true\n    })\n  }\n  \n  selectJob = () => {\n    var jobId = this.state.activeJob;\n    var refId;\n    if(this.props.match)\n      refId = (this.props.match.params.refId) ? this.props.match.params.refId : '';\n    \n    if (jobId) {\n      axios.get('/api/jobs/get/job/'+jobId+'/'+refId)\n      .then(res => {\n        console.log(res.data);\n        if (res.data.isSuccess) {\n          this.setState({\n            postDate : (res.data.postDate==null) ? null : res.data.postDate,\n            jobTitle : (res.data.job.jobTitle==null) ? '' : res.data.job.jobTitle,\n            company: (res.data.job.company==null) ? null : res.data.job.company,\n            category: (res.data.job.category==null) ? [] : res.data.job.category,\n            location: (res.data.job.location==null) ? '': res.data.job.location,\n            city: (res.data.job.address && res.data.job.address.city) ? res.data.job.address.city : null,\n            industry: (res.data.job.industry==null) ? '' : res.data.job.industry,\n            //subIndustry: (res.data.job.subIndustry==null) ? '' : res.data.job.subIndustry,\n            experience: (res.data.job.yearMin==null) ? '' : res.data.job.yearMin,\n            salary: (res.data.job.salaryMax==null) ? '' : res.data.job.salaryMax,\n            refererReward: (res.data.refererReward==null) ? '' : res.data.refererReward,\n            majorSpeciality: (res.data.job.speciality==null) ? [] : res.data.job.speciality.major,\n            minorSpeciality: (res.data.job.speciality==null) ? [] : res.data.job.speciality.minor,\n            majorLanguage: (res.data.job.languageProf==null) ? [] : res.data.job.languageProf.major,\n            minorLanguage: (res.data.job.languageProf==null) ? [] : res.data.job.languageProf.minor,\n            summary: (res.data.job.summary==null) ? '' : res.data.job.summary,\n            responsibility: (res.data.job.responsibility==null) ? [] : res.data.job.responsibility,\n            requirement: (res.data.job.requirement==null) ? [] : res.data.job.requirement,\n            \n            expertName: (res.data.job.expertInsight==null) ? '' : res.data.job.expertInsight.admin._id.name.firstName + ' ' + res.data.job.expertInsight.admin._id.name.lastName,\n            expertEmail: (res.data.job.expertInsight==null) ? '' : res.data.job.expertInsight.admin._id.email,\n            expertPhone: (res.data.job.expertInsight==null) ? '' : res.data.job.expertInsight.admin._id.phone.dial + ' ' + res.data.job.expertInsight.admin._id.phone.number,\n            expertPictureUrl: (res.data.job.expertInsight==null) ? '' : res.data.job.expertInsight.admin._id.pictureUrl,\n            expertInsight: (res.data.job.expertInsight==null) ? '' : res.data.job.expertInsight.content,\n            \n            isExclusive: (res.data.job.isExclusive==null) ? false : res.data.job.isExclusive,\n            isInterested: (res.data.isInterested==null) ? false : res.data.isInterested,\n            isEligible: (res.data.isEligible==null) ? false : res.data.isEligible,\n            isApplied: (res.data.isApplied==null) ? false : res.data.isApplied,\n            isFeatured: (res.data.job.isFeatured==null) ? false : res.data.job.isFeatured,\n            \n            viewCount: (res.data.job.viewCount==null) ? 0 : res.data.job.viewCount,\n            applyCount: (res.data.applyCount==null) ? 0 : res.data.applyCount,\n            interviewCount: (res.data.interviewCount==null) ? 0 : res.data.interviewCount,\n            referralCount: (res.data.referralCount==null) ? 0 : res.data.referralCount,\n          });\n\n          this.setState({\n            loading:false\n          })\n           var rightSide = this.refs.jobContentContainer;\n           if(this.props.isMobileBackbtn)\n              setTimeout(function() {rightSide.scrollTo(0, 0);},450);\n           else\n              rightSide.scrollTo(0, 0);\n        }\n        else {\n          //alert(\"This job does not exist anymore.\");\n          this.noJobFound();\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n    else if(jobId == null)\n    {\n       this.noJobFound();\n    }\n  }\n  \n\n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.activeJob!==prevState.activeJob){\n      return {activeJob : nextProps.activeJob};\n    }\n    else return null;\n  }\n  \n  interestJob = () => {\n    if (!this.props.isLoggedin) {\n      notification.warning(\"Please login to perform the action.\");\n      this.setState({loginModalIsOpen: true}); //Pass redirectUrl to LoginForm\n      //this.props.history.push({ pathname: '/login', search: \"?redirect=/job/\"+this.state.activeJob, /*state: { from: this.props.location }*/ });\n    }\n    else if (!this.props.userData.isVerified) {\n      notification.warning(\"Please verify your account before performing this action.\");\n    }\n    else if (!this.props.candidateData.isCompleted) {\n      notification.warning(\"Please complete your registration before performing this action.\");\n      //this.props.history.push('/candidate/register');\n      this.props.history.push({ pathname: '/candidate/register', state: { from: \"/job/\"+this.state.activeJob } });\n    }\n    else {\n      var refId;\n      if(this.props.match)\n        refId = (this.props.match.params.refId) ? this.props.match.params.refId : null;\n      const data = {\n        jobId: this.state.activeJob,\n        refId: refId\n      };\n      axios.post('/api/candidates/set/job/interest', data)\n      .then(res => {\n        //console.log(res.data);\n        if (res.data.isSuccess) {\n         notification.success(\"The company name will be revealed once you are considered as an eligible candidate.\");\n         this.setState({isInterested: true});\n        }\n        else {\n         notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  applyJob = () => {\n    if (!this.props.isLoggedin) {\n      notification.warning(\"Please login to perform the action.\");\n      this.setState({ loginModalIsOpen: true }); //Pass redirectUrl to LoginForm\n      //this.props.history.push({ pathname: '/login', search: \"?redirect=/job/\"+this.state.activeJob, /*state: { from: this.props.location }*/ });\n    }\n    else if (!this.props.userData.isVerified) {\n      notification.warning(\"Please verify your account before performing this action.\");\n    }\n    else if (!this.props.candidateData.isCompleted) {\n      notification.warning(\"Please complete your registration before performing this action.\");\n      //this.props.history.push('/candidate/register');\n      this.props.history.push({ pathname: '/candidate/register', state: { from: \"/job/\"+this.state.activeJob } });\n    }\n    else {\n      var refId;\n      if(this.props.match)\n        refId = (this.props.match.params.refId) ? this.props.match.params.refId : null;\n      const data = {\n        jobId: this.state.activeJob,\n        refId: refId\n      };\n      axios.post('/api/candidates/set/application/apply', data)\n      .then(res => {\n        if (res.data.isSuccess) {\n          notification.success(\"You have applied the job successfully.\");\n          this.setState({isApplied: true});\n        }\n        else {\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  confirmApply = () => {\n    if (!this.props.isLoggedin) {\n      notification.warning(\"Please login to perform the action.\");\n      this.setState({ loginModalIsOpen: true }); //Pass redirectUrl to LoginForm\n      //this.props.history.push({ pathname: '/login', search: \"?redirect=/job/\"+this.state.activeJob, /*state: { from: this.props.location }*/ });\n    }\n    else if (!this.props.userData.isVerified) {\n      notification.warning(\"Please verify your account before performing this action.\");\n    }\n    else if (!this.props.candidateData.isCompleted) {\n      notification.warning(\"Please complete your registration before performing this action.\");\n      //this.props.history.push('/candidate/register');\n      this.props.history.push({ pathname: '/candidate/register', state: { from: \"/job/\"+this.state.activeJob } });\n    }\n    else {\n      const data = {\n        jobId: this.state.activeJob,\n      };\n      axios.post('/api/candidates/set/application/confirm', data)\n      .then(res => {\n        if (res.data.isSuccess) {\n          notification.success(\"You have confirmed the application successfully.\");\n          this.setState({isApplied: true});\n        }\n        else {\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  openReferralForm = () => {\n    console.log('get referral URL');\n    if (!this.props.isLoggedin) {\n      notification.warning(\"Please login to perform the action.\");\n      this.setState({loginModalIsOpen: true});\n      //this.props.history.push({ pathname: '/login', search: \"?redirect=/job/\"+this.state.activeJob, /*state: { from: this.props.location }*/ });\n    }\n    else if (!this.props.userData.isVerified) {\n      notification.warning(\"Please verify your account before performing this action.\");\n    }\n    else if (!this.props.candidateData.isCompleted) {\n      notification.warning(\"Please complete your registration before performing this action.\");\n      this.props.history.push('/candidate/register');\n    }\n    else {\n      const data = {\n        jobId: this.state.activeJob,\n      };\n      axios.post('/api/candidates/set/referral/url', data)\n      .then(res => {\n        console.log(res.data);\n        if (res.data.isSuccess) {\n          console.log(res.data)\n          this.setState({\n            refUrl    : \"https://\"+window.location.hostname+\"/job/\"+this.state.activeJob+\"/\"+res.data.refId,\n            referralModalIsOpen: true\n          });\n        }\n        else {\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  openSignupModal = () => {\n    this.setState({signupModalIsOpen: true, loginModalIsOpen: false});\n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name] : false });\n  }\n  \n  openReferCandidate = (e) => {\n    e.preventDefault(); \n    this.setState({\n      referCandidateOpen: true\n    });\n  }\n  \n  closeTour = () => {\n    this.setState({ isTourOpen: false });\n  };\n  disableBody = target => disableBodyScroll(target);\n  enableBody = target => enableBodyScroll(target);\n  \n  getJobPostingSchema = () => {\n        const { postDate, jobTitle, company, location, city, industry, salary, summary} = this.state;\n        let data = {\n          \"@context\" : \"https://schema.org/\",\n          \"@type\" : \"JobPosting\",\n          \"title\" : jobTitle,\n          \"description\" : \"<p>\" + summary + \"</p>\",\n          \"datePosted\" : moment(postDate, 'Do MMMM YYYY').format('YYYY-MM-DD'),\n          \"validThrough\" : moment(postDate, 'Do MMMM YYYY').add(3, 'M').format('YYYY-MM-DD'),\n          \"employmentType\" : \"FULL_TIME\",\n          \"hiringOrganization\" : {\n            \"@type\" : \"Organization\",\n            \"name\" : (company == null) ? \"Company Hided\" : company,\n            \"sameAs\" : \"https://www.jobslab.io\",\n            \"logo\" : (company == null) ? encodeURI(INDUSTRY_ICON_URL + (industry[0] ? industry[0]._id.name : \"\") + \".png\") : encodeURI(COMPANY_ICON_URL+company+\".png\")\n          },\n          \"jobLocation\": {\n          \"@type\": \"Place\",\n            \"address\": {\n            \"@type\": \"PostalAddress\",\n            \"addressCountry\": location.name\n            }\n          }\n        }\n\n      // salary\n      if(salary != null) {\n          data['baseSalary'] = {\n            \"@type\": \"MonetaryAmount\",\n            \"currency\": \"HKD\",\n            \"value\": {\n              \"@type\": \"QuantitativeValue\",\n              \"value\": salary,\n              \"unitText\": \"MONTH\"\n            }\n          }\n      }\n      return JSON.stringify(data);\n  };\n  \n   render() {\n    const {isTourOpen} = this.state;\n    const { loading, noJobFound, isInterested, isEligible, isApplied, referralModalIsOpen } = this.state;\n    const { postDate, activeJob, jobTitle, company, location, city, industry, salary, refererReward, experience, majorSpeciality, minorSpeciality, majorLanguage, minorLanguage, summary, responsibility, requirement } = this.state;\n    const {isSearch, isNotInsideList} = this.props;\n    const isMobileView = isMobile();\n    var referRatio = Math.ceil((this.state.referralCount > 0 ?this.state.referralCount:0 )/(this.state.viewCount>0 ? this.state.viewCount:1) * 100);\n    referRatio = referRatio > 0 ? referRatio : 1;\n    var interviewRatio = Math.ceil((this.state.interviewCount > 0 ?this.state.interviewCount:0 )/(this.state.viewCount>0 ? this.state.viewCount:1) * 100);\n    interviewRatio = interviewRatio > 0 ? interviewRatio : 1;\n    return (\n      <div ref=\"jobContentContainer\" className={isMobileView ? \"\" : (isNotInsideList==true ? \"jobContent-container\" : \"jobContent-container-insideList\") }>\n        <Helmet>\n              <title>JobsLab</title>\n        </Helmet>\n      <Tour\n          steps={steps}\n          isOpen={isTourOpen}\n          rounded={10}\n          onRequestClose={this.closeTour}\n          onAfterOpen={this.disableBody}\n          onBeforeClose={this.enableBody}\n          showCloseButton = {false}\n        />\n      { loading ?\n          <div className=\"loader-view\"\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n            <CircularProgress/>\n          </div> : \n        noJobFound ?\n          <div className=\"jobNotFound\">\n            {/*<span>\n              <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n            </span>*/}\n            <img src={encodeURI(WEB_IMAGE_URL+\"notfound/notfound.png\")}/>\n            <span>\n              {\n                isSearch ?\n                'Oops! No job matches found. Please try another search criteria.'\n                : 'Oops! No job found. The job may be closed temporarly.'\n              }\n            </span> \n          </div> :\n      <div>\n        {this.props.isMobileBackbtn ? <Button variant=\"contained\" className=\"jr-btn bg-white job-back-btn\" onClick={() => this.props.triggerJobDetailsMobile(false)}>\n                                            <i class=\"fas fa-arrow-left\"></i> Search Jobs\n                                        </Button>\n                                      : \"\"}\n        <Helmet>\n              <title>{jobTitle + (company?\" - \" + company:\"\") } | JobsLab</title>\n              <script className='structured-data-list' type=\"application/ld+json\">{this.getJobPostingSchema()}</script>\n              <meta name=\"description\" content=\"Reveal leading company names within your industry and unlock a great job\" />\n        </Helmet>\n        <div className=\"jr-profile-banner joblist-banner\" \n        style={{/*'background-color': '#095680'*/\n        'background-image':'linear-gradient(rgb(17 0 111 / 45%), rgb(66 88 90 / 56%)), url(https://media.jobslab.io/web/picture/jobContent/job-bg2.png)',\n        'background-size':'cover'}}>\n        \n            <div className=\"color-overlay\"></div>\n        <div className=\"jr-profile-container\">\n          <div className=\"jr-profile-banner-top\">\n            <div className=\"jr-profile-banner-top-left jobContent-title-container col-12 col-lg-8 col-sm-12\"> {/* joblist-limit-width */}\n              <div className={`jr-profile-banner-avatar ${this.state.isExclusive ? \"exclusive-content\" : \"\"}`} style={{'background':'white'}}>\n                <img \n                  className=\"jobContent-img-size\" alt=\"...\" \n                  src={(company == null) ? \n                  encodeURI(INDUSTRY_ICON_URL + (industry[0] ? industry[0]._id.name : \"\") + \".png\") : \n                  encodeURI(COMPANY_ICON_URL+company+\".png\")} \n                />\n                {/*<img className=\"jobContent-img-size\" alt=\"...\" src={(company == null) ? process.env.PUBLIC_URL+\"/industry/\"+((industry[0]) ? industry[0]._id.name : \"\")+\".png\" : encodeURI(\"https://hkjobslab.s3-ap-southeast-1.amazonaws.com/company/\"+company+\".png\")} />*/}\n              </div>\n              <div className=\"jr-profile-banner-avatar-info col-11 col-lg-7 col-sm-8\"> {/* joblist-limit-width */}\n               <div className=\"jobContent-title-bar\">\n                    <h2 className=\"mb-2 jr-mb-sm-3 mt-sm-2 jr-fs-xxl jr-font-weight-light\" style={{'font-weight': 'bold','line-height': '1.2'}}>{jobTitle}</h2>\n                    <p className=\"mb-0 jr-fs-lg\">{company}</p>\n                    <span><i className=\"la la-map-marker\"></i>{city ? city+\", \"+location.name : location.name }</span>\n                    {postDate != null ? <p>Posted on {postDate}</p> : \"\"}\n               </div>\n\n                <div className=\"job-reward\">\n                    <span className=\"jr-tag d-inline-block mr-1\">Candidate Reward: ${numberWithCommas(5000)}</span>\n                    <span className=\"jr-tag d-inline-block\">Referer Reward: ${ numberWithCommas(refererReward ? refererReward : 0 ) }</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"jr-profile-banner-top-right job-btn-group col-lg-4 col-sm-5 col-10\">\n              <ul className=\"jr-follower-list job-btn-group-ul\" style={{'float': 'right'}}>\n                <li>\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\" style={{'margin-bottom':'10px'}}>\n                      {\n                       (this.props.userType=='admin') ? \n                          (<Button variant=\"contained\" color=\"primary\" className=\"jr-btn joblist-btn-size\" onClick={ (e) => this.openReferCandidate(e) }>\n                              <font size=\"+2\"><i className=\"zmdi zmdi-accounts mr-1\"/></font>\n                              <font size=\"+1\">Refer Candidates</font>\n                           </Button>\n                          )\n                          :\"\"\n                      }\n                      \n                      {(this.props.userType=='candidate' || this.props.userType==\"\") &&\n                        (\n                           (company==null) ? \n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn btn-primary joblist-btn-size step01\" disabled={(isInterested ? true : false)} onClick={this.interestJob}>\n                                <font size=\"+1\"><i className=\"zmdi zmdi-lock-open mr-1\"/></font>\n                                {/*<font style={{fontSize: '16px'}}>&nbsp;Reveal Company</font>*/}\n                                <font style={{fontSize: '16px'}}>&nbsp;Apply Now</font>\n                              </Button>\n                              : ( isEligible ?\n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn joblist-btn-size\" disabled={(isApplied ? true : false)} onClick={this.confirmApply}>\n                                <font size=\"+1\"><i className=\"zmdi zmdi-file-plus mr-1\"/></font>\n                                <font style={{fontSize: '16px'}}>&nbsp;Confirm Apply</font>\n                              </Button>\n                              : \n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn joblist-btn-size\" disabled={(isApplied ? true : false)} onClick={this.applyJob}>\n                                <font size=\"+1\"><i className=\"zmdi zmdi-file-plus mr-1\"/></font>\n                                <font style={{fontSize: '16px'}}>&nbsp;Apply Now</font>\n                              </Button>\n                            )\n                        )\n                      }\n                  </span>\n                  <span className=\"jr-follower-title jr-fs-lg jr-font-weight-medium\">\n                    {\n                       (this.props.userType=='admin') ? \n                          (<Button variant=\"contained\" color=\"primary\" className=\"jr-btn joblist-btn-size\" onClick={() => this.props.history.push('/postjob/'+activeJob)}>\n                              <font size=\"+2\"><i className=\"zmdi zmdi-edit mr-1\"/></font>\n                              <font size=\"+1\">Edit Job</font>\n                           </Button>\n                          )\n                          :\"\"\n                      }\n                      { ((this.props.userType!='admin') && (this.props.userType!='client')) && (this.props.userType=='candidate' || this.props.userType=='') &&\n                        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn joblist-btn-size step02\" onClick={ (e) => this.openReferralForm(e)}>\n                           <font size=\"+1\"><i className=\"zmdi zmdi-accounts mr-1\"/></font>\n                           <font style={{fontSize: '16px'}}>&nbsp;Refer Now</font>\n                        </Button>\n                      }\n                      {/*\n                      <div style={{'display':'inline-block'}}>\n                            Refer\n                          </div>\n                      <font size=\"+2\"><b>$8,000 </b></font>\n                             Referral Reward\n                      \n                      \n                      */}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"jr-profile-banner-bottom\">\n          {/*\n            <div className=\"jr-tab-list\">\n              <ul className=\"jr-navbar-nav\">\n                <li>\n                  <span className=\"jr-link\">Timeline</span>\n                </li>\n                <li>\n                  <span className=\"jr-link\">About</span>\n                </li>\n                <li>\n                  <span className=\"jr-link\">Photos</span>\n                </li>\n                <li>\n                  <span className=\"jr-link\">Friends <span className=\"jr-fs-xs\">287</span></span>\n                </li>\n                <li>\n                  <span className=\"jr-link\">More</span>\n                </li>\n              </ul>\n            </div>\n            \n            <span className=\"jr-link jr-profile-setting\">\n              <i className=\"zmdi zmdi-settings mr-2\"/>\n              <span className=\"d-inline-flex align-middle ml-1 jr-ml-sm-0\">Setting</span>\n            </span>\n            */}\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"jr-profile-content joblist-padding\">\n          <div className=\"row\">\n            <div className=\"col-xl-8 col-lg-8 col-md-7 col-12\">\n              <div> {/* className=\"jobContent-padding-left\"*/}\n                <Widget styleName=\"jr-card-profile\">\n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Career Experts Insight</h3>\n                  </div>\n                  <div className=\"expert-insight\">\n       \t\t\t \t\t\t    <blockquote><p><i>“</i><span>\n       \t\t\t \t\t\t     {this.state.expertInsight}\n       \t\t\t \t\t\t    <i>”</i></span></p>\n                      <strong>{this.state.expertName} A Career Expert with JobsLab</strong>\n                      <img src={this.state.expertPictureUrl} alt=\"\" />\n                      </blockquote>\n    \t\t\t \t\t\t\t</div>\n            \n                </Widget>\n                \n                <Widget styleName=\"jr-card-profile\">\n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Job Description</h3>\n                  </div>\n                  <div>\n                  {summary}\n                  </div>\n                </Widget>\n                \n                <Widget styleName=\"jr-card-profile\">\n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Responsibilities</h3>\n                  </div>\n                  <ul style={{'padding-left': '20px'}}>\n                      {responsibility.map(x => { return (x) ? <li>{x}</li> : \"\" })}\n             \t\t\t</ul>\n                </Widget>\n                \n                <Widget styleName=\"jr-card-profile\">\n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Requirements</h3>\n                  </div>\n                   <ul style={{'padding-left': '20px'}}>\n               \t\t\t \t\t{requirement.map(x =>  { return (x) ? <li>{x}</li> : \"\" })}\n               \t\t\t</ul>\n                </Widget>\n                \n                <SkillTag skills={majorSpeciality.concat(minorSpeciality)} \n                          languages={majorLanguage.concat(minorLanguage)} />\n                \n              </div>\n            </div>\n            \n            <div className=\"col-xl-4 col-lg-4 col-md-5 col-12\">\n              <div> {/* className=\"jobContent-padding-right\"*/}\n                <Widget title=\"Job Overview\" styleName=\"jr-card-profile-sm jobContent-card\">\n                      <div key={1} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\n                            <div className=\"mr-3\">\n                              <i className={`la la-briefcase jr-fs-xxl text-grey`}/>\n                            </div>\n                            <div className=\"media-body\">\n                              <span className=\"mb-0 text-grey jr-fs-sm\">Industry</span>\n                              {\n                                industry.map( obj => {\n                                  return(obj) ? <p className=\"mb-0\">{obj._id.name}</p> : \"\"\n                                })\n                              }\n                            </div>\n                      </div>\n                      <div key={2} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\n                            <div className=\"mr-3\">\n                              <i className={`zmdi zmdi-money-box jr-fs-xxl text-grey`}/>\n                            </div>\n                            <div className=\"media-body\">\n                              <span className=\"mb-0 text-grey jr-fs-sm\">Monthly Salary (HKD)</span>\n                              <p className=\"mb-0\">{salary ? \"$\" + numberWithCommas(salary) : \"Attractive\"}</p>\n                            </div>\n                      </div>\n                      <div key={3} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\n                            <div className=\"mr-3\">\n                              <i className={`zmdi zmdi-time jr-fs-xxl text-grey`}/>\n                            </div>\n                            <div className=\"media-body\">\n                              <span className=\"mb-0 text-grey jr-fs-sm\">Experience</span>\n                              <p className=\"mb-0\">{experience} years</p>\n                            </div>\n                      </div>\n                 </Widget>\n                 \n                 <Widget title=\"Contact Career Expert\" styleName=\"jr-card-profile-sm jobContent-card\">\n                     <div key={1} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\n                            <div className=\"mr-3\">\n                              <i className={`zmdi zmdi-account jr-fs-xxl text-grey`}/>\n                            </div>\n                            <div className=\"media-body\">\n                              <span className=\"mb-0 text-grey jr-fs-sm\">Name</span>\n                              <p className=\"mb-0\">{this.state.expertName}</p>\n                            </div>\n                      </div>\n                      <div key={2} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\n                            <div className=\"mr-3\">\n                              <i className={`zmdi zmdi-email jr-fs-xxl text-grey`}/>\n                            </div>\n                            <div className=\"media-body\">\n                              <span className=\"mb-0 text-grey jr-fs-sm\">Email</span>\n                              <p className=\"mb-0\">{this.state.expertEmail}</p>\n                            </div>\n                      </div>\n                      <div key={3} className=\"media align-items-center flex-nowrap jr-pro-contact-list\">\n                            <div className=\"mr-3\">\n                              <i className={`zmdi zmdi-phone jr-fs-xxl text-grey`}/>\n                            </div>\n                            <div className=\"media-body\">\n                              <span className=\"mb-0 text-grey jr-fs-sm\">Phone</span>\n                              <p className=\"mb-0\">{this.state.expertPhone}</p>\n                            </div>\n                      </div>\n                 </Widget>\n           \n                  <ChartCard styleName=\"text-white shadow bg-orange step03\">\n                    <div className=\"chart-title\">\n                      <h2 className=\"mb-1\">{ this.state.viewCount }</h2>\n                      <p>Candidates viewed this job</p>\n                    </div>\n                    <div className=\"p-3\">\n                      <div className=\"d-flex flex-row p-0\">\n                        <p className=\"text-white m-0\">Candidates referred this job to friends</p>\n                        <p className=\"text-white ml-auto m-0\">{referRatio} %</p>\n                      </div>\n                      <Progress className=\"shadow-lg mb-2 my-1 match-progress-bar\" color=\"green\" value={ referRatio } />\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"text-white m-0\">Candidates currently interviewing</p>\n                        <p className=\"text-white ml-auto m-0\">{ interviewRatio } %</p>\n                      </div>\n                      <Progress className=\"shadow-lg my-1 match-progress-bar\" color=\"green\" value= { interviewRatio } />\n                    </div>\n                  </ChartCard>\n                  \n                  <ReportBox\n                    styleName=\"bg-primary text-white p-3 shadow step04\"\n                    price={ this.state.applyCount }\n                    icon=\"accounts-alt\"\n                    detail=\"Candidates Applied\"\n                    subHeadingColor=\"text-white\"\n                  >\n                    <ResponsiveContainer width=\"100%\" height={100}>\n                      <BarChart data={chartData} maxBarSize={4}\n                                margin={{left: 0, right: 0, top: 10, bottom: 10}}>\n                        <Bar dataKey='amt' fill='white'/>\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </ReportBox>\n                  \n                  <Link to={\"/candidate/profile\"}>\n                    <Widget styleName=\"jr-card-profile p-3 bg-info\">\n                      <div className=\"row \">\n                        <div className=\"col-6 pr-0\">\n                          <span className=\"mb-1 text-white\">Record Your Elevator Pitch to Enhance the Chance of Getting an Interview</span>\n                        </div>\n                        <div className=\"col-6 p-0 m-auto\">\n                            <img className=\"w-100\" src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/jobContent/video-record.png\"/>\n                        </div>\n                      </div>\n                    </Widget>\n                  </Link>\n                  \n                </div>\n            </div>\n          </div>\n      </div>\n      \n      <LoginForm isOpen={this.state.loginModalIsOpen} redirectUrl={\"/job/\"+this.state.activeJob} openSignupModal={this.openSignupModal} closeModal={() => this.closeModal('loginModalIsOpen')} />\n      <SignupForm isOpen={this.state.signupModalIsOpen} closeModal={() => this.closeModal('signupModalIsOpen')} />\n      \n      {(this.props.userType=='admin') && \n        <ReferCandidateForm jobId={this.state.activeJob} isOpen={this.state.referCandidateOpen} closeModal={() => this.closeModal('referCandidateOpen')} />\n      }\n      <ReferralForm refUrl={this.state.refUrl} refCount={this.state.referralCount} isOpen={this.state.referralModalIsOpen} closeModal={() => this.closeModal('referralModalIsOpen')} />\n    </div>\n    }\n     </div>\n    )\n  }\n}\n\nconst steps = [\n  {\n    selector: '.step01',\n    content: 'Click this button to reveal the company name',\n  },\n  {\n    selector: '.step02',\n    content: 'Click this button to refer to your friends',\n  },\n  {\n    selector: '.step03',\n    content: 'This is step3',\n  },\n  {\n    selector: '.step04',\n    content: 'This is the last step',\n  },];\n  \nconst mapStateToProps = (state) => {\n  const { isLoggedin, userType, userData, candidateData } = state.auth;\n  return { isLoggedin, userType, userData, candidateData }\n};\n\nexport default withRouter(connect(mapStateToProps,null)(JobContent));\n\n//export default withRouter(JobContent);","/home/ubuntu/environment/jobslab-web/src/components/JobList/JobLeftList/index.js",["2829","2830","2831","2832","2833","2834","2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849","2850"],"import React, {cloneElement, Component} from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport SearchBox from 'components/SearchBox';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Progress} from \"reactstrap\";\nimport Modal from 'react-modal';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport axios from \"axios\";\nimport InfiniteScroll from 'react-infinite-scroller';\n//import Badge from '@material-ui/core/Badge';\nimport {Badge} from 'reactstrap';\n\nimport Widget from \"components/Widget\";\nimport Filter from \"components/JobList/Filter\";\n\nimport { WEB_IMAGE_URL, INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\n\nimport {isMobile} from 'util/functions';\nimport modalStyle from 'styles/modalStyle';\nModal.setAppElement(document.getElementById('root'));\n\nvar queryString = require('query-string');\n\nclass JobLeftList extends React.Component {\n   constructor(props) {\n    super(props);\n    this.state = {\n    hasMore: true,\n    isProcessing: false,\n\t  //pageSize: 20,\n\t  pageNum: 1,\n\t  jobList: [],\n    dense: false,\n    secondary: true,\n    jobListSearchModalIsOpen : false,\n    modalStyleState : modalStyle.jobListModalStyle,\n    searchBox: false,\n    searchText: '',\n    \n    location: null,\n    location_list: [],\n    industry: null,\n    industry_list: [],\n\n    salary: { min: 0, max: 500000 },\n    experience: { min: 0, max: 40 },\n\t  lastJobId:null,\n\t  noRecordFound:false,\n\t  pageReady: false,\n\t  suggestions: [],\n\t  searchList:[],\n\t  suggestTheme:{},\n    checkedItemsIndustry: new Map(),\n\t  checkedItemsJobType: new Map(),\n\t  category_list:[],\n\t  locationSelected: [],\n\t  industrySelected: [],\n\t  isCand: false,\n\t  enabledAIEngine:true,\n\t  filterCount: 0,\n  }; \n     \n     \n   }\n  componentDidMount() {\n    this.initData();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initData();\n    }\n  }\n  \n  initData() {\n    if(!this.props.listLoading) \n    {\n      console.log(\"init data:\" + this.props.listLoading);\n    //default search values\n      var params = queryString.parse(this.props.location.search);\n      var searchText = (params.q) ? params.q : \"\";\n     // var location = this.state.location_list.find((obj) => { return ((obj.value == params.loc) ? obj : ((obj.label == \"Hong Kong\") ? obj : null))});\n      var location = (params.loc) ? params.loc : \"\";\n      //var location = (this.state.location_list.hasOwnProperty(params.loc)) ? params.loc : (this.state.location_list.hasOwnProperty('5cd445e5f6bab6e3dac72fa0') ? '5cd445e5f6bab6e3dac72fa0' : 'default');\n      //var industry = this.state.industry_list.find((obj) => { return ((obj.value == params.ind) ? obj : null) });\n      //var industry = (this.state.industry_list.hasOwnProperty(params.ind)) ? params.ind : 'default';\n      var industry = (params.ind) ? params.ind : \"\";\n      var jobType = (params.jt) ? params.jt : \"\";\n      var enabledAIEngine = (params.enAI == \"false\") ? false : true;\n      \n      var tempMap = new Map();\n      \n      //job type\n      jobType.split(\",\").forEach(function (item) {\n        if(item != \"\")\n          tempMap.set(item, true);\n      });\n      jobType = tempMap;\n      \n      // industry\n      /*\n      tempMap = new Map();\n      industry.split(\",\").forEach(function (item) {\n        if(item != \"\")\n          tempMap.set(item, true);\n      });\n      industry = tempMap;\n      */\n      // industry\n      var selectedIndustry = [];\n      var industryList = this.props.industryList ? this.props.industryList : [];\n      console.log(industryList);\n      console.log(industry);\n      industry.split(\",\").forEach(function (item) {\n          var tempIndustry = industryList.find((industryObj) => { return ((industryObj.value == item) ? industryObj : null) });\n          console.log(tempIndustry);\n          if(tempIndustry)\n            selectedIndustry.push(tempIndustry);\n      });\n      \n      industry = selectedIndustry;\n      \n       // location\n      var selectedLocation = [];\n      var countryList = this.props.countryList ? this.props.countryList : [];\n\n      location.split(\",\").forEach(function (item) {\n          var tempLocation = countryList.find((locationObj) => { return ((locationObj.value == item) ? locationObj : null) });\n          if(tempLocation)\n            selectedLocation.push(tempLocation);\n      });\n      \n      location = selectedLocation;\n      \n      //console.log(\"jobType\"+jobType);\n      var minSalary = (parseInt(params.minSal)) ? parseInt(params.minSal) : 0;\n      var maxSalary = (parseInt(params.maxSal)) ? parseInt(params.maxSal) : 500000;\n      maxSalary = (maxSalary > 500000) ? 500000 : maxSalary;\n      minSalary = (minSalary >= maxSalary) ? (maxSalary - 10000) : minSalary;\n      var minExperience = (parseInt(params.minExp)) ? parseInt(params.minExp) : 0;\n      var maxExperience = (parseInt(params.maxExp)) ? parseInt(params.maxExp) : 40;\n      maxExperience = (maxExperience > 40) ? 40 : maxExperience;\n      minExperience = (minExperience >= maxExperience) ? (maxExperience - 10) : minExperience;\n      this.setState({\n        searchText : searchText,\n        locationSelected: location,\n        industrySelected: industry,\n        salary:{ min: minSalary, max: maxSalary},\n        experience:{ min: minExperience, max: maxExperience},\n        //checkedItemsIndustry: industry,\n        //checkedItemsJobType: jobType,\n        enabledAIEngine: enabledAIEngine\n      }, () => {\n        this.getFilterNum();\n        //cannot convert map as json, get from url\n        if(!this.state.pageReady)\n        {\n           this.setState({\n            hasMore: true\n           }); \n        }\n        this.setState({\n          //checkedItemsIndustry: industry,\n          checkedItemsJobType: jobType,\n          pageReady: true\n        }); \n      });\n      \n      //restore list position for mobile view\n      let previousInfo = window.localStorage.getItem(\"previousInfo\");\n      let jsonInfo = JSON.parse(previousInfo);\n      \n      if(jsonInfo)\n      {\n        window.localStorage.removeItem(\"previousInfo\");\n        this.setState({ ...jsonInfo.state\n        }, () => {\n          document.getElementById('inif-container').scrollTop = jsonInfo.scrollY;\n        });\n      }\n      \n    }\n  }\n  \n  getFilterNum() {\n    var count = 0;\n    if(!(this.state.salary.min == 0 && this.state.salary.max == 500000))\n      count+=1;\n    if(!(this.state.experience.min == 0 && this.state.experience.max == 40))\n      count+=1;\n    //if( Array.from(this.state.checkedItemsIndustry.values()).includes(true) )\n    if(this.state.locationSelected.length > 0)\n      count+=1;\n    if(this.state.industrySelected.length > 0)\n      count+=1;\n    //if( Array.from(this.state.checkedItemsJobType.values()).includes(true) )\n    //  count+=1;\n    if(this.state.isCand != false)\n      count+=1;\n    if(this.state.enabledAIEngine != true)\n      count+=1;\n      \n    this.setState({\n      filterCount: count\n    })\n  }\n  \n  /*selectSearchText(text){\n     this.setState({\n      searchText: text,\n    });\n  }*/\n  \n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n  }\n  \n  handleSelectChange = (object, name) => {\n      this.setState({ [name]: object });\n  }\n  \n  openModal = (e) => {\n    e.preventDefault();\n    this.setState({jobListSearchModalIsOpen: true});\n  }\n \n  afterOpenModal = () => {\n    //this.subtitle.style.color = '#f00';\n  }\n  \n  closeModal = () => {\n    this.setState({\n      jobListSearchModalIsOpen: false\n    });\n  }\n  \n  getMoreJd = () => {\n    if(this.state.pageReady && !this.state.isProcessing)\n    {\n     this.setState({\n       isProcessing: true\n     })\n     console.log(\"getMorejob:\" + this.state.pageReady + \", hasMOre\" + this.state.hasMore);\n     //console.log(\"this.state.pageReady:\" + this.state.pageReady);\n     var jobType = \"\"\n\n      this.state.checkedItemsJobType.forEach(function(value, key) {\n        if(value)\n          jobType += key + \",\";\n      });\n      if(jobType.length>0)\n      jobType = jobType.substr(0, jobType.length-1); \n      /*\n      var industry = \"\"\n\n      this.state.checkedItemsIndustry.forEach(function(value, key) {\n        if(value)\n          industry += key + \",\";\n      });\n      if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      */\n      var industry = \"\";\n    \n      this.state.industrySelected.forEach(function(object) {\n        if(object.value)\n          industry += object.value + \",\";\n      });\n      \n      if(industry.length>0)\n        industry = industry.substr(0, industry.length-1); \n        \n      var location = \"\"\n    \n      console.log(this.state.locationSelected);\n      this.state.locationSelected.forEach(function(object) {\n        if(object.value)\n          location += object.value + \",\";\n      });\n      \n      if(location.length>0)\n        location = location.substr(0, location.length-1); \n        \n      axios.post('/api/jobs/get/job/list/more' , {\n        lastJobId: this.state.lastJobId,\n        pageNum: this.state.pageNum,\n        //recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        //searchCountryId: this.state.location ? this.state.location.value : \"default\",\n        jobLocation: location,\n        searchIndustry: industry ? industry : \"default\",\n        minSalary: this.state.salary.min,\n        maxSalary: this.state.salary.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        jobType: jobType,\n        enabledAIEngine: this.state.enabledAIEngine\n      }) \n      .then(res => {\n        if (res.data.isSuccess) {\n          console.log(\"enter success get more job\");\n          this.setState({\n              jobList:  this.state.jobList.concat(res.data.jobList),\n              hasMore: (res.data.hasMore == true)? true : false,\n              lastJobId: (res.data.jobList.length > 0) ? res.data.jobList[res.data.jobList.length-1]._id: this.state.lastJobId,\n              pageNum: this.state.pageNum + 1\n          });\n          \n          //init first job\n          if(!this.props.activeJob && this.state.jobList.length > 0 && !isMobile())\n              this.props.updateActiveJob(this.state.jobList[0]._id, this.state, 0);\n          else if(!isMobile() && this.state.jobList.length == 0)\n              this.props.updateActiveJob(null, null, 0);\n              \n          console.log(\"call get more\");\n          //console.log(res.data.jobList);\n          //console.log(this.state.hasMore);\n          //console.log(this.state.lastJobId);\n          //console.log(this.state.pageNum);\n          \n          //if records are not returned\n          if(!this.state.lastJobId)\n          {\n            this.setState({ noRecordFound:true });\n          }\n        }\n        this.setState({\n           isProcessing: false\n         })\n      })\n      .catch(function (err) {\n        console.log(err);\n      });   \n    }\n    \n }\n \n updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n }\n \n handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n }\n \n inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n \n clearText = () => {\n   this.setState({\n     searchText : \"\",\n   });\n }\n \n clearFilter = () => {\n  \n    this.setState({\n      checkedItemsIndustry: new Map(),\n      checkedItemsJobType: new Map(),\n      salary      : { min: 0, max: 500000 },\n      experience  : { min: 0, max: 40 },\n      searchText : \"\",\n      //location : this.state.location_list.find((obj) => { return (obj.label == \"Hong Kong\") }),\n      industry : null,\n      locationSelected : [],\n      industrySelected : [],\n      enabledAIEngine: true,\n    });\n  }\n  \n  searchJobByKey = (e) => {\n    if(e.key === 'Enter'){\n      this.searchJob();\n    }\n  }\n  \n  searchJob = () => {\n    //this.props.history.push('/joblist/'+ this.state.searchText + '/' + this.state.location);\n    var queryParm = \"?\";\n    var seperator = \"&\";\n    var jobType = \"\";\n    //var industry = \"\";\n    \n    this.state.checkedItemsJobType.forEach(function(value, key) {\n      if(value && key)\n        jobType += key + \",\";\n    });\n    if(jobType.length>0)\n      jobType = jobType.substr(0, jobType.length-1); \n    /*  \n    this.state.checkedItemsIndustry.forEach(function(value, key) {\n      if(value && key)\n        industry += key + \",\";\n    });\n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n   */\n   var industry = \"\"\n    \n    //console.log(this.state.locationSelected);\n    this.state.industrySelected.forEach(function(object) {\n      if(object.value)\n        industry += object.value + \",\";\n    });\n    \n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      \n   var location = \"\"\n    \n    console.log(this.state.locationSelected);\n    this.state.locationSelected.forEach(function(object) {\n      if(object.value)\n        location += object.value + \",\";\n    });\n    \n    if(location.length>0)\n      location = location.substr(0, location.length-1); \n      \n    queryParm += \"q=\" + this.state.searchText + seperator;\n    queryParm += \"loc=\" + (location || '') + seperator;\n    //queryParm += \"loc=\" +((this.state.location != null) ? this.state.location.value : \"default\") + seperator;\n    //queryParm += \"ind=\" + this.state.industry + seperator;\n    queryParm += \"ind=\" + industry + seperator;//+((this.state.industry != null) ? this.state.industry.value : \"default\") + seperator;\n    queryParm += \"jt=\" + jobType + seperator;\n    queryParm += \"minSal=\" + this.state.salary.min + seperator;\n    queryParm += \"maxSal=\" + this.state.salary.max + seperator;\n    queryParm += \"minExp=\" + this.state.experience.min + seperator;\n    queryParm += \"maxExp=\" + this.state.experience.max + seperator;\n    queryParm += \"enAI=\" + this.state.enabledAIEngine;\n    console.log(\"queryParm\" + queryParm);\n    window.location = '/joblist' + queryParm;\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    console.log(value);\n    this.setState({ [name]: value });\n  }\n  \n  render() {\n    const loader = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    const isMobileView = isMobile();\n    const {dense,filterCount} = this.state;\n\n    var items = [];\n    this.state.jobList.map((job, i) => {\n      const score = Math.round(job.similarityInfo ? job.similarityInfo.score *100 : 0) ;\n      items.push(\n        <ListItem button divider selected={(job._id == this.props.activeJob) ? true : false} key={job._id} onClick={(e) => this.props.updateActiveJob(job._id, this.state, document.getElementById('inif-container').scrollTop)}>\n          <ListItemText style={{\"width\":\"70%\"}} disableTypography={true}\n            primary={<div className=\"font-weight-bold joblist\" ><font>{job.jobTitle}</font></div>}\n            secondary={ <div className=\"joblist-left-content-container\">\n                          <span className=\"font-weight-bold\">{job.company==null && <i class=\"zmdi zmdi-lock\"/>}{(job.company==null) ? \" Company Locked\" : job.company}</span>\n                          <span>{(job.industry == null) ? \"\" : job.industry.name}</span>\n                          <span><i class=\"la la-map-marker\"></i>\n                            {job.address && job.address.city && job.location ? \n                              job.address.city+\", \"+ job.location.name : \n                              (job.location ? job.location.name : \"\") }\n                          </span>\n                          <span>{score}  % Match <Progress className=\"shadow-lg my-1 match-progress-bar\" color=\"blue\" value={score}/></span>\n                        </div>\n                      }\n          />\n          \n          <div className={`jr-profile-banner-avatar joblist-left ${job.isExclusive ? \"exclusive-list\" : \"\"}`} style={{'background':'white'}}>\n            <img \n              className=\"jobContent-img-size-left\" alt=\"...\" \n              src={(job.company == null) ? \n              encodeURI(INDUSTRY_ICON_URL + (job.industry[0] ? job.industry[0]._id.name : \"\") + \".png\") : \n              encodeURI(COMPANY_ICON_URL+job.company+\".png\")} \n            />\n            {/*<img className=\"jobContent-img-size-left\" alt=\"...\" src={(job.company == null) ? process.env.PUBLIC_URL+\"/industry/\"+((job.industry[0]) ? job.industry[0]._id.name : \"\")+\".png\" : encodeURI(\"https://hkjobslab.s3-ap-southeast-1.amazonaws.com/company/\"+job.company+\".png\")} />*/}\n          </div>\n        </ListItem>\n      )\n      //items.push(<Divider variant=\"inset\" component=\"li\" />);\n    });\n    return (\n      <div>\n        <div className=\"row\" style={{'margin-right':'0px'}}>\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\" style={{'background':'#00bcd4','height':'40px'}}>\n            <div className=\"row jobList-top\">\n              <div className=\"col-xl-10 col-lg-9 col-md-10 col-10\">\n                <SearchBox styleName=\"joblist-searchBox\" placeholder=\"Search here...\"\n                       onChange={this.updateSearchText.bind(this)}\n                       searchByKey={this.searchJobByKey.bind(this)}\n                       selectSearchText={this.selectSearchText.bind(this)}\n                       value={this.state.searchText}\n                       clearText={this.clearText.bind(this)}\n                       clearBtnStyle={\"clear-icon-jl\"}\n\n                 />\n                       \n              </div>\n              {/*\n              <div className=\"col-xl-3 col-lg-3 col-md-3 col-3\">\n                <Select\n\t \t\t\t\t\t\t  className=\"joblist-select-container\"\n\t \t\t\t\t\t\t  classNamePrefix=\"react-select\"\n\t \t\t\t\t\t\t  placeholder=\"Select Location...\"\n                value={this.state.location}\n                onChange={(obj) => this.handleSelectChange(obj,'location')}\n                options={this.state.location_list}\n                isMulti={false}\n                defaultMenuIsOpen={false}\n              />\n              </div>\n                <IconButton className=\"jr-btn jobList-filter-btn jobList-clear-filter-btn\"\n                      onClick={(e) => this.openModal(e)}>\n                  <Badge badgeContent={4}>\n                    <ClearIcon fontSize=\"small\" style={{'color':'#00000094'}} />\n                  </Badge>\n                </IconButton>\n                \n                  <Badge badgeContent={4} color=\"primary\">\n                  <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jobList-filter-btn\"\n                      onClick={(e) => this.openModal(e)}>\n                    <font size=\"+1\"><i className=\"la la-filter\"/></font>\n                    </Button>\n                  </Badge>\n              */}\n              <div className=\"col-xl-2 col-lg-2 col-md-2 col-2 search-padding\">\n                  <Button variant=\"contained\" style={{\"box-shadow\":\"none\"}} color=\"primary\" className=\"jr-btn jobList-filter-btn\"\n                      onClick={(e) => this.openModal(e)}>\n                    <i style={{\"fontSize\":\"20px\"}} className=\"la la-filter\"/>\n                    {(filterCount > 0) ? \n                      <Badge style={{\"padding\": \"0px 7px\",\"color\": \"white\",\"background-color\": \"#ff4081fa\"}} className=\"ml-0 py-1 mb-0\" color=\"light rounded-circle\">{filterCount}</Badge> : \"\"}\n                  </Button>\n              </div>\n              <div className=\"col-xl-1 col-lg-1 col-md-1 col-1 search-padding\">\n               \n              </div>\n\n            </div>\n          </div>\n        </div>\n        <Grid item>\n          <div id=\"inif-container\" className={\"jr-card p-0 joblist-jr-card\" }>\n           { isMobile() && !this.state.hasMore && this.state.jobList.length <= 0 &&\n              <div className=\"jobNotFound\">\n                  <img style={{\"width\" : \"60%\"}} src={encodeURI(WEB_IMAGE_URL+\"notfound/notfound.png\")}/>\n                  <span style={{\"margin-left\":\"5px\",\"margin-right\":\"5px\", \"font-size\": \"20px\"}}>\n                      Oops! No job matches found. Please try another search criteria.\n                  </span> \n                </div>\n           }\n            <List className='p-0' dense={dense}>\n              <InfiniteScroll\n                    pageStart={0}\n                    initialLoad={true}\n                    loadMore={this.getMoreJd.bind(this)}\n                    hasMore={this.state.hasMore && !this.state.isProcessing}\n                    loader={loader}\n                    useWindow={false}\n                    getScrollParent={() => document.getElementById('inif-container')}\n                  >\n                    {items}\n              </InfiniteScroll>\n            </List>\n          </div>\n        </Grid>\n        {/*<Modal\n            isOpen={this.state.jobListSearchModalIsOpen}\n            closeTimeoutMS={200}\n            style={this.state.modalStyleState}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            className=\"jobListModal\"\n            overlayClassName=\"jobListModal-Overlay\" \n            contentLabel=\"Example Modal\"\n          >\n          \n            <Widget styleName=\"jr-card-profile\">*/}\n          <Dialog open={this.state.jobListSearchModalIsOpen} onClose={this.closeModal} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n            <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}> \n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-0 mb-md-0 font-weight-bold\">Filter <span className=\"close-popup\" onClick={this.closeModal}><i className=\"la la-close\"></i></span></h3>\n                \n                  </div>\n                  <Filter checkedItemsJobType={this.state.checkedItemsJobType} \n                          //checkedItemsIndustry={this.state.checkedItemsIndustry}  \n                          locationSelected={this.state.locationSelected}\n                          industrySelected={this.state.industrySelected}\n                          salary={this.state.salary} \n\t\t\t\t \t\t              experience={this.state.experience}\n                          enabledAIEngine={this.state.enabledAIEngine}\n                          handleCheckBoxChange={this.updateCheckList.bind(this)}\n                          searchJob={this.searchJob.bind(this)}\n                          handlePropChange={this.handlePropChange.bind(this)}\n                          onFieldChanged={this.inputRangeChanged.bind(this)}\n                          autocompleteChange={this.autocompleteChange.bind(this)}\n                          clearFilter={this.clearFilter.bind(this)}\n                  />\n            </DialogContent>\n          </Dialog>\n           {/*</Widget>\n          </Modal>*/}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList, industryList, listLoading} = state.list;\n  return {\n    countryList,\n    industryList,\n    listLoading\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(JobLeftList));\n","/home/ubuntu/environment/jobslab-web/src/components/popup/UserContactForm.js",["2851","2852","2853","2854","2855"],"import React, { Component } from 'react';\nimport {\n  EmailIcon,\n  FacebookIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n//import Modal from 'react-modal';\n//import modalStyle from 'styles/modalStyle';\n//Modal.setAppElement(document.getElementById('root'));\n\nclass ExpertContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      dial: '',\n      number: '',\n      firstName: '',\n      lastName: '',\n      pictureUrl: ''\n    };\n  }\n  \n  componentDidUpdate(prevProps) {\n    //console.log(this.props)\n    if (this.props.expertData !== prevProps.expertData) {\n      this.setState({\n        email: this.props.expertData.email,\n        dial: this.props.expertData.phone.dial,\n        number: this.props.expertData.phone.number,\n        firstName: this.props.expertData.name.firstName,\n        lastName: this.props.expertData.name.lastName,\n        pictureUrl: this.props.expertData.pictureUrl\n      })\n    }\n  }\n\n  render() {\n    const { isOpen, closeModal } = this.props;\n    const { email, dial, number, firstName, lastName, pictureUrl } = this.state;\n    \n    return (\n      /*<Modal\n        isOpen={isOpen}\n        closeTimeoutMS={200}\n        style={modalStyle.adminContactModalStyle}\n        onRequestClose={()=>closeModal()}\n        contentLabel=\"Example Modal\"\n      >\n        <div className=\"admin-contact-popup\">\n          <div className=\"contact-block jr-card py-5 px-4\">*/\n      <Dialog open={isOpen} onClose={closeModal} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n      <DialogContent id=\"expert-contact\" style={{ width: \"400px\" }}>\n          <div className=\"contact-block py-2 px-2\">\n            <span className=\"close-popup mt-n4\" onClick={closeModal}><i className=\"la la-close\"></i></span>\n            <div className=\"mb-3 adminContact-picture\">\n              <img alt=\"...\" src={pictureUrl} />\n            </div>\n            <ul className=\"contact-info vertical\">\n            {/*\n              <li>\n                <i className=\"zmdi zmdi-pin zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">ADDRESS</h4>\n                  <address className=\"mb-0\">\n                    44 New Design Street\n                    <br/>\n                    Melbourne 005\n                    <br/>\n                    Australia 300\n                  </address>\n                </div>\n              </li>\n            */}\n              <li>\n                <i className=\"zmdi zmdi-account zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">Name</h4>\n                  <div>\n                    <span className=\"text-primary\">{firstName + \" \" + lastName}</span>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <i className=\"zmdi zmdi-phone zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">Phone</h4>\n                  <div className=\"d-flex\">\n                    <a className=\"jr-link text-primary disable-link\" href={\"tel:\"+ (dial + \" \" + number)}>\n                      {dial + \" \" + number}\n                    </a>\n                    <a className=\"jr-link ml-2\" href={\"https://api.whatsapp.com/send?phone=\"+dial.replace(\"+\",\"\")+number}>\n                      <WhatsappIcon round={true} size={20} />\n                    </a>\n                  </div>\n                </div>\n              </li>\n\n              <li>\n                <i className=\"zmdi zmdi-email zmdi-hc-fw\"/>\n                <div className=\"contact-body\">\n                  <h4 className=\"text-uppercase\">E-mail</h4>\n                  <div>\n                    <a className=\"text-primary jr-link\" href={\"mailto:\"+email}>{email}</a>\n                  </div>\n                </div>\n              </li>\n\n              {/*<li>\n                <div className=\"icons-wrapper\">\n                  <a className=\"jr-link m-1\" href={\"https://api.whatsapp.com/send?phone=\"+dial+number}>\n                    <WhatsappIcon round={true} size={35} />\n                  </a>\n                  <span className=\"icon twitter-icon jr-link m-1\">\n                    <TwitterIcon round={true} size={35} />\n                  </span>\n                  <span className=\"icon linkedin-icon jr-link m-1\">\n                    <LinkedinIcon round={true} size={35} />\n                  </span>\n                </div>\n              </li>*/}\n            </ul>\n          </div>\n          \n            </DialogContent>\n            </Dialog>\n        /*</div>\n        </div>\n      </Modal>*/\n    );\n  }\n}\n\nexport default ExpertContactForm;\n","/home/ubuntu/environment/jobslab-web/src/components/application/TimeLineItem.js",["2856","2857","2858","2859","2860","2861","2862","2863","2864","2865","2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880","2881","2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899"],"import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport moment from 'moment-timezone';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ExpandDetailBox from '../common/ExpandDetailBox';\r\nimport { numberWithCommas } from 'actions/Function.js';\r\nimport {\r\n  CANDIDATE_INTERESTED,\r\n  ADMIN_ACCEPTED,\r\n  CANDIDATE_APPLIED,\r\n  ADMIN_RECOMMENDED,\r\n  ADMIN_REJECTED,\r\n  CANDIDATE_WITHDRAWN_1,\r\n  APPLICATION_CONFIRMED,\r\n  CLIENT_VIDEO_REQUESTED,\r\n  CANDIDATE_VIDEO_SUBMITTED,\r\n  CANDIDATE_VIDEO_EXPIRED,\r\n  CANDIDATE_INTERVIEW_SUBMITTED,\r\n  CLIENT_INTERVIEW_REQUEST,\r\n  INTERVIEW_RESCHEDULE_REQUESTED,\r\n  INTERVIEWING,\r\n  SELECTED,\r\n  CLIENT_REJECTED,\r\n  CANDIDATE_WITHDRAWN_2,\r\n  HIRED\r\n} from 'constants/ApplicationState';\r\n\r\nclass TimeLineItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openInterviewActionMenu: false,\r\n      anchorEl: null,\r\n    };\r\n  }\r\n  \r\n  getStatus(state, color) {\r\n    const userType = this.props.userType;\r\n    \r\n    switch (userType) {\r\n      case 'candidate':\r\n        return <h4 className={`timeline-tile text-${color}`}>{state && state.candidateStatus}</h4>\r\n      case 'client':\r\n        return <h4 className={`timeline-tile text-${color}`}>{state && state.clientStatus}</h4>\r\n      case 'admin':\r\n        return <h4 className={`timeline-tile text-${color}`}>{state && state.adminStatus}</h4>\r\n      default:\r\n        return <div></div>\r\n    }  \r\n  }\r\n  \r\n  getDescription(state, interview, interviewVideo, offer) {\r\n    const userType = this.props.userType;\r\n    \r\n    switch (state._id) {\r\n      case CANDIDATE_INTERESTED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You\" : \"Candidate\"} made a request to apply this job...</p>\r\n          { this.props.isPresent && userType=='admin' && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.adminAllow}>Accept</Button> \r\n          }\r\n          { this.props.isPresent && userType=='admin' && \r\n            <Button className=\"mt-2 mr-2\" onClick={this.props.adminBlock}>Block</Button> \r\n          }\r\n        </div>\r\n      case ADMIN_ACCEPTED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You have been considered as eligible candidate and the company is revealed. Do you want to proceed with the application?\" : \"Candidate has been considered as eligible candidate to this job.\"}</p>\r\n          { this.props.isPresent && (userType=='candidate' || userType=='admin') && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.confirmApply}>Confirm Apply</Button> \r\n          }\r\n        </div>;\r\n      case ADMIN_REJECTED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You have been considered as ineligible candidate.\" : \"Candidate is regarded as Ineligible to the job.\"}</p>\r\n          { this.props.isPresent && userType=='admin' && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.adminAllow}>Re-Accept</Button> \r\n          }\r\n        </div>;\r\n      case CANDIDATE_APPLIED:\r\n        return <div>\r\n          <p>The application is in progress.</p>\r\n          { this.props.isPresent && userType=='admin' && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.adminAllow}>Accept</Button> \r\n          }\r\n          { this.props.isPresent && userType=='admin' && \r\n            <Button className=\"mt-2 mr-2\" onClick={this.props.adminBlock}>Block</Button> \r\n          }\r\n        </div>\r\n      case ADMIN_RECOMMENDED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"Our Career Expert\" : \"You\"} recommended this job for {userType=='candidate' ? \"you.\" : \"the candidate.\"}</p>\r\n          { this.props.isPresent && (userType=='candidate' || userType=='admin') && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.confirmApply}>Confirm Apply</Button> \r\n          }\r\n        </div>;\r\n      case CANDIDATE_WITHDRAWN_1:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You have\" : \"Candidate has\"} withdrawn this application.</p>\r\n        </div>;\r\n      case APPLICATION_CONFIRMED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You have\" : \"Candidate has\"} applied this job successfully!</p>\r\n          { this.props.isPresent && (userType=='client' || userType=='admin') && \r\n            <div>\r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => this.setState({ openInterviewActionMenu: true, anchorEl: e.currentTarget })}>Action</Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={this.state.openInterviewActionMenu}\r\n                onClose={() => this.setState({ openInterviewActionMenu: false })}\r\n              >\r\n                <MenuItem onClick={this.props.requestInterviewVideo}>Video Request</MenuItem>\r\n                <MenuItem onClick={this.props.requestInterview}>Interview Request</MenuItem>\r\n                { userType=='admin' && <MenuItem onClick={this.props.scheduleInterview}>Interview Schedule</MenuItem> }\r\n              </Menu>\r\n              {/*<Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.requestInterviewVideo}>Video Request</Button> \r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.requestInterview}>Interview Request</Button>*/} \r\n            </div>\r\n          }\r\n          {/* this.props.isPresent && userType=='admin' && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.scheduleInterview}>Interview Schedule</Button> \r\n          */}\r\n        </div>;\r\n      case CLIENT_VIDEO_REQUESTED:\r\n        return <div>\r\n          <p>{userType=='client' ? \"You\" : \"Client\"} requested interview video with detail below:</p>\r\n          <p><b>Deadline:</b> {moment(interviewVideo && interviewVideo.deadline ? interviewVideo.deadline : \"\").tz(interviewVideo.timeZone).format(\"YYYY/MM/DD h:mm a z\")}</p>\r\n          <p><b>Time Limit:</b> {interviewVideo && interviewVideo.timeLimit != null ? interviewVideo.timeLimit + \" minutes\" : \"N/A\"} </p>\r\n          \r\n          { this.props.isPresent &&  \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => window.open(\"/application/interview/video/\"+interviewVideo._id, \"_blank\")}>Detail</Button> \r\n          }\r\n        </div>;\r\n      case CANDIDATE_VIDEO_SUBMITTED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You have\" : \"Candidate has\"} submitted interview video.</p>\r\n          { this.props.isPresent &&  \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => window.open(\"/application/interview/video/\"+interviewVideo._id, \"_blank\")}>Detail</Button> \r\n          }\r\n          { this.props.isPresent && (userType=='client' || userType=='admin') && \r\n            <div>\r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => this.setState({ openInterviewActionMenu: true, anchorEl: e.currentTarget })}>Action</Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={this.state.openInterviewActionMenu}\r\n                onClose={() => this.setState({ openInterviewActionMenu: false })}\r\n              >\r\n                <MenuItem onClick={this.props.requestInterviewVideo}>Video Request</MenuItem>\r\n                <MenuItem onClick={this.props.requestInterview}>Interview Request</MenuItem>\r\n                { userType=='admin' && <MenuItem onClick={this.props.scheduleInterview}>Interview Schedule</MenuItem> }\r\n              </Menu>\r\n            </div>\r\n          }\r\n        </div>;\r\n      case CANDIDATE_VIDEO_EXPIRED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You cannot submit interview video now because it has expired.\" : \"Interview video request has expired.\"}</p>\r\n          { this.props.isPresent && (userType=='client' || userType=='admin') && \r\n            <div>\r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => this.setState({ openInterviewActionMenu: true, anchorEl: e.currentTarget })}>Action</Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={this.state.openInterviewActionMenu}\r\n                onClose={() => this.setState({ openInterviewActionMenu: false })}\r\n              >\r\n                <MenuItem onClick={this.props.requestInterviewVideo}>Video Request</MenuItem>\r\n                <MenuItem onClick={this.props.requestInterview}>Interview Request</MenuItem>\r\n                 { userType=='admin' && <MenuItem onClick={this.props.scheduleInterview}>Interview Schedule</MenuItem> }\r\n              </Menu>\r\n            </div>\r\n          }\r\n        </div>;\r\n      case CLIENT_INTERVIEW_REQUEST:\r\n        return <div>\r\n          <p>{userType=='client' ? \"You\" : \"Client\"} requested interview with detail below:</p>\r\n          <p><b>Date:</b> {moment(interview && interview.dateTime ? interview.dateTime : \"\").tz(interview.timeZone).format(\"YYYY/MM/DD\")}</p>\r\n          <p><b>Time:</b> {moment(interview && interview.dateTime ? interview.dateTime : \"\").tz(interview.timeZone).format(\"h:mm a z\")}</p>\r\n          <p><b>Duration:</b> {interview.duration.hours + \" hours \" + interview.duration.minutes + \" minutes\"}</p>\r\n          <p><b>Venue:</b> {interview && interview.venue ? interview.venue : \"\"}</p>\r\n          <p style={{\"min-height\": \"20px\"}}>\r\n            <ExpandDetailBox hideDescription={\"Hide Extra Detail\"} showDescription={\"Show Extra Detail\"} description={interview.detail} />\r\n          </p>\r\n          { this.props.isPresent && userType=='candidate' && \r\n            <div>\r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={() => this.props.acceptInterview(interview._id)}>Accept</Button> \r\n              <Button className=\"mt-2 mr-2\" onClick={() => this.props.rescheduleInterview(interview._id)}>Reschedule Request</Button> \r\n            </div>\r\n          }\r\n          { this.props.isPresent && (userType=='client' || userType=='admin') && \r\n            <div>\r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => this.setState({ openInterviewActionMenu: true, anchorEl: e.currentTarget })}>Action</Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={this.state.openInterviewActionMenu}\r\n                onClose={() => this.setState({ openInterviewActionMenu: false })}\r\n              >\r\n                <MenuItem onClick={this.props.requestInterview}>Interview Request</MenuItem>\r\n                 { userType=='admin' && <MenuItem onClick={this.props.scheduleInterview}>Interview Schedule</MenuItem> }\r\n              </Menu>\r\n            </div>\r\n          }\r\n        </div>;\r\n      case INTERVIEW_RESCHEDULE_REQUESTED:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You\" : \"Candidate\"} requested for interview rescheduling. {userType=='candidate' && \"Our Career Expert will contact you shortly.\"}</p>\r\n          { this.props.isPresent && userType=='admin' && \r\n            <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.props.scheduleInterview}>Interview Schedule</Button> \r\n          }\r\n        </div>\r\n      case INTERVIEWING:\r\n        return <div>\r\n          <p>Interview is scheduled with detail below:</p>\r\n          <p><b>Date:</b> {moment(interview && interview.dateTime ? interview.dateTime : \"\").tz(interview.timeZone).format(\"YYYY/MM/DD \")}</p>\r\n          <p><b>Time:</b> {moment(interview && interview.dateTime ? interview.dateTime : \"\").tz(interview.timeZone).format(\"h:mm a z\")}</p>\r\n          <p><b>Duration:</b> {interview.duration.hours + \" hours \" + interview.duration.minutes + \" minutes\"}</p>\r\n          <p><b>Venue:</b> {interview && interview.venue ? interview.venue : \"\"}</p>\r\n          <p style={{\"min-height\": \"20px\"}}>\r\n            <ExpandDetailBox hideDescription={\"Hide Extra Detail\"} showDescription={\"Show Extra Detail\"} description={interview.detail} />\r\n          </p>\r\n          { this.props.isPresent && (userType=='client' || userType=='admin') && \r\n            <div>\r\n              <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => this.setState({ openInterviewActionMenu: true, anchorEl: e.currentTarget })}>Action</Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={this.state.openInterviewActionMenu}\r\n                onClose={() => this.setState({ openInterviewActionMenu: false })}\r\n              >\r\n                <MenuItem onClick={this.props.requestInterviewVideo}>Video Request</MenuItem>\r\n                <MenuItem onClick={this.props.requestInterview}>Interview Request</MenuItem>\r\n                 { userType=='admin' && <MenuItem onClick={this.props.scheduleInterview}>Interview Schedule</MenuItem> }\r\n              </Menu>\r\n            </div>\r\n          }\r\n        </div>;\r\n      case CANDIDATE_WITHDRAWN_2:\r\n        return <div>\r\n          <p>{userType=='candidate' ? \"You have\" : \"Candidate has\"} withdrawn this application.</p>\r\n        </div>;\r\n      case CLIENT_REJECTED:\r\n        return <div>\r\n          <p>{userType=='client' ? \"You have\" : \"Company has\"} rejected this application.</p>\r\n        </div>;\r\n      case HIRED:\r\n        return <div>\r\n          <p>Offer is confirmed with detail below:</p>\r\n          <p><b>Monthly Salary (HK):</b> {offer && offer.salary ? \"$\"+numberWithCommas(offer.salary) : \"\"}</p>\r\n          <p><b>Annual Bonus (HK):</b> {offer && offer.bonus ? \"$\"+numberWithCommas(offer.bonus) : \"\"}</p>\r\n          <p><b>Notice Period (in Month):</b> {offer && offer.noticePeriod ? offer.noticePeriod : \"\"}</p>\r\n          <p><b>Probation Period (in Month):</b> {offer && offer.probation ? offer.probation : \"\"}</p>\r\n          <p style={{\"min-height\": \"20px\"}}>\r\n            <ExpandDetailBox hideDescription={\"Hide Extra Detail\"} showDescription={\"Show Extra Detail\"} description={offer.detail} />\r\n          </p>\r\n        </div>;\r\n      default:\r\n        return <p>N/A</p>;\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  render() {\r\n    const {styleName, color, timeLine, children } = this.props;\r\n    const {state, interview, interviewVideo, offer, timestamp} = timeLine;\r\n    return (\r\n      <div className={`timeline-item timeline-time-item ${styleName}`}>\r\n        <div className=\"timeline-time\">{moment(timestamp).format(\"MMM D, YYYY\")}</div>\r\n        <div className={`timeline-badge bg-${color}`}>{children}</div>\r\n        <div className=\"timeline-panel\">\r\n          { this.getStatus(state, color) }\r\n          { this.getDescription(state, interview, interviewVideo, offer) }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { userType } = state.auth;\r\n  return { userType };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TimeLineItem);","/home/ubuntu/environment/jobslab-web/src/components/popup/InterviewScheduleForm.js",["2900"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n//import Modal from 'react-modal';\n//import modalStyle from 'styles/modalStyle';\nimport Widget from \"components/Widget\";\nimport { DateTimePicker } from '@material-ui/pickers';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport * as notification from 'actions/Notification';\n\nclass InterviewScheduleForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      //startTime: null,\n      selectedDate: null,//new Date(),\n      hours: null,\n      minutes: null,\n      venue: '',\n      detail: '',\n    };\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n  \n  /*datePickerChange = (date, key) => {\n    this.setState({ [key]: date });\n  }*/\n  \n  handleDateChange = (date) => {\n    this.setState({selectedDate: date});\n  };\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  /*handleNumericChange = (val, name) => {\n    this.setState({ [name]: val });\n  }*/\n  \n  interviewSchedule = () => {\n    const data = {\n      appId: this.props.appId,\n      dateTime: this.state.selectedDate,\n      timeZone: moment.tz.guess(true),\n      hours: this.state.hours,\n      minutes: this.state.minutes,\n      venue: this.state.venue,\n      detail: this.state.detail,\n    };\n    console.log(this.props.isConfirmed);\n    var apiUrl = this.props.isConfirmed ? '/api/admins/set/interview/schedule' : '/api/clients/set/interview/request';\n    axios.post(apiUrl, data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have successfully scheduled an interview for this application.\");\n        this.props.completeSchedule();\n      }\n      else {\n        notification.error(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  render() {\n    const { isOpen, closeModal } = this.props;\n    const { selectedDate, hours, minutes, venue, detail } = this.state;\n\n    return (\n      <Dialog open={isOpen} onClose={() => closeModal('interviewModalIsOpen')} scroll={'body'} /*maxWidth=\"md\"*/ aria-labelledby=\"form-dialog-title\">\n      {/*<Modal\n        isOpen={isOpen}\n        onRequestClose={() => closeModal('interviewModalIsOpen')}\n        style={modalStyle.jobContentModalStyle}\n        contentLabel=\"\"\n      >\n      <Widget styleName=\"jr-card-profile\">\n        <div className=\"account-popup-area signup-popup-box\">\n        \t<div className=\"referral-popup\">*/}\n        \t  <DialogTitle id=\"form-dialog-title\">Interview Schedule</DialogTitle>\n        \t  <DialogContent>\n          \t  <div className=\"row justify-content-left\">\n          \t    {/*<span className=\"pf-title\">Select Candidate</span>*/}\n          \t    <div key=\"datetime_custom\" className=\"col-lg-6 col-md-12 col-sm-12\">\n                  <DateTimePicker\n                    fullWidth\n                    //autoOk\n                    showTabs={false}\n                    autoSubmit={false}\n                    //disableFuture\n                    //variant=\"inline\"\n                    label=\"Start Date and Time\"\n                    value={selectedDate}\n                    onChange={this.handleDateChange}\n                    error={!selectedDate}\n                    helperText={!selectedDate && \"Required\"}\n                    leftArrowIcon={<i className=\"zmdi zmdi-arrow-back\"/>}\n                    rightArrowIcon={<i className=\"zmdi zmdi-arrow-forward\"/>}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <i className=\"zmdi zmdi-alarm\"/>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <Autocomplete\n                    value={hours}\n                    options={[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"]} \n                    autoHighlight={true}\n                    renderInput={params => (\n                      <TextField \n                        {...params} \n                        label=\"Hours\" \n                        fullWidth \n                        error={!hours}\n                        helperText={!hours && \"Required\"}\n                      />\n                    )}\n                    onChange={(e, value) => this.autocompleteChange(e, value, 'hours')}\n                  />\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <Autocomplete\n                    value={minutes}\n                    options={[\"0\",\"15\",\"30\",\"45\"]} \n                    autoHighlight={true}\n                    renderInput={params => (\n                      <TextField \n                        {...params} \n                        label=\"Minutes\" \n                        fullWidth \n                        error={!minutes}\n                        helperText={!minutes && \"Required\"}\n                      />\n                    )}\n                    onChange={(e, value) => this.autocompleteChange(e, value, 'minutes')}\n                  />\n                </div>\n          \t    {/*<div className=\"col-lg-6\">\n          \t      <span className=\"pf-title\">Start Time</span>\n                  <div className=\"pf-field\">\n                    <DatePicker\n                      timeFormat=\"HH:mm\"\n                      timeIntervals={30}\n                      timeCaption=\"time\"\n                      dateFormat=\"MMMM d, yyyy h:mm aa\"\n                      showTimeSelect\n                      minDate={new Date()}\n                      selected={this.state.startTime}\n                      onChange={(date) => this.datePickerChange(date,'startTime')}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-lg-3\">\n                  <span className=\"pf-title\">Hours</span>\n                  <div className=\"pf-field\">\n\t\t\t\t\t \t\t\t\t\t<NumericInput min={0} max={12} step={1} value={this.state.hours} onChange={(val) => this.handleNumericChange(val, 'hours')} />\n                  </div>\n                </div>\n                <div className=\"col-lg-3\">\n                  <span className=\"pf-title\">Minutes</span>\n                  <div className=\"pf-field\">\n\t\t\t\t\t \t\t\t\t\t<NumericInput min={0} max={45} step={15} value={this.state.minutes} onChange={(val) => this.handleNumericChange(val, 'minutes')} />\n                  </div>\n                </div>*/}\n                <div className=\"col-lg-12\">\n                  <TextField\n                    name=\"venue\"\n                    label=\"Venue\"\n                    value={venue}\n                    onChange={this.textboxChange}\n                    fullWidth\n                    error={!venue}\n                    helperText={!venue && \"Required\"}\n                  />\n                </div>\n                <div className=\"col-12 pt-3\">\n                  <TextField\n                    className=\"jobTextArea\"\n                    name=\"detail\"\n                    label=\"Interview Detail\"\n                    fullWidth\n                    multiline={true}\n                    variant=\"outlined\"\n                    value={detail}\n                    onChange={this.textboxChange}\n                  />\n                  {/*\n                  <label className=\"m-0 pb-1\" style={{'fontSize':'16px'}}>Interview Detail</label>\n                  <Textarea useCacheForDOMMeasurements style={{'fontSize':'16px'}} className=\"w-100\" name=\"detail\" minRows=\"8\" value={detail} onChange={this.textboxChange} />\n                  */}\n                </div>\n                {/*<div className=\"col-lg-12\">\n                  <span className=\"pf-title\">Detail</span>\n                  <div className=\"pf-field\">\n                   \t<Textarea useCacheForDOMMeasurements placeholder=\"Please input the interview detail...\" name=\"detail\" value={this.state.detail} onChange={this.textboxChange} />\n                  </div>\n                </div>*/}\n                <div className=\"col-lg-12\">\n                  <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.interviewSchedule}>Send</Button>\n                  <Button className=\"mt-2 mr-2 mr-auto\" onClick={() => closeModal('interviewModalIsOpen')}>Cancel</Button>\n                </div>\n              </div>\n            </DialogContent>\n            {/*</div>\n          </div>\n        </Widget>\n      </Modal>*/}\n      </Dialog>\n    );\n  }\n}\n\nexport default InterviewScheduleForm;\n","/home/ubuntu/environment/jobslab-web/src/components/WidgetHeader/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/ProfilePictureEdit.js",["2901","2902","2903"],"import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport InputRange from 'react-input-range';\nimport { dataURItoBlob } from 'util/functions.js';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { requestInitUser } from 'actions/Auth';\nimport * as notification from 'actions/Notification';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\n\nimport 'react-input-range/lib/css/index.css';\n\nclass ProfilePictureEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image:'',\n      isOpenDragDropImgPop: false,\n      isOpenChangeImgPop: false,\n      imagescale: 1,\n      isSubmitLoading: false,\n    };\n  }\n  \n  picUploaded = (acceptedFiles) => {\n    if(acceptedFiles[0] && acceptedFiles[0].name && acceptedFiles[0].name.toLowerCase().match(/(png|jpg|jpeg).*/))\n    {\n      this.setState({ image:acceptedFiles[0] }); \n      this.changeImgPop(false,true);\n    }\n    else\n    {\n      this.setState({image:''});\n      notification.error(\"Please upload picture in png / jpg / jpeg formats.\");\n    }\n    \n  }\n  \n  changeImgPop = (dragDropPop, changeImgPop) => {\n    this.setState({\n      isOpenDragDropImgPop: dragDropPop,\n      isOpenChangeImgPop: changeImgPop\n    })\n  }\n  afterOpenModal = () =>{\n    this.setState({image:'',imagescale: 1});\n    this.changeImgPop(true,false);\n  }\n  \n  handleDrop = dropped => {\n    this.setState({ newPictureUrl: dropped[0] })\n  }\n\n  submitProfilePic = () =>{\n    this.setState({ isSubmitLoading: true });\n    \n    const canvas = this.editor.getImageScaledToCanvas().toDataURL();\n    var blobImg = dataURItoBlob(canvas);\n    //this.props.updateProfilePic(blobImg);\n    const formData = new FormData();\n    formData.append('file', blobImg);\n    console.log(formData);\n  \n    axios.post('/api/users/set/picture/upload', formData)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"Your profile picture has been updated successfully.\");\n        console.log(res.data);\n        this.setState({ isSubmitLoading: false });\n        //alert(\"The picture has been uploaded to S3!\");\n        this.props.requestInitUser();\n        this.props.closeModal();\n      }\n      else {\n        if(res.data.msg) \n          notification.error(res.data.msg);\n        else\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        this.setState({ isSubmitLoading: false });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  setEditorRef = (editor) => this.editor = editor;\n    \n  render() {\n    const { isProfileEdit, isSubmitLoading } = this.props;\n    return (\n      \n      <Dialog open={isProfileEdit == true ? true : false} onEnter={this.afterOpenModal} onClose={() => this.props.closeModal()} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n        <DialogContent id=\"application-list\">  \n          <div className=\"mb-3\">\n            <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Edit Profile Picture <span className=\"close-popup\" onClick={()=>this.props.closeModal()}><i className=\"la la-close\"></i></span></h3>\n          </div>\n          {this.state.isOpenDragDropImgPop &&\n           <div style={{'background':'white'}} className=\"dropzone-card\">\n              <Dropzone className=\"dropzone\" accept='image/jpeg, image/png' onDrop={acceptedFiles => this.picUploaded(acceptedFiles)}> \n                {({getRootProps, getInputProps}) => (\n                  <section style={{'width':'270px','height':'270px'}}>\n                    <div {...getRootProps({style:{'top':'15%','position': 'relative'}, className: 'dropzone-file-btn'})}>\n                      <input {...getInputProps()} />\n                      <p>Drag and drop image here, or click to select image.</p>\n                    </div>\n                  </section>\n                )}\n              </Dropzone>\n            </div>\n          }\n          {this.state.isOpenChangeImgPop &&\n            <div>\n              <AvatarEditor\n                ref={this.setEditorRef}\n                style={{'background':'gray'}}\n                image={ this.state.image } \n                width={250}\n                height={250}\n                border={10}\n                color={[255, 255, 255, 0.6]} // RGBA\n                scale={this.state.imagescale}\n                rotate={0}\n              />\n              <span style={{'display':'block','color':'white'}}>\n              Scale:\n              <InputRange\n  \t\t \t\t\t\t  step={0.1}\n                maxValue={2}\n                minValue={1}\n                value={this.state.imagescale}\n                onChange={imagescale => { this.setState({imagescale: Math.round( imagescale * 10 ) / 10 })}} />\n              </span>\n              <span>\n                {/*<Button style={{'display':'grid'}} color=\"primary\" className=\"jr-btn jr-btn-lg text-white bg-primary\" onClick={(e) => this.submitProfilePic()}>\n                  Submit\n                </Button>*/}\n                <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={(e) => this.submitProfilePic()}>\n                  { isSubmitLoading && <CircularProgress color=\"secondary\" size={20} className=\"mr-2\" /> }\n                  Submit\n                </Button>\n                <Button className=\"mt-2 mr-2 mr-auto\" onClick={() => this.props.closeModal()}>Cancel</Button>\n              </span>\n            </div>\n          }\n        </DialogContent>\n      </Dialog>  \n    )\n  }\n};\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default connect(null, mapDispatchToProps)(ProfilePictureEdit);","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListApplicationFilter/AdminJobListApplicationFilter.js",["2904","2905","2906","2907","2908","2909","2910","2911","2912"],"import React, {Component, Fragment} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputRange from 'react-input-range';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Expand from \"react-expand-animated\";\r\nimport SearchBox from 'components/SearchBox';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircleUnchecked from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Main,\r\n  BoxExpand,\r\n  ExpandBoxes\r\n} from \"./App.styles.js\";\r\n\r\nconst AutocompleteWithFilterStyle = withStyles({\r\n  tag: {\r\n    height: 24,\r\n    position: \"relative\",\r\n    backgroundColor: \"#3f51b5\",\r\n    \r\n    \"& .MuiChip-label\": {\r\n      color: \"#fff\"\r\n    },\r\n    \"& .MuiChip-deleteIcon\": {\r\n      width: 18,\r\n      color: \"#fff\"\r\n    },\r\n    \"&:hover .MuiChip-deleteIcon\": {\r\n      color: \"#f0f0fb\"\r\n    },\r\n    \r\n  }\r\n})(Autocomplete);\r\n\r\nclass AdminJobListApplicationFilter extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n       industry_list : [],\r\n       appState_List : [],\r\n       similarity: { min: 0, max: 100 },\r\n       experience: { min: 0, max: 50 },\r\n       openBtnList : new Map(),\r\n       open: false,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    //const industryData = this.props.industryList;\r\n    const appStateData = this.props.appStateList;\r\n    \r\n    /*if((industryData != null))\r\n        this.setState({industry_list : Object.assign([], industryData)});*/\r\n    if((appStateData != null))\r\n        this.setState({appState_List : Object.assign([], appStateData)});\r\n\r\n  }\r\n\r\n  clearText = (name) => {\r\n   this.props.selectSearchText(\"\", name);\r\n  }\r\n  \r\n  handleChange = name => (event, checked) => {\r\n    this.setState({[name]: checked});\r\n  };\r\n  \r\n  toggle = (targetListName) => {\r\n    var list = this.state.openBtnList;\r\n    var isOpen = true;\r\n    if(list.has(targetListName))\r\n      isOpen = !(list.get(targetListName));\r\n    else\r\n      list.set(targetListName,isOpen);\r\n  \r\n    console.log(list);\r\n    \r\n    list.forEach(function(value, key, map) {\r\n      console.log(key);\r\n      if(key==targetListName)\r\n        list.set(key,isOpen);\r\n      else\r\n        list.set(key,false);\r\n    });\r\n    this.setState({\r\n      openBtnList : list\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\"  style={{'overflow-y':'auto'}}>\r\n          <div style={{'margin-bottom':'5px'}}>\r\n            <SearchBox placeholder=\"Candidate Info...\"\r\n                       onChange={this.props.updateSearchText}\r\n                       selectSearchText={this.props.selectSearchText}\r\n                       clearText={this.clearText.bind(this)}\r\n                       value={this.props.searchText}\r\n                       enableSuggestion={false}\r\n\r\n                 />\r\n          </div>\r\n          \r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Application Status</p>\r\n          <AutocompleteWithFilterStyle\r\n            multiple\r\n            limitTags={2}\r\n            id=\"appState\"\r\n            options={this.state.appState_List}\r\n            disableCloseOnSelect\r\n            getOptionLabel={option => option.label}\r\n            value={this.state.appState_List.filter(item => (this.props.appStateSelected ? this.props.appStateSelected : []).find(i => i.value === item.value))}\r\n            renderOption={(option, { selected }) => (\r\n              <React.Fragment>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  style={{ marginRight: 2 }}\r\n                  checked={selected}\r\n                />\r\n                {option.label}\r\n              </React.Fragment>\r\n            )}\r\n            style={{ width: \"95%\" }}\r\n            className=\"tagLimitStyle\"\r\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'appStateSelected')}\r\n          />\r\n          \r\n\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Similarity</p>\r\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\r\n\t\t \t\t\t\t<InputRange\r\n\t\t \t\t\t\t  step={1}\r\n              maxValue={100}\r\n              minValue={0}\r\n              value={this.props.similarity}\r\n              onChange={similarity => { this.props.onFieldChanged(\"similarity\", similarity)}} />\r\n\t\t \t\t\t</div>\r\n\t\t \t\t\t\r\n\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Experience</p>\r\n\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px'}}>\r\n\t\t \t\t\t\t<InputRange\r\n\t\t \t\t\t\t  step={1}\r\n              maxValue={50}\r\n              minValue={0}\r\n              value={this.props.experience}\r\n              onChange={experience => { this.props.onFieldChanged(\"experience\", experience)}} />\r\n\t\t \t\t\t</div>\r\n\t\t\t \t\t\t\r\n\t\t\t \t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Only recommended candidate</p>\t\r\n            <Switch\r\n            classes={{\r\n              checked: 'text-primary',\r\n              track: 'bg-primary',\r\n            }}\r\n            checked={this.props.recommendedCandidate}\r\n            onChange={ () => this.props.handlePropChange('recommendedCandidate')}\r\n            aria-label=\"Recommended Candidate\"\r\n          />\r\n          \r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.clearFilter() }}>\r\n                        <font size=\"\"><i className=\"la la-undo mr-2\"/></font>\r\n                            Clear\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.search() }}>\r\n                        <font size=\"\"><i className=\"la la-search mr-2\"/></font>\r\n                            Search\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   //const {countryList, jobCategoryList, industryList} = state.list;\r\n   const {jobCategoryList} = state.list;\r\n  return {\r\n    //countryList,\r\n    jobCategoryList, \r\n    //industryList\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AdminJobListApplicationFilter));","/home/ubuntu/environment/jobslab-web/src/components/popup/AdminJobListApplicationFilter/App.styles.js",["2913","2914"],"/home/ubuntu/environment/jobslab-web/src/components/popup/ReferralForm.js",["2915","2916","2917","2918","2919"],"import React, { Component } from 'react';\nimport Widget from \"components/Widget\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport * as notification from 'actions/Notification';\nimport CountUp from 'react-countup';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  LinkedinShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n} from \"react-share\";\n\nimport {\n  EmailIcon,\n  FacebookIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport Dialog from '@material-ui/core/Dialog';\n/*import Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nModal.setAppElement(document.getElementById('root'));*/\n\nclass ReferralForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //email: '',\n    };\n  }\n\n  copyUrl = () => {\n    notification.success(\"URL has been copied to clipboard. Please paste the URL to share with your friends!\");\n  }\n  \n  /*sendRefUrl = (e) => {\n    e.preventDefault();\n    const data = {\n      email: this.state.email,\n      url: \"https://\"+window.location.hostname+\"/job/\"+this.state.activeJob+\"/\"+this.props.refId,//this.props.url,\n      jobId: this.state.activeJob,\n    };\n    \n    axios.post('/api/candidates/set/referral/send', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        alert('The Referral Link has beed sent to email address: ' + this.state.email);\n      }\n      else {\n        alert(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  textboxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }*/\n\n  render() {\n    const { isOpen, closeModal, refUrl, refCount } = this.props;\n    const refMsg = \"Hi, I found this job and thought of you. If you get it, we both receive rewards through JobsLab. Good luck! \";\n    \n    return (\n      <Dialog open={isOpen} onClose={closeModal} scroll={'body'} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\n      {/*<Modal\n        isOpen={isOpen}\n        closeTimeoutMS={200}\n        style={modalStyle.jobContentModalStyle}\n        onRequestClose={()=>closeModal('referralModalIsOpen')}\n        className=\"jobListModal\"\n        overlayClassName=\"jobListModal-Overlay\" \n        contentLabel=\"Example Modal\"\n      >\n        <Widget styleName=\"jr-card-profile\">*/}\n          <div className=\"mb-3\">\n            <span className=\"close-popup referral\" onClick={closeModal}><i className=\"la la-close\"></i></span>\n          </div>\n          <div className=\"referral-double\">\n            \n            <div className=\"referral-leftsec\">\n                <div className=\"col-lg-12\">\n          \t      {/*<div className=\"dashboard-photoframe referral\">\n        \t\t\t\t    <div className=\"color-overlay referral\"></div>\n        \t\t\t\t    <img style={{\"width\":\"100%\",\"height\":\"100%\"}} src={process.env.PUBLIC_URL + \"/refer-frd-min.jpg\"} alt=\"\" />\n        \t\t\t\t  </div>*/}\n        \t\t\t\t  <div className=\"dashboard-wordbox referral\">\n        \t\t\t\t    <h3>Invite Friends</h3>\n        \t\t\t\t    {/*<i class=\"fas fa-user-friends\"></i>*/}\n        \t\t\t\t    <span>Receive Thousands of Dollars in Cash Rewards</span>\n        \t\t\t\t  </div>\n          \t    </div>\n                <div class=\"share-bar\">\n                  {/*<div className=\"refer-media-div\"><span className=\"pf-title styleRF refer-media\">Send Referral Link through Social Media</span></div>*/}\n                  <WhatsappShareButton url={refUrl} title={refMsg} separator=\" \"><WhatsappIcon round={true} size={35} /></WhatsappShareButton>\n                  <EmailShareButton url={refUrl} subject=\"\" body={refMsg} separator=\" \"><EmailIcon round={true} size={35} /></EmailShareButton>\n                  <FacebookShareButton url={refUrl} quote={refMsg}><FacebookIcon round={true} size={35} /></FacebookShareButton>\n      \t\t \t\t\t\t<LinkedinShareButton url={refUrl}><LinkedinIcon round={true} size={35} /></LinkedinShareButton>\n           \t\t\t\t<TwitterShareButton url={refUrl} title={refMsg}><TwitterIcon round={true} size={40} /></TwitterShareButton>\n          \t\t\t\t{/*<TelegramShareButton url={refUrl}><TelegramIcon round={true} size={40} /></TelegramShareButton>*/}\n          \t \t\t\t{/*<a href=\"#\" title=\"\" class=\"share-fb\"><i class=\"fab fa-facebook-f\"></i></a>\n          \t\t\t\t<a href=\"#\" title=\"\" class=\"share-twitter\"><i class=\"fab fa-twitter\"></i></a>\n          \t\t \t\t<a href=\"#\" title=\"\" class=\"share-fb\"><i class=\"fab fa-linkedin-in\"></i></a>*/}\n          \t\t \t</div>\n          \t\t \t<div className=\"row referral-link-sec\">\n        \t        <div className=\"row col-lg-12\">\n        \t          <span className=\"pf-title styleRF refer-copy\">Copy Referral Link</span>\n        \t        </div>\n        \t        <div className=\"col-lg-12\">\n                    <div className=\"form-group referral\">\n                      <input className=\"form-control form-control-lg refer-link\" value={refUrl} size=\"100\" readOnly/>\n                      <CopyToClipboard text={refUrl} onCopy={() => this.copyUrl()}> \n                        <button className=\"refer-btn\"><i class=\"fas fa-link\"></i></button>\n                      </CopyToClipboard>\n                    </div>\n                  </div>\n            \t\t</div>\n          \t\t</div>\n            <div>\n                    \n          \t\t  {/*<div className=\"referral-count-sec\">\n            \t    <div className=\"referral-count\">\n                    <CountUp end={refCount} delay={0.3} duration={2.5} />\n\n                    <p>Referrals</p>\n                  </div>\n                </div>\n          \t    <div className=\"row referral-link-sec\">\n          \t        <div className=\"row col-lg-12\">\n          \t          <span className=\"pf-title styleRF refer-copy\">Copy Referral Link</span>\n          \t        </div>\n          \t        <div className=\"col-lg-12\">\n                      <div className=\"form-group referral\">\n                        <input className=\"form-control form-control-lg refer-link\" value={refUrl} size=\"100\" readOnly/>\n                        <CopyToClipboard text={refUrl} onCopy={() => this.copyUrl()}> \n                          <button className=\"refer-btn\"><i class=\"fas fa-link\"></i></button>\n                        </CopyToClipboard>\n                      </div>\n                    </div>\n          \t    </div>*/}\n          \t    \n                {/*<div className=\"extra-login\">\n          \t\t\t  <span>OR</span>\n            \t\t</div>\n            \t\t<div className=\"row col-lg-12\">\n            \t\t    <span className=\"pf-title styleRF\">Send Referral Link to friends</span>\n            \t\t</div>\n            \t\t<div className=\"row\">\n                    <div className=\"col-lg-10\">\n                      <div className=\"pf-field\">\n                        <input type=\"text\" name=\"email\" placeholder=\"Please enter email address...\" value={this.state.email} onChange={this.textboxChange} />\n                      </div>\n                    </div>\n                    <div className=\"col-lg-2\">\n                      <button className=\"referral-btn style2\" onClick={this.sendRefUrl}>Send</button>\n                    </div>\n                </div>*/}\n            \n            </div>\n            \n            \n          </div>\n        {/*</Widget>\n      </Modal>*/}\n      </Dialog>\n    );\n  }\n}\n\nexport default ReferralForm;\n","/home/ubuntu/environment/jobslab-web/src/components/popup/ReferCandidateForm.js",["2920","2921","2922","2923","2924","2925","2926"],"import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nimport Widget from \"components/Widget\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport { store } from 'react-notifications-component';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport axios from \"axios\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst dialog = withStyles(theme => ({\n  scrollBody: {\n       minWidth:'70%'\n    }\n}))(Dialog);\n\n  \n\nclass ReferCandidateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      candidate_list: [],\n      candidate: null,\n      \n      hasMore: true,\n  \t  pageSize: 999999,\n  \t  candidateList: [],\n  \t  searchText: \"\",\n      salary: { min: 0, max: 2000000 },\n      experience: { min: 0, max: 100 },\n  \t  lastUserId: null,\n  \t  noRecordFound: false,\n  \t  pageReady: false,\n  \t  checkedItemsIndustry: new Map(),\n  \t  activeCandidate: false,\n      myCandidate: false,\n      \n      email: '',\n      isLoading: false,\n    }\n  }\n  \n  componentDidMount() {\n     this.state.pageReady = true;\n     this.getMoreCandidate();\n  }\n  \n  getMoreCandidate = () => {\n    if(this.state.pageReady)\n    {\n      var industry = \"\";\n\n      this.state.checkedItemsIndustry.forEach(function(value, key) {\n        if(value)\n          industry += key + \",\";\n      });\n      if(industry.length>0)\n       industry = industry.substr(0, industry.length-1); \n       \n      axios.post('/api/admins/get/candidate/list/more' , {\n        lastUserId: this.state.lastUserId,\n        recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        searchCountryId: this.state.location ? this.state.location.value : \"default\",\n        searchIndustryId: industry,\n        minSalary: this.state.salary.min,\n        maxSalary: this.state.salary.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        activeCandidate: this.state.activeCandidate,\n        myCandidate: this.state.myCandidate,\n        //jobType: jobType\n      }) \n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({\n                candidate_list:  this.state.candidate_list.concat(res.data.candidateList),\n                hasMore: (res.data.hasMore == true)? true : false,\n                lastUserId: (res.data.candidateList.length > 0) ? res.data.candidateList[res.data.candidateList.length-1]._id: this.state.lastUserId,\n            });\n \n            //if records are not returned\n            if(!this.state.lastUserId)\n            {\n                 this.setState({ noRecordFound:true });\n            }\n          }\n        })\n        .catch(function (err) {\n          //console.log(err);\n        });   \n    }\n  }\n  \n  textboxChange = (e) => {\n    if(e.target.name)\n      this.setState({ [e.target.name]: e.target.value });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    //console.log(this.state.candidate);\n    this.setState({ [name]: value });\n  }\n  \n  resetForm = () => {\n    this.setState({\n      candidate: null\n    })\n    \n    this.props.closeModal('referCandidateOpen');\n  }\n  \n  recommendJob = (e) => {\n    e.preventDefault();\n    \n    if (this.state.candidate==null && this.state.job==null) {\n        store.addNotification({\n          title: \"Warning!\",\n          message: \"Please select candidate for recommendation\",\n          type: \"warning\",\n          insert: \"top\",\n          container: \"bottom-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            //onScreen: true\n          }\n        });\n      //alert(\"Please select job for recommendation\")\n    }\n    else {\n      const data = {\n        candId: this.state.candidate._id ? this.state.candidate._id : \"\",\n        jobId: this.props.jobId ? this.props.jobId : \"\",\n      }\n      //console.log(data)\n      \n      axios.post('/api/admins/set/job/recommend', data)\n      .then(res => {\n        if (res.data.isSuccess) {\n          store.addNotification({\n              title: \"Success\",\n              message: \"The job has been recommended to candidate.\",\n              type: \"success\",\n              insert: \"top\",\n              container: \"bottom-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: {\n                duration: 5000,\n                //onScreen: true\n              }\n          });\n       \n          //alert('The job has been recommended to candidate.');\n        }\n        else {\n          store.addNotification({\n              title: \"Warning!\",\n              message: res.data.msg,\n              type: \"warning\",\n              insert: \"top\",\n              container: \"bottom-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: {\n                duration: 5000,\n                //onScreen: true\n              }\n          });\n          //alert(res.data.msg);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n  \n  recommendJobByEmail = () => {\n    const data = {\n      email: this.state.email,\n      jobId: this.props.jobId ? this.props.jobId : \"\",\n    }\n    \n    axios.post('/api/jobs/set/job/recommend', data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        store.addNotification({\n            title: \"Success\",\n            message: \"The job has been recommended to candidate.\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"bottom-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              //onScreen: true\n            }\n        });\n     \n        //alert('The job has been recommended to candidate.');\n      }\n      else {\n        store.addNotification({\n            title: \"Warning!\",\n            message: res.data.msg,\n            type: \"warning\",\n            insert: \"top\",\n            container: \"bottom-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              //onScreen: true\n            }\n        });\n        //alert(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  /*viewProfile = () => {\n    var candId = (this.state.candidate != null) ? this.state.candidate._id : \"\";\n    if(candId)\n      window.open(\"/resume/\"+candId, \"_blank\");\n    else\n      alert(\"Candidate data error!\");\n  }*/\n  \n  render() {\n    const { isOpen } = this.props;\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.userInfo && option.userInfo.name ? option.userInfo.name.firstName : \"\") \n                            + \" \" + \n                            (option.userInfo && option.userInfo.name ? option.userInfo.name.lastName : \"\")),\n    });\n\n    var userInfo = (this.state.candidate && this.state.candidate.userInfo) ? this.state.candidate.userInfo : null;\n    var userId = this.state.candidate ? this.state.candidate._id : null;\n    return (\n      <Dialog open={isOpen} onClose={()=>this.resetForm()} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n        <DialogContent id=\"application-list\">  \n          <div className=\"mb-3\">\n            <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Candidate List <span className=\"close-popup\" onClick={()=>this.resetForm()}><i className=\"la la-close\"></i></span></h3>\n          </div>\n          <div className=\"account-popup-area signup-popup-box\">\n        \t<div className=\"referral-popup\">\n          \t  <div className=\"row justify-content-left\">\n        \t      <div className=\"col-md-6 mb-md-4\">\n                  <Autocomplete\n                      value={this.state.candidate}\n                      options={this.state.candidate_list}\n                      getOptionLabel={option => ((option.userInfo && option.userInfo.name ? option.userInfo.name.firstName : \"\") \n                                                + \" \" + \n                                                (option.userInfo && option.userInfo.name ? option.userInfo.name.lastName : \"\"))}\n                      filterOptions={filterOptions}\n                      id=\"candidate\"\n                      renderInput={params => (\n                        <TextField {...params} label=\"Candidate\" fullWidth />\n                      )}\n                      onChange={(e, value) => this.autocompleteChange(e, value, 'candidate')}\n                  />\n                </div>\n                <div className=\"col-md-12 mb-md-12 table-container\">\n                  <Table aria-label=\"customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell align=\"center\">Name</StyledTableCell>\n                          <StyledTableCell align=\"center\">Email</StyledTableCell>\n                          <StyledTableCell align=\"center\">Phone</StyledTableCell>\n                          {/*<StyledTableCell align=\"center\">Candidate Profile</StyledTableCell>*/}\n                          <StyledTableCell align=\"center\"></StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                      { userInfo && \n                          <StyledTableRow key='1'>\n                            <StyledTableCell align=\"center\">\n                              <a href={\"/resume/\"+userId} target=\"_blank\">\n                                {userInfo !=null ? \n                                (userInfo && userInfo.name ? \n                                    (userInfo.name.firstName|| \"\") + \" \" + (userInfo.name.lastName|| \"\")\n                                :\"\")\n                               :\"\"}\n                              </a>\n                            </StyledTableCell>\n                            <StyledTableCell align=\"center\">{userInfo !=null ? userInfo.email :\"\"}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{userInfo !=null ? \n                              (userInfo.phone ? (userInfo.phone.dial|| \"\") + \" \" + (userInfo.phone.number|| \"\")\n                              :\"\")\n                             :\"\"}</StyledTableCell>\n                            {/*<StyledTableCell align=\"center\">\n                            { this.state.candidate !=null ?\n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={() => this.viewProfile()}>\n                                  View Details\n                              </Button>\n                              : \"\"\n                            }\n                            </StyledTableCell>*/}\n                            <StyledTableCell align=\"center\">\n                            { userInfo !=null ?\n                              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={(e) => this.recommendJob(e)}>\n                                  Refer\n                              </Button>\n                              : \"\"\n                            }\n                            </StyledTableCell>\n                          </StyledTableRow>\n                      }\n        \n                      </TableBody>\n                    </Table>\n                  </div>\n                  <div className=\"extra-login\">\n      \t\t\t        <span className=\"or\">OR</span>\n      \t\t\t      </div>\n                <div className=\"col-md-6 mb-md-4\">\n    \t\t\t        <h3>Recommend to Non-User</h3>\n                    <TextField\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"example@jobslab.io\"\n                      id=\"email\"\n                      label=\"Email\"\n                      fullWidth\n                      margin=\"normal\"\n                      onChange={this.textboxChange}\n                      value={this.state.email}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary\" disabled={this.state.isLoading} onClick={this.recommendJobByEmail}>\n                      {this.state.isLoading && <i className='fa fa-spinner fa-spin' />} Send\n                    </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n      \n    );\n  }\n}\n\nexport default ReferCandidateForm;\n","/home/ubuntu/environment/jobslab-web/src/components/ReportBox/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/ChartCard/ChartCard.js",[],"/home/ubuntu/environment/jobslab-web/src/components/JobList/SkillTag/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/JobList/Filter/Filter.js",["2927","2928","2929","2930","2931","2932","2933","2934","2935","2936"],"import React, {Component, Fragment} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputRange from 'react-input-range';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Expand from \"react-expand-animated\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircleUnchecked from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Main,\r\n  BoxExpand,\r\n  ExpandBoxes\r\n} from \"./App.styles.js\";\r\n\r\nconst AutocompleteWithFilterStyle = withStyles({\r\n  tag: {\r\n    height: 24,\r\n    position: \"relative\",\r\n    backgroundColor: \"#3f51b5\",\r\n    //zIndex: 0,\r\n    \r\n    \"& .MuiChip-label\": {\r\n      color: \"#fff\"\r\n    },\r\n    \"& .MuiChip-deleteIcon\": {\r\n      width: 18,\r\n      color: \"#fff\"\r\n    },\r\n    \"&:hover .MuiChip-deleteIcon\": {\r\n      color: \"#f0f0fb\"\r\n    },\r\n    \r\n  }\r\n})(Autocomplete);\r\n\r\nclass Filter extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n       country_list : [],\r\n       industry_list : [],\r\n       //jobType_list : [],\r\n       salary: { min: 0, max: 500000 },\r\n       experience: { min: 0, max: 40 },\r\n       openBtnList : new Map(),\r\n       open: false,\r\n    };\r\n    \r\n  }\r\n  \r\n  componentDidMount() {\r\n    const countryData = this.props.countryList;\r\n    const industryData = this.props.industryList;\r\n    //const jobTypeData = this.props.jobCategoryList;\r\n    \r\n    if((countryData != null))\r\n        this.setState({country_list : Object.assign([], countryData)});\r\n    if((industryData != null)){\r\n      this.setState({\r\n        industry_list : Object.assign([], industryData),\r\n      });\r\n      \r\n    }\r\n    //if((jobTypeData != null))\r\n    //    this.setState({jobType_list : Object.assign([], jobTypeData)});\r\n\r\n  }\r\n\r\n  handleChange = name => (event, checked) => {\r\n    this.setState({[name]: checked});\r\n  };\r\n  \r\n  toggle = (targetListName) => {\r\n    //console.log(this.state.industry_list);\r\n    //console.log(this.state.jobType_list);\r\n    //console.log(this.state.country_list)\r\n    var list = this.state.openBtnList;\r\n    var isOpen = true;\r\n    if(list.has(targetListName))\r\n      isOpen = !(list.get(targetListName));\r\n    else\r\n      list.set(targetListName,isOpen);\r\n  \r\n    //console.log(list);\r\n    \r\n    list.forEach(function(value, key, map) {\r\n      //console.log(key);\r\n      if(key==targetListName)\r\n        list.set(key,isOpen);\r\n      else\r\n        list.set(key,false);\r\n    });\r\n    this.setState({\r\n      openBtnList : list\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const transitions = [\"height\", \"opacity\", \"background\"];\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\"  /*style={{'overflow-y':'auto'}}*/>\r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('country')} >Countries</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('country') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                    <div className=\"mb-12 filter-group\">\r\n                      <FormGroup>\r\n                         {this.state.country_list.map(item => (\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          color=\"primary\"\r\n                                          checked={this.state.checkedA}\r\n                                          onChange={this.handleChange('checkedA')}\r\n                                          value={item.label}\r\n                                        />\r\n                                      }\r\n                                      label={item.label}\r\n                                    />\r\n          \r\n                                  ))}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment>\r\n          */}\r\n          <p className=\"MuiFormHelperText-root text-black filterHeader\">Industries</p>\r\n          <AutocompleteWithFilterStyle\r\n            multiple\r\n            limitTags={2}\r\n            id=\"industry\"\r\n            options={this.state.industry_list}\r\n            disableCloseOnSelect\r\n            getOptionLabel={option => option.label}\r\n            value={this.state.industry_list.filter(item => (this.props.industrySelected ? this.props.industrySelected : []).find(i => i.value === item.value))}\r\n            renderOption={(option, { selected }) => (\r\n              <React.Fragment>\r\n                <Checkbox\r\n                  icon={<CircleUnchecked />}\r\n                  checkedIcon={<CircleCheckedFilled />}\r\n                  style={{ marginRight: 2 }}\r\n                  checked={selected}\r\n                />\r\n                {option.label}\r\n              </React.Fragment>\r\n            )}\r\n            style={{ width: \"95%\" }}\r\n            className=\"tagLimitStyle\"\r\n            renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n            onChange={(e, value) => this.props.autocompleteChange(e, value, 'industrySelected')}\r\n          />\r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('industry')}>Industries</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('industry') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                    <FormHelperText className=\"text-grey\">Industries</FormHelperText>\r\n                      <div  className=\"mb-12 filter-group\">\r\n                        <FormGroup>\r\n                          {this.state.industry_list.map(item => (\r\n                                      <FormControlLabel\r\n                                        control={\r\n                                          <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={(this.props.checkedItemsIndustry)?this.props.checkedItemsIndustry.get(item.value):false}\r\n                                            onChange= { () => this.props.handleCheckBoxChange('checkedItemsIndustry',item.value)}\r\n                                            value={item.label}\r\n                                          />\r\n                                        }\r\n                                        label={item.label}\r\n                                      />\r\n            \r\n                                    ))}\r\n            \r\n                        </FormGroup>\r\n                      </div>\r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment>*/}\r\n          {/*\r\n          <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'100%', 'margin-bottom':'5px'}} onClick={() => this.toggle('expReview')}>Locations</Button>\r\n          <Fragment>\r\n            <Main>\r\n              <Expand\r\n                open={this.state.openBtnList.get('expReview') == true ? true : false}\r\n                duration={500}\r\n                transitions={transitions}\r\n              >\r\n                <ExpandBoxes>\r\n                  <BoxExpand>\r\n                  <div  className=\"mb-12 filter-group\">*/}\r\n                  {/*\r\n                  <Autocomplete\r\n                            multiple\r\n                            id=\"location\"\r\n                            options={this.state.country_list}\r\n                            getOptionLabel={option => option.label}\r\n                            value={this.props.locationSelected}\r\n                            renderInput={params => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"outlined\"\r\n                                placeholder=\"\"\r\n                                fullWidth\r\n                              />\r\n                            )}\r\n                            onChange={(e, value) => this.props.autocompleteChange(e, value, 'locationSelected')}\r\n                          />*/}\r\n                    <p className=\"MuiFormHelperText-root text-black filterHeader\">Locations</p>\r\n                    <AutocompleteWithFilterStyle\r\n                      multiple\r\n                      limitTags={2}\r\n                      id=\"location\"\r\n                      options={this.state.country_list}\r\n                      disableCloseOnSelecte\r\n                      getOptionLabel={option => option.label}\r\n                      value={this.state.country_list.filter(item => (this.props.locationSelected ? this.props.locationSelected : []).find(i => i.value === item.value))}\r\n                      renderOption={(option, { selected }) => (\r\n                        <React.Fragment>\r\n                          <Checkbox\r\n                            icon={<CircleUnchecked />}\r\n                            checkedIcon={<CircleCheckedFilled />}\r\n                            style={{ marginRight: 2 }}\r\n                            checked={selected}\r\n                          />\r\n                          {option.label}\r\n                        </React.Fragment>\r\n                      )}\r\n                      style={{ width: \"95%\" }}\r\n                      className=\"tagLimitStyle\"\r\n                      renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n                      onChange={(e, value) => this.props.autocompleteChange(e, value, 'locationSelected')}\r\n                    />\r\n                    {/*</div>\r\n                    <FormHelperText className=\"text-grey\">Experts Reviews</FormHelperText>\r\n                      <div  className=\"mb-12 filter-group\">\r\n                        <FormGroup>\r\n                          {this.state.jobType_list.map(item => (\r\n                                      <FormControlLabel\r\n                                        control={\r\n                                          <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={(this.props.checkedItemsJobType)?this.props.checkedItemsJobType.get(item.value):false}\r\n                                            onChange= { () => this.props.handleCheckBoxChange('checkedItemsJobType',item.value)}\r\n                                          />\r\n                                        }\r\n                                        label={item.label}\r\n                                      />\r\n            \r\n                                    ))}\r\n            \r\n                        </FormGroup>\r\n                      </div>\r\n                   \r\n                  </BoxExpand>\r\n                </ExpandBoxes>\r\n              </Expand>\r\n            </Main>\r\n          </Fragment> */}\r\n          \r\n          \r\n\t\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Offered Salary</p>\r\n\t\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px','padding-left':'10px'}}>\r\n\t\t\t \t\t\t\t<InputRange\r\n\t\t\t \t\t\t\t  step={5000}\r\n                maxValue={500000}\r\n                minValue={0}\r\n                value={this.props.salary}\r\n                onChange={salary => { this.props.onFieldChanged(\"salary\", salary)}} />\r\n\t\t\t \t\t\t</div>\r\n\t\t\t \t\t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Experience</p>\r\n\t\t\t \t\t\t<div className=\"specialism_widget\" style={{width:'90%','padding-top':'20px','padding-left':'10px'}}>\r\n\t\t\t \t\t\t\t<InputRange\r\n\t\t\t \t\t\t\t  step={1}\r\n                maxValue={40}\r\n                minValue={0}\r\n                value={this.props.experience}\r\n                onChange={experience => { this.props.onFieldChanged(\"experience\", experience)}} />\r\n\t\t\t \t\t\t</div>\r\n\t\t\t \t\t<p className=\"MuiFormHelperText-root text-black filterHeader\">Enable AI Engine</p>\t\r\n          <Switch\r\n          classes={{\r\n            checked: 'text-primary',\r\n            track: 'bg-primary',\r\n          }}\r\n          checked={this.props.enabledAIEngine}\r\n          onChange={ () => this.props.handlePropChange('enabledAIEngine')}\r\n          aria-label=\"Enable AI Engine\"\r\n        />\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.clearFilter() }}>\r\n                        <font size=\"\"><i className=\"la la-undo mr-2\"/></font>\r\n                            Clear\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" style={{'width':'45%', 'height': '35px'}} onClick={() => { this.props.searchJob() }}>\r\n                        <font size=\"\"><i className=\"la la-search mr-2\"/></font>\r\n                            Search\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   const {countryList, jobCategoryList, industryList} = state.list;\r\n  return {\r\n    countryList,\r\n    jobCategoryList, \r\n    industryList\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Filter));","/home/ubuntu/environment/jobslab-web/src/components/JobList/Filter/App.styles.js",["2937","2938"],"/home/ubuntu/environment/jobslab-web/src/Routes.js",["2939","2940","2941","2942","2943","2944","2945","2946","2947","2948","2949","2950","2951","2952","2953"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n//import {MuiPickersUtilsProvider} from 'material-ui-pickers';\nimport MomentUtils from '@date-io/moment';\nimport cyanTheme from 'styles/themes/cyanTheme';\nimport asyncComponent from 'util/asyncComponent';\nimport ScrollToTop from 'util/ScrollToTop';\nimport {IntlProvider} from 'react-intl'\nimport AppLocale from 'lngProvider';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport Sidebar from 'components/sideBar/SideNav/index';\n\nimport Home from './app/general/Home';\nimport HomeRemake from './app/general/HomeRemake';\nimport Employer from './app/general/Employer';\nimport TermsOfUse from './app/general/TermsOfUse';\nimport PrivacyPolicy from './app/general/PrivacyPolicy';\nimport FAQ from './app/general/FAQ';\nimport ContactUs from './app/general/ContactUs';\nimport JobList from './app/job/JobList';\nimport Job from './app/job/Job';\nimport Resume from './app/resume/Resume';\n\nimport ClientDashboard from './app/client/ClientDashboard';\nimport ClientJobList from './app/client/ClientJobList';\nimport ClientRegister from './app/client/ClientRegister';\n\nimport TaxCalculator from './app/general/TaxCalculator';\nimport SalaryConverter from './app/general/ConvertPage';\n\nimport CandidateDashboard from './app/candidate/CandidateDashboard';\nimport CandidateJobAlert from './app/candidate/CandidateJobAlert';\nimport UserSettings from './app/user/UserSettings';\nimport Login from './app/user/Login';\nimport Verification from './app/user/Verification';\nimport PasswordReset from './app/user/PasswordReset';\n//import CandidateApplication from './app/candidate/CandidateApplication';\n//import CandidateApplicationList from './app/candidate/CandidateApplicationList';\nimport CandidateRegister from './app/candidate/CandidateRegister';\n\nimport Application from './app/application/Application';\nimport VideoInterview from './app/application/VideoInterview';\n\nimport NotFound from './app/general/NotFound';\n\nimport Test from './app/test/Test';\nimport TestRecorder from './app/test/TestRecorder';\nimport TestHome from './app/general/TestHome';\n\nimport ComingSoon from './app/general/ComingSoon';\n\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nimport { changeNavigationStyle } from 'actions/index';\n\nimport {\n  ABOVE_THE_HEADER,\n  BELOW_THE_HEADER,\n  COLLAPSED_DRAWER,\n  FIXED_DRAWER,\n  HORIZONTAL_NAVIGATION,\n  VERTICAL_NAVIGATION,\n} from 'constants/ActionTypes';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownSearchBar : true,\n      headerWidth : '100%',\n    }\n  }\n  \n  componentDidMount() {\n  }\n  \n  \n  updateHeaderStyle = (style, isShownSearch) => {\n    var headerType = (style == VERTICAL_NAVIGATION) ? VERTICAL_NAVIGATION : \n    (style == HORIZONTAL_NAVIGATION  ? HORIZONTAL_NAVIGATION : \"\");\n    if(headerType)\n      this.props.changeNavigationStyle(headerType);\n      \n    if(isShownSearch)\n      this.setState({\n        isShownSearchBar : true\n      })\n    else\n      this.setState({\n        isShownSearchBar : false\n      })\n  }\n  \n  render() {\n    const {navigationStyle} = this.props;\n    const {locale} = this.props;\n    //const Home = () => <Redirect to='/' />\n    let applyTheme = createMuiTheme(cyanTheme);\n    const currentAppLocale = AppLocale[locale.locale];\n    console.log(this.props.match);\n    return (\n      <div>\n       <ThemeProvider theme={applyTheme}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <IntlProvider\n            locale={currentAppLocale.locale}\n            messages={currentAppLocale.messages}>\n            <div className=\"app-main\">\n              <div className=\"app-main-container\">\n                <Sidebar />\n                <div className={`app-header ${navigationStyle === HORIZONTAL_NAVIGATION ? 'app-header-horizontal' : ''}`}>\n                  <Header enableSearchBar={this.state.isShownSearchBar} />\n                </div>\n                <main className={`app-main-content-wrapper ${navigationStyle === HORIZONTAL_NAVIGATION ? 'transparent-header' : ''} ${ window.location.pathname === \"/joblist\" ? 'joblist' : ''}`}>\n                  <div className=\"app-main-content\">\n                  <ScrollUpButton ToggledStyle={{bottom: 100, right: 40}} />\n                    <Switch>\n                        <Route exact path='/terms-of-use' render={props => <TermsOfUse updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/privacy-policy' render={props => <PrivacyPolicy updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/faq' render={props => <FAQ updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/contact' render={props => <ContactUs updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route exact path='/login' render={props => <Login updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/password/reset/:token' render={props => <PasswordReset {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route path=\"/joblist*\" render={props => <JobList {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/job/:jobId/:refId?' render={props => <Job {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route exact path='/employer' render={props => <Employer updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/employer/register' render={props => <ClientRegister updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route exact path=\"/applicant/:token\" render={props => <Resume {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path=\"/applicant/interview/video/:token\" render={props => <VideoInterview {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route excat path=\"/tax/calculator\" render={props => <TaxCalculator {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path=\"/salary/converter\" render={props => <SalaryConverter {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <PrivateRoute exact path=\"/resume/:Id\" component={Resume} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin,client\"} />\n                        <PrivateRoute exact path=\"/settings\" component={UserSettings} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        <PrivateRoute exact path=\"/application/:appId\" component={Application} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        <PrivateRoute exact path=\"/application/interview/video/:inVideoId\" component={VideoInterview} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        <PrivateRoute exact path=\"/candidate/dashboard\" component={CandidateDashboard} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"candidate\"} />\n                        <PrivateRoute exact path=\"/candidate/jobalert\" component={CandidateJobAlert} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"candidate\"} />\n                        \n                        <PrivateRoute exact path=\"/candidate/profile\" component={Resume} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"candidate\"} />\n                        <PrivateRoute exact path=\"/candidate/register\" component={CandidateRegister} updateHeaderStyle={this.updateHeaderStyle} isRedirect={\"Register\"} pageRole={\"candidate\"} />\n                        \n                        <PrivateRoute path=\"/client/dashboard\" component={ClientDashboard} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"client\"} />\n                        <PrivateRoute path=\"/client/joblist\" component={ClientJobList} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"client\"} />\n                        \n                        <PrivateRoute exact path=\"/verification\" component={Verification} isRedirect={\"Verification\"} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        {/*<Route exact path='/comingsoon' render={props => <ComingSoon updateHeaderStyle={this.updateHeaderStyle}  /> } />*/}\n                        {/*<Route exact path='/testhome' render={props => <TestHome updateHeaderStyle={this.updateHeaderStyle}  /> } />*/}\n                        {/*<Route exact path='/test' component={Test} />\n                        <Route exact path='/testrec' component={TestRecorder} />*/}\n                        <Route exact path='/' render={props => <HomeRemake updateHeaderStyle={this.updateHeaderStyle}  /> } />\n\n                        <Route render={props => <HomeRemake updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        {/*<Route path=\"*\"><NotFound updateHeaderStyle={this.updateHeaderStyle} /></Route>*/}\n                    </Switch>\n                  </div>\n                  <Footer/>                \n               </main>\n              </div>\n            </div>\n           </IntlProvider>\n         </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {locale, navigationStyle} = state.settings;\n  return { locale, navigationStyle}\n};\n\nexport default withRouter(connect(mapStateToProps, { changeNavigationStyle })(Routes));\n","/home/ubuntu/environment/jobslab-web/src/app/general/ComingSoon.js",["2954","2955","2956","2957","2958"],"import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport config from 'react-reveal/globals';\nimport PropTypes from \"prop-types\";\nimport {\n  EmailIcon,\n  FacebookIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport Button from '@material-ui/core/Button';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL, JOBSLAB_ICON_URL } from 'constants/PictureUrl';\n\nconfig({ ssrFadeout: true });\n\n\nclass ComingSoon extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeAnimation: false\n    }\n  }\n  componentDidMount() {\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ fadeAnimation: true });\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    \n    return (\n      <div className=\"home-wrapper\">\n        <div className=\"home-imgcontainer comingsoon\">\n          <div className=\"parallax-home\"></div>\n          <Fade duration={2000}>\n          <div className=\"home-wordcontainer comingsoon-spacing\">\n          {/*\n            <div>\n              <img style={{'min-width':'200px','width':'25vw','text-align':'center'}} src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/logo/jobslab_white.png\" alt=\"Jobslab\" title=\"Jobslab\"/>\n            </div>\n            <div style={{'margin-top':'80px','text-align':'center','width':'100%'}} >*/}\n            \n          <div className=\"home-wordcontainer comingsoon\" style={{'height':'40vh'}}>\n          <img style={{'min-width':'200px','width':'20vw','height':'auto'}} src={encodeURI(JOBSLAB_ICON_URL+\"jobslab_white.png\")} alt=\"Jobslab\" title=\"Jobslab\"/>\n          </div>\n          <div className=\"home-wordcontainer comingsoon\">\n              <div className=\"lds-dual-ring\"></div>\n              <span>OUR NEW SITE IS</span>\n              <h3>COMING</h3>\n              <h3>SOON</h3>\n              <p>FOLLOW US FOR UPDATES</p>\n              <div class=\"share-bar comingsoon\">\n                  {/*<div className=\"refer-media-div\"><span className=\"pf-title styleRF refer-media\">Send Referral Link through Social Media</span></div>*/}\n                  <button onClick={(e) => this.openLink(e, 'https://facebook.com/jobslab.io')}><FacebookIcon round={true} size={'7vh'} /></button>\n      \t\t \t\t\t\t<button onClick={(e) => this.openLink(e, 'https://www.linkedin.com/company/jobslab','_blank')}><LinkedinIcon round={true} size={'7vh'} /></button>\n      \t\t \t\t\t\t<button onClick={(e) => this.openLink(e, 'https://twitter.com/jobslabjobs','_blank')}><TwitterIcon round={true} size={'7vh'} /></button>\n          \t\t</div>\n          \t</div>\n           {/* </div>*/}\n          </div>\n          </Fade>\n          <div className=\"color-overlay comingsoon\"></div>\n          {/*<video id=\"home-video\" autoPlay muted loop playsInline ref={this.nav}>\n          <source  src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/video/home/home.mp4\" type=\"video/mp4\" />\n          </video>*/}\n          <img src={encodeURI(WEB_IMAGE_URL+\"comingsoon/ComingSoon.jpg\")} alt=\"\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ComingSoon;\n","/home/ubuntu/environment/jobslab-web/src/app/client/ClientDashboard.js",["2959","2960","2961","2962","2963"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Link as ScrollLink, Element } from 'react-scroll';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\n\n\nimport { Grid } from '@material-ui/core';\n\nimport WelcomeCard from 'components/dashboard/Client/WelcomeCard';\nimport ClientProfile from 'components/dashboard/Client/ClientProfile';\nimport ExpertList from \"components/dashboard/Common/ExpertList\";\nimport CandidateListCard from 'components/dashboard/Client/CandidateListCard';\nimport JobPostListCard from 'components/dashboard/Client/JobPostListCard';\nimport ChartCard from \"components/dashboard/Client/ChartCard\";\nimport { Area, AreaChart, ResponsiveContainer, Tooltip} from \"recharts\";\nimport { chartCardData, increamentData } from \"./data\";\n\nimport CandidateStatus from 'components/dashboard/Client/CandidateStatus';\nimport YearlyStatus from 'components/dashboard/Client/YearlyStatus';\n\nimport ReactTooltip from \"react-tooltip\";\n\n\n\nclass ClientDashboard extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.resetInifScroll();\n     \n    this.state = {\n      loader: true,\n      hasMore: new Map(),\n      \n      jobList: [],\n      jobYearlyChartData: [],\n      applicantYearlyChartData: [],\n      jobCount: 0,\n      recommendedCandidateList: [],\n      appCount: 0,\n      recommendCount: 0,\n      appCountMonthly: 0,\n      recommendCountMonthly: 0,\n      videoCountMonthly: 0,\n      interviewCountMonthly: 0\n      /*postJobList: [\n        { _id: 0 , \n          date: \"29/04/2021\", \n          jobTitle: \"Independent Non-Executive Director\", \n          salary: \"$60,000\", \n          year: \"20 years\", \n          status: \"Public\", \n          views: \"2240\", \n          applicants: [\n            {id:0,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1ddc43be07b48f5e78b57/1599474539195.png\"},\n            {id:1,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ec2d9f8893aa55cce1c1358/1604656305963.png\"},\n            {id:2,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5edd9b7d7b7d2928e0eab354/1591942513739.png\"},\n          ],\n          number: 5,\n        },\n        { _id: 1 , \n          date: \"26/04/2021\", \n          jobTitle: \"ESG Bonds - Director\", \n          salary: \"$160,000\", \n          year: \"10 years\", \n          status: \"Public\", \n          views: \"1240\",  \n          applicants: [\n            {id:3,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1ddc43be07b48f5e78b57/1599474539195.png\"},\n            {id:1,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1efc33be07b33d1e78b5e/1591867024011.png\"},\n            {id:2,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1f0db3be07bc76ae78b5f/1591881535774.png\"},\n          ],\n          number: 14,\n        },\n        { _id: 2 , date: \"22/04/2021\", jobTitle: \"Convertible Bond Sales - VP or Director\", salary: \"$200,000\", year: \"10 years\", status: \"Public\", views: \"1372\", \n        applicants: [\n            {id:1,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1ddc43be07b48f5e78b57/1599474539195.png\"},\n            {id:2,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1efa33be07b8001e78b5d/1591881586844.png\"},\n            {id:3,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1f0db3be07bc76ae78b5f/1591881535774.png\"},\n          ],\n          number: 18,},\n        { _id: 3 , date: \"19/03/2021\", jobTitle: \"Vice President - China ECM\", salary: \"$150,000\", year: \"8 years\", status: \"Public\", views: \"1202\", \n        applicants: [\n            {id:1,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1ddc43be07b48f5e78b57/1599474539195.png\"},\n            {id:3,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1f0db3be07bc76ae78b5f/1591881535774.png\"},\n            {id:2,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ec2d9f8893aa55cce1c1358/1604656305963.png\"},\n            {id:3,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5edd9b7d7b7d2928e0eab354/1591942513739.png\"},\n          ],\n          number: 28,},\n        { _id: 4 , date: \"12/01/2021\", jobTitle: \"Non-Executive Director (NED)\", salary: \"$70,000\", year: \"18 years\", status: \"Closed\", views: \"2072\", \n        applicants: [\n            {id:1,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1efc33be07b33d1e78b5e/1591867024011.png\"},\n            {id:1,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ec2d9f8893aa55cce1c1358/1604656305963.png\"},\n            {id:2,image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5edd9b7d7b7d2928e0eab354/1591942513739.png\"},\n          ],\n          number: 36,},\n\n      ],*/\n      \n      /*recommendedCandidateList: [\n        { _id:0,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1eed43be07b7734e78b5a/1591866684070.png\",\n          name: \"Michelle Tam\",\n          salary: \"$50,000\",\n          year: \"12 years\",\n          jobTitle: \"General Manager\",\n          company: \"Climate Bonds Initiative\",\n          industry: \"Public Sector\",\n          location: \"Hong Kong\"\n        },\n        { _id:1,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1eebd3be07b7e13e78b59/1591866651961.png\",\n          name: \"Mark Liu\",\n          salary: \"$67,000\",\n          year: \"26 years\",\n          jobTitle: \"Manager of ESG & Impact Advisory Business\",\n          company: \"Ogier Global\",\n          industry: \"Consulting, Financial Advisory & Outsourcing\",\n          location: \"Hong Kong\"\n        },\n        { _id:2,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1eee03be07bc8dee78b5b/1591866707875.png\",\n          name: \"Raymond Lam\",\n          salary: \"$95,000\",\n          year: \"19 years\",\n          jobTitle: \"Senior Vice President\",\n          company: \"China Construction Bank (Asia) Corporation Limited\",\n          industry: \"Corporate Banking\",\n          location: \"Hong Kong\"\n        },\n      ],*/\n      \n      /*videoRequestedList: [\n        { _id:0,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1efc33be07b33d1e78b5e/1591867024011.png\",\n          name: \"Michelle Tam\",\n          salary: \"$50,000\",\n          year: \"12 years\",\n          jobTitle: \"General Manager\",\n          company: \"Climate Bonds Initiative\",\n          industry: \"Public Sector\",\n          location: \"Hong Kong\"\n        },\n        { _id:1,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1ddc43be07b48f5e78b57/1599474539195.png\",\n          name: \"Mark Liu\",\n          salary: \"$67,000\",\n          year: \"26 years\",\n          jobTitle: \"Manager of ESG & Impact Advisory Business\",\n          company: \"Ogier Global\",\n          industry: \"Consulting, Financial Advisory & Outsourcing\",\n          location: \"Hong Kong\"\n        },\n        { _id:2,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ec2d9f8893aa55cce1c1358/1604656305963.png\",\n          name: \"Raymond Lam\",\n          salary: \"$95,000\",\n          year: \"19 years\",\n          jobTitle: \"Senior Vice President\",\n          company: \"China Construction Bank (Asia) Corporation Limited\",\n          industry: \"Corporate Banking\",\n          location: \"Hong Kong\"\n        },\n      ],*/\n      \n      /*interviewRequestedList: [\n        { _id:0,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1efc33be07b33d1e78b5e/1591867024011.png\",\n          name: \"Michelle Tam\",\n          salary: \"$50,000\",\n          year: \"12 years\",\n          jobTitle: \"General Manager\",\n          company: \"Climate Bonds Initiative\",\n          industry: \"Public Sector\",\n          location: \"Hong Kong\"\n        },\n        { _id:1,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ee1ddc43be07b48f5e78b57/1599474539195.png\",\n          name: \"Mark Liu\",\n          salary: \"$67,000\",\n          year: \"26 years\",\n          jobTitle: \"Manager of ESG & Impact Advisory Business\",\n          company: \"Ogier Global\",\n          industry: \"Consulting, Financial Advisory & Outsourcing\",\n          location: \"Hong Kong\"\n        },\n        { _id:2,\n          image:\"https://jobslab-media.s3.ap-east-1.amazonaws.com/profile/5ec2d9f8893aa55cce1c1358/1604656305963.png\",\n          name: \"Raymond Lam\",\n          salary: \"$95,000\",\n          year: \"19 years\",\n          jobTitle: \"Senior Vice President\",\n          company: \"China Construction Bank (Asia) Corporation Limited\",\n          industry: \"Corporate Banking\",\n          location: \"Hong Kong\"\n        },\n      ],*/\n    }\n  }\n\n  componentDidMount() {\n    this.updateDashboard();\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);\n  }\n  \n  resetInifScroll = async () => {\n    var hasMore = new Map();\n    //posted jobs\n    hasMore.set(\"jobPosted\",true);\n\n    var pageNum = new Map();\n    //posted jobs\n    pageNum.set(\"jobPosted\",1);\n    \n    this.setState({\n      hasMore: hasMore,\n      pageNum: pageNum,\n    })\n  }\n  \n  updateDashboard = async () => {\n    await this.resetInifScroll();\n    \n    this.getStats();\n    this.getYearlyStats();\n    this.getJobList();\n    this.getRecommendedCandidates();\n    this.getVideoRequested();\n    this.getInterviewRequested();\n  }\n  \n  updateHasMore(param, status){\n    var hasMore = this.state.hasMore;\n    hasMore.set(param, status ? true : false);\n    return hasMore;\n  }\n  \n  updatePageNum(param, page){\n    var pageNum = this.state.pageNum;\n    pageNum.set(param, page ? page : 1);\n    return pageNum;\n  }\n  \n  getStats() {\n    axios.get('/api/clients/get/dashboard/stats')\n    .then(res => {\n      if (res.data.isSuccess) {\n        this.setState({\n          jobCount: res.data.jobCount,\n          appCount: res.data.appCount,\n          recommendCount: res.data.recommendCount,\n          \n          appCountMonthly: res.data.appCountMonthly,\n          recommendCountMonthly: res.data.recommendCountMonthly,\n          videoCountMonthly: res.data.videoCountMonthly,\n          interviewCountMonthly: res.data.interviewCountMonthly\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getYearlyStats() {\n    axios.get('/api/clients/get/dashboard/yearly/stats').then(res => {\n      if (res.data.isSuccess) {\n        this.setState({\n          jobYearlyChartData: res.data.jobResultList,\n          applicantYearlyChartData: res.data.applicantResultList\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });  \n  \n }\n  getJobList() {\n    var currentPage = this.state.pageNum.get(\"jobPosted\") ? this.state.pageNum.get(\"jobPosted\") : 1\n  \taxios.post('/api/jobs/get/control/job/list/more', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n  \t})\n    .then(res => {\n      if (res.data.isSuccess) {\n        \n        var hasMore = this.updateHasMore(\"jobPosted\", res.data.hasMore ? true : false);\n        var pageNum = this.updatePageNum(\"jobPosted\", currentPage + 1);\n        \n        this.setState({\n          jobList: res.data.jobList,\n          hasMore : hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getRecommendedCandidates() {\n    var currentPage = this.state.pageNum.get(\"recommendedCandidate\") ? this.state.pageNum.get(\"recommendedCandidate\") : 1\n    axios.post('/api/clients/get/application/list', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n        type: \"recommend\"\n  \t})\n    .then(res => {\n      if (res.data.isSuccess) {\n        \n        var hasMore = this.updateHasMore(\"recommendedCandidate\", res.data.hasMore ? true : false);\n        var pageNum = this.updatePageNum(\"recommendedCandidate\", currentPage + 1);\n        \n        this.setState({\n          recommendedCandidateList: res.data.app_list,\n          recommendedCandidateCount: res.data.app_list.length,\n          hasMore : hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getVideoRequested() {\n    var currentPage = this.state.pageNum.get(\"video\") ? this.state.pageNum.get(\"video\") : 1\n    axios.post('/api/clients/get/application/list', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n        isRecommendedCandidate: true,\n        type: \"video\"\n  \t}).then(res => {\n      if (res.data.isSuccess) {\n        \n        var hasMore = this.updateHasMore(\"video\", res.data.hasMore ? true : false);\n        var pageNum = this.updatePageNum(\"video\", currentPage + 1);\n        \n        this.setState({\n          videoRequestedList: res.data.app_list,\n          videoCount: res.data.app_list.length,\n          hasMore : hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n    /*var res = {\n      data: {\n        hasMore: true,\n        cand_list: {\n          0 : {name:\"Thomas Chan\"},            \n        }\n      },\n    }//call api\n    \n    var hasMore = this.updateHasMore(\"video\", res.data.hasMore ? true : false);\n    var pageNum = this.updatePageNum(\"video\", currentPage + 1);\n    \n    this.setState({\n      videoRequestedList: res.data.video_list,\n      videoCount: res.data.video_list.length,\n      hasMore : hasMore,\n      pageNum: pageNum\n    });*/\n      \n  }\n  \n  getInterviewRequested() {\n    var currentPage = this.state.pageNum.get(\"interview\") ? this.state.pageNum.get(\"interview\") : 1\n    axios.post('/api/clients/get/application/list', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n        isRecommendedCandidate: true,\n        type: \"interview\"\n  \t}).then(res => {\n      if (res.data.isSuccess) {\n        \n        var hasMore = this.updateHasMore(\"interview\", res.data.hasMore ? true : false);\n        var pageNum = this.updatePageNum(\"interview\", currentPage + 1);\n        \n        this.setState({\n          interviewRequestedList: res.data.app_list,\n          interviewCount: res.data.app_list.length,\n          hasMore : hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });    \n    /*var res = {\n      data: {\n        hasMore: true,\n        interview_list: {\n          0 : {name:\"Thomas Chan\"},            \n        }\n      },\n    }//call api\n    \n    var hasMore = this.updateHasMore(\"interview\", res.data.hasMore ? true : false);\n    var pageNum = this.updatePageNum(\"interview\", currentPage + 1);\n    \n    this.setState({\n      interviewRequestedList: res.data.interview_list,\n      interviewCount: res.data.interview_list.length,\n      hasMore : hasMore,\n      pageNum: pageNum\n    });\n      */\n  }\n     \n\n  render() {\n    const { loader, videoRequestedList, interviewRequestedList } = this.state;\n    var { jobList, recommendedCandidateList, jobYearlyChartData, applicantYearlyChartData  } = this.state;\n    var { jobCount, recommendCount, appCount } = this.state;\n    var { appCountMonthly, recommendCountMonthly, videoCountMonthly, interviewCountMonthly } = this.state;\n    \n    return (\n      <div className=\"app-wrapper\">\n        <Helmet>\n            <title>Client Dashboard</title>\n        </Helmet>\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div className=\"row\">\n          <Helmet>\n              <title>My Dashboard | JobsLab</title>\n          </Helmet>\n          {/*\n          <Tour\n            steps={steps}\n            isOpen={isTourOpen}\n            rounded={10}\n            onRequestClose={this.closeTour}\n            onAfterOpen={this.disableBody}\n            onBeforeClose={this.enableBody}\n            showCloseButton = {false}\n            disableInteraction = {true}\n            closeWithMask = {false}\n            lastStepNextButton = {<Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"><font>Finish!</font></Button>}\n          />\n          */}\n          <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-12\">\n            <ClientProfile />\n            {/*<WelcomeCard />*/}\n            <Element name=\"experts\" className=\"element\">\n              <ExpertList />\n            </Element>\n          </div>\n          \n          <div className=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12\">\n            <div className=\"row\">\n              <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\n                <ScrollLink activeClass=\"active\" className=\"dashboard-chartcard\" to=\"jobs\" spy={true} smooth={true} offset={-80} duration={500}>\n                  \n                  <ChartCard styleName=\"bg-secondary text-white\" chartHeaderStyle=\"pb-0\">\n                    \n                  <div className=\"row\">\n                    <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10\">\n                      <div className=\"chart-title\">\n                        <h2 className=\"mb-1\">{ jobCount }</h2>\n                        <p>Posted Jobs</p>\n                      </div>\n                    </div>\n                    {/*<div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2\" data-tip=\"Post a Job\">\n                      <a href=\"\"><i class=\"fas fa-plus-circle h1 text-white\"></i></a>\n                    </div>*/}\n                  </div>\n      \n                    <ResponsiveContainer width=\"100%\" height={80}>\n                      <AreaChart data={increamentData} margin={{top: 0, right: 0, bottom: 0, left: 0}}>\n                        {/*<Tooltip/>*/}\n                        <Area type=\"monotone\" dataKey=\"pv\" stroke=\"rgba(255,255,255,0.5)\" activeDot={{r: 8}}\n                              fillOpacity={.5}\n                              fill=\"rgba(255,255,255,0.8)\"/>\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  </ChartCard>\n                </ScrollLink>\n              </div>\n                <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\n                  <ScrollLink activeClass=\"active\" className=\"dashboard-chartcard\" to=\"candidates\" spy={true} smooth={true} offset={-80} duration={500}>\n                    <ChartCard styleName=\"bg-gradient-primary text-white\" chartHeaderStyle=\"pb-0\">\n                      <div className=\"chart-title\">\n                        <h2 className=\"mb-1\">{ recommendCount }</h2>\n                        <p>Recommended Candidates</p>\n                      </div>\n        \n                      <ResponsiveContainer width=\"100%\" height={80}>\n                        <AreaChart data={chartCardData} margin={{top: 0, right: 0, bottom: 0, left: 0}}>\n                          {/*<Tooltip/>*/}\n                          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"rgba(255,255,255,0.5)\" activeDot={{r: 8}}\n                                fillOpacity={.5}\n                                fill=\"rgba(255,255,255,0.8)\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </ChartCard>\n                  </ScrollLink>\n                </div>\n                  \n                  <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\n                    <ChartCard styleName=\"bg-warning text-white\" chartHeaderStyle=\"pb-0\">\n                      <div className=\"row\">\n                        <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10\">\n                          <div className=\"chart-title\">\n                            <h2 className=\"mb-1\">{ appCount }</h2>\n                            <p>Applications</p>\n                          </div>\n                        </div>\n                        {/*<div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2\" data-tip=\"Get Applicant Reccomendations\">\n                          <a href=\"\"><i class=\"fas fa-user-plus h1 text-white\"></i></a>\n                        </div>*/}\n                      </div>\n        \n                      <ResponsiveContainer width=\"100%\" height={80}>\n                        <AreaChart data={chartCardData} margin={{top: 0, right: 0, bottom: 0, left: 0}}>\n                          {/*<Tooltip/>*/}\n                          <Area type=\"linear\" dataKey=\"pv\" stroke=\"rgba(255,255,255,0.5)\" activeDot={{r: 8}}\n                                fillOpacity={.5}\n                                fill=\"rgba(255,255,255,0.8)\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </ChartCard>\n                  </div>\n                  \n                  <ReactTooltip \n                    effect={\"solid\"}\n                    multiline={true}\n                    place={\"top\"}\n                    className={\"intro-tooltip\"}\n                  />\n                          \n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1\">\n                <Element name=\"jobs\" className=\"element\">\n                  <JobPostListCard jobList={jobList}/>\n                </Element>\n              </div>\n              \n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1\">\n                <Element name=\"candidates\" className=\"element\">\n                  <CandidateListCard  hasMore={this.state.hasMore}  \n                                      loadAllMore={this.getRecommendedCandidates.bind(this)}  \n                                      loadMatchedMore={this.getVideoRequested.bind(this)} \n                                      loadRecommendedMore={this.getInterviewRequested.bind(this)} \n                                      recommendedCandidateList={recommendedCandidateList}\n                                      videoRequestedList={videoRequestedList} \n                                      interviewRequestedList={interviewRequestedList}/>\n                </Element>\n              </div>\n              \n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1\">\n                <div className=\"row\">\n                  <div className=\"col-xl-6 col-lg-12 order-xl-2\">\n                    <CandidateStatus \n                      appCountMonthly={appCountMonthly}\n                      recommendCountMonthly={recommendCountMonthly}\n                      videoCountMonthly={videoCountMonthly}\n                      interviewCountMonthly={interviewCountMonthly}\n                    />\n                  </div>\n                  <div className=\"col-xl-6 col-lg-12 order-xl-2\">\n                      <div className=\"jr-card p-0\">\n                        <div className=\"jr-card-header pt-4 px-4 mb-1\">\n                          <h3 className=\"mb-0\">Yearly Status</h3>\n                        </div>\n                        <div className=\"card-img-bottom overflow-hidden\">\n                          <YearlyStatus jobYearlyChartData={jobYearlyChartData}\n                                        applicantYearlyChartData={applicantYearlyChartData} \n                          />\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              \n            </div>\n          </div>\n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nexport default ClientDashboard;\n","/home/ubuntu/environment/jobslab-web/src/app/candidate/CandidateRegister.js",["2964"],"import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ContainerHeader from 'components/ContainerHeader';\nimport CardBox from 'components/CardBox';\nimport { Helmet } from 'react-helmet';\nimport IntlMessages from 'util/IntlMessages';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport BasicInfo from 'components/register/BasicInfo';\nimport DetailInfo from 'components/register/DetailInfo';\nimport ProfilePicture from 'components/register/ProfilePicture';\nimport RegisterConfirm from 'components/register/RegisterConfirm';\n\nimport { requestInitUser } from 'actions/Auth';  \n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport { changeNavigationStyle } from 'actions/index';\n\nfunction getSteps() {\n  return ['Basic Information', 'Detailed Information', 'Profile Picture', 'Confirm and Finish'];\n}\n\nclass CandidateRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      activeStep: 0,\n    }\n  }\n\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);\n  }\n  \n  getUserData = () => {\n    this.props.requestInitUser(); \n  }\n  \n  handleNext = () => {\n    const {activeStep} = this.state;\n    this.setState({ activeStep: activeStep + 1 });\n    window.scrollTo(0, 0);\n  };\n\n  handleBack = () => {\n    const {activeStep} = this.state;\n    this.setState({ activeStep: activeStep - 1 });\n    window.scrollTo(0, 0);\n  };\n\n  handleReset = () => {\n    this.setState({ activeStep: 0 });\n  };\n  \n  getStepContent(stepIndex) {\n    const { activeStep, redirectUrl } = this.state;\n    const { userData, candidateData } = this.props;\n    \n    switch (stepIndex) {\n      case 0:\n        return <BasicInfo activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} candidateData={candidateData} getUserData={this.getUserData} />;\n      case 1:\n        return <DetailInfo activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} candidateData={candidateData} getUserData={this.getUserData} />;\n      case 2:\n        return <ProfilePicture activeStep={activeStep} handleNext={this.handleNext} handleBack={this.handleBack} userData={userData} getUserData={this.getUserData} />;\n      case 3:\n        return <RegisterConfirm activeStep={activeStep} handleBack={this.handleBack} getUserData={this.getUserData} redirectToPrevPage={this.redirectToPrevPage} />;//this.getConfirmation();\n  \n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n  \n  redirectToPrevPage = () => {\n    this.setState({ redirectToPrevPage: true });\n  }\n\n  render() {\n    const steps = getSteps();\n    const { loader, activeStep } = this.state;\n    \n    console.log(this.props.location)\n    let { from } = (this.props.location.state!=null) && this.props.location.state;\n    if (this.state.redirectToPrevPage) return <Redirect to={from} />;\n    \n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress />\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <ContainerHeader title={<IntlMessages id=\"sidebar.components.stepper\"/>} /*match={match}*//>\n          <Helmet>\n              <title>Register | JobsLab</title>\n          </Helmet>\n          <div className=\"row mb-md-3\">\n            <CardBox styleName=\"col-lg-12\" childrenStyle=\"d-flex justify-content-center\"\n                     heading={<IntlMessages\n                       id=\"component.stepper.horizontalLinearAlternativeLabel\"/>}\n                     headerOutside>\n              <div className=\"w-100\">\n                <Stepper activeStep={activeStep} alternativeLabel className=\"horizontal-stepper-linear\">\n                  {steps.map((label, index) => {\n                    return (\n                      <Step key={label} className={`horizontal-stepper ${index === activeStep ? 'active' : ''}`}>\n                        <StepLabel className=\"stepperlabel\">{label}</StepLabel>\n                      </Step>\n                    );\n                  })}\n                </Stepper>\n                <div className=\"mx-0 mx-md-5\">\n                  {this.getStepContent(activeStep)}\n                </div>\n              </div>\n            </CardBox>\n          </div>\n        </div>\n        \n        }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userData, candidateData } = state.auth;\n  return { userData, candidateData };\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n  changeNavigationStyle\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CandidateRegister));\n","/home/ubuntu/environment/jobslab-web/src/app/user/Verification.js",["2965","2966"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Fade from 'react-reveal/Fade';\nimport config from 'react-reveal/globals';\nimport Button from '@material-ui/core/Button';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport * as notification from 'actions/Notification';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\nconfig({ ssrFadeout: true });\n\n\nclass Verification extends Component {\n  \n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n  }\n  \n  switchContent(userType) {\n    switch (userType) {\n      case 'candidate':\n        console.log(\"Verification: is Candidate\");\n        return (\n          <div className=\"home-wordcontainer\">\n            <h3>Thank you for registering!</h3>\n            <h3>An email verification has been sent.</h3>\n            <p>Please verify your email address according to instructions.</p>\n            <p>If you do not see the verification email, please be sure to check your junk folder.</p>\n            <div className=\"button-sec responsive\">\n              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jr-btn-slg\" onClick={this.resendToken}>\n                <font size=\"+1\">Resend Token</font>\n              </Button>\n            </div>\n          </div>\n        )\n      case 'client':\n        console.log(\"Verification: is Client\");\n        return (\n          <div className=\"home-wordcontainer\">\n            <h3>Thank you for uploading your request.</h3>\n\t\t\t\t\t\t<h3>One of our experienced consultants will contact you shortly.</h3>\n          </div>\n        )\n    }\n  }\n  \n  resendToken = () => {\n    axios.post('/api/auth/token/regen')\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"The verification email has been sent to your email address. Please check and verify your account.\");\n      }\n      else {\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        this.setState({ isUploadLoading: false });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const { userType } = this.props;\n    \n    return (\n      <div className=\"home-wrapper\">\n        <div className=\"home-imgcontainer verification\">\n          <Fade duration={2000}>\n            { this.switchContent(userType) }\n          </Fade>\n            <div className=\"color-overlay\"></div>\n            <img className=\"verification-img\" src={encodeURI(WEB_IMAGE_URL+\"verification/verification-min.jpg\")} alt=\"\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default connect(mapStateToProps, null)(Verification);","/home/ubuntu/environment/jobslab-web/src/app/test/Test.js",["2967","2968","2969"],"import React, { Component,useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\n\nimport CountdownTimer from 'components/CountdownTimer/index';\nimport moment from 'moment-timezone';\nimport axios from 'axios';\nimport Drift from \"components/Drift\";\n//import Drift from \"react-driftjs\";\n\n\t\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      file:null\n    };\n  }\n  \n  \nchangeHandler = (event) => {\n  this.setState({\n    file: event.target.files[0]\n  });\n};\n\t\nhandleSubmission = () => {\n\tconst formData = new FormData();\n\tformData.append('file', this.state.file);\n\n\t axios.post('/api/test/video/upload', formData,{\n       onUploadProgress: data => {\n         //Set the progress value to show the progress bar\n         console.log(Math.round((100 * data.loaded) / data.total))\n       },\n     })\n      .then(res => {\n        if (res && res.status == 200 && res.data.isSuccess) {\n          this.setState({ \n            isUploadSuccess: true, \n            uploadingVideo: false \n          });\n          //notification.success(\"The video was submitted successfully.\");\n        }\n        else {\n          this.setState({ \n            uploadingVideo: false \n          });\n        }\n      })\n      .catch(error => {\n        this.setState({ \n          uploadingVideo: false \n        });\n      });\n};\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n            <h1>Hello World</h1>\n          </div>\n          <div className=\"col-lg-12\">\n            <Autocomplete\n              id=\"free-solo-demo\"\n              freeSolo\n              open\n              options={top100Films.map(option => option.title)}\n              renderInput={params => (\n                <TextField {...params} label=\"freeSolo\" margin=\"normal\" variant=\"outlined\" fullWidth />\n              )}\n            />\n          </div>\n          \n          <div className=\"col-lg-12\">\n\n          </div>\n        </div>\n        \n        <div>{moment.tz.guess(true)}</div>\n        <CountdownTimer />\n        \n        <div>\n    \t\t\t<input type=\"file\" name=\"file\" onChange={(event) => this.changeHandler(event)} />\n    \t\t\t<div>\n    \t\t\t\t<button onClick={() => this.handleSubmission()}>Submit</button>\n    \t\t\t</div>\n    \t\t</div>\n    \t\t<Drift appId=\"7wn228ik2p99\" />\n      </div>\n      \n    );\n  }\n}\n\nexport default Test;","/home/ubuntu/environment/jobslab-web/src/app/general/Employer.js",["2970","2971","2972","2973","2974","2975","2976","2977","2978","2979","2980","2981","2982","2983"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport config from 'react-reveal/globals';\nimport ItemFirst from \"./ItemFirst\";\nimport ItemSecond from \"./ItemSecond\";\nimport Button from '@material-ui/core/Button';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\nimport { Helmet } from 'react-helmet';\n\nconfig({ ssrFadeout: true });\n\nlet blur = 0;\nlet ticking = false;\n\nclass Employer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeAnimation: false,\n    }\n  }\n  componentDidMount() {\n    //this.props.changeNavigationStyle({HORIZONTAL_NAVIGATION});\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n    window.addEventListener('scroll', this.handleScroll, true);\n\n    setTimeout(() => {\n      this.setState({ fadeAnimation: true });\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  nav = React.createRef();\n\n  handleScroll = () => {\n    blur = window.scrollY / 100;\n\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        if (this.nav.current)\n          this.nav.current.style.filter = `blur(${blur}px)`;\n        ticking = false;\n      });\n\n      ticking = true;\n    }\n  };\n\n  render() {\n    const fade = (true == this.state.fadeAnimation) ? true : false;\n  \n    return (\n      <div className=\"home-wrapper\">\n          <Helmet>\n              <title>Employer | JobsLab</title>\n          </Helmet>\n          <div className=\"home-imgcontainer\">\n          <div className=\"parallax-employer\" ref={this.nav}></div>\n            <Fade duration={2000}>\n            <div className=\"home-wordcontainer\">\n              <h3>Hire Fast. Hire Smart.</h3>\n              <h3>Partner with JobsLab.</h3>\n              <p>Join a community of hundreds of employers who work with JobsLab today</p>\n              <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jr-btn-slg\" onClick={(e) => this.props.history.push(\"/employer/register\")}>\n                <font size=\"+1\">Register Now</font>\n              </Button>\n            </div>\n            </Fade>\n            <div className=\"color-overlay\"></div>\n          </div>\n        \n        <div className=\"howitworks\">\n          <div className=\"parallax-employer-howitworks\"></div>\n          <div className=\"howitworks-background\">\n            <Fade duration={1500} bottom when={fade}>\n            <h3>How It Works</h3>\n            <p>Build high performing teams with JobsLab's powerful AI | Identity, qualify and engage with your next hire in a highly automated way</p>\n            </Fade>\n              <Fade duration={2000} bottom cascade when={fade}>\n            <div className=\"howitworks-sec employer\">\n              <Fade duration={2000} bottom cascade>\n              <div className=\"howitworks-part responsivelhs employer\">\n                <div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-stack-exchange\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Maintain Confidentiality</h3>\n      \t\t\t\t\t\t\t<p>We are fully GDPR compliant and your organization remains completely confidential and is only shared with candidates when they are screened for a role</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-envelope\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Full Visibility</h3>\n      \t\t\t\t\t\t\t<p>Our comprehensive dashboard is automatically updated with the latest status for all of your open positions</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-phone\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Talk to Professionals</h3>\n      \t\t\t\t\t\t\t<p>Our expert recruitment team is on hand to assist through the entire recruitment process</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n              </div>\n        \t\t\t\t</Fade>\n              <Fade duration={2000} bottom>\n                <div className=\"howitworks-part image employer-img\">\n                  <img src={encodeURI(WEB_IMAGE_URL+\"employer/macbook-pro-jobslab.png\")} alt=\"\" />\n                </div>\n              </Fade>\n                <Fade duration={2000} bottom cascade>\n              <div className=\"howitworks-part responsiverhs employer\">\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-clock-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Salary Benchmarking</h3>\n      \t\t\t\t\t\t\t<p>Access the latest industry salary surveys to benchmark your compensation vs the industry averages</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-lightbulb-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>One-stop Solution</h3>\n      \t\t\t\t\t\t\t<p>We provide you with an AI-based solution to screen and match candidates to allow you to find and hire the right talent for your business</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-gift\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Build Brand</h3>\n      \t\t\t\t\t\t\t<p>Partner with JobsLab to build your brand through candidate rewards and referrals</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n              </div>\n        \t\t\t\t</Fade>\n            </div>\n            <div className=\"howitworks-sec employer\">\n              <div className=\"howitworks-part employer-bottom\">\n                <div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-dollar\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Save Money</h3>\n            \t\t\t\t<p>Advanced recruitment at a lower cost by combining AI with skilled recruiters to streamline and accelerate the hiring process</p>\n              \t\t</div>\n            \t\t</div>\n              </div>\n              <div className=\"howitworks-part employer-bottom\">\n                <div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-tasks\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Test Skills</h3>\n            \t\t\t\t<p>We provide specific skills tests to assess candidate’s technical abilities before interviews* [*Coming soon]</p>\n              \t\t</div>\n            \t\t</div>\n              </div>\n            </div>\n              </Fade>\n          </div>\n        </div>\n        \n          <div className=\"howitworks\">\n          <div className=\"parallax-pricing\"></div>\n          <div className=\"howitworks-background dark\">\n            <h3>Pricing</h3>\n            <div className=\"price-tables row pt-default d-flex justify-content-evenly\">\n                <div className=\"col-md-4 px-lg-4 col-11\">\n                  <ItemFirst\n                    styleName=\"card package bg-white shadow employer\"\n                    headerStyle=\"package-header bg-primary lighten-1 text-white\"\n                    itemStyle=\"package-items text-grey text-darken-3\"\n                    footerStyle=\"btn btn-default bg-primary lighten-1 text-white\"\n                  />\n                </div>\n          \n                <div className=\"col-md-4 px-lg-4 col-11\">\n                  <ItemSecond\n                    styleName=\"card package bg-primary lighten-1 shadow employer\"\n                    headerStyle=\"package-header bg-primary text-white\"\n                    itemStyle=\"package-items text-white\"\n                    footerStyle=\"btn btn-default bg-primary text-white\"\n                  />\n                </div>\n            </div>\n          </div>\n          </div>\n          \n           <div className=\"home-imgcontainer company\">        \n          <div className=\"parallax-iframe\"></div>\n            <div className=\"home-bannercontainer white-style company\">\n              <Fade duration={2000} bottom>\n              \n                \n                <div className=\"home-company-list row resp2\">\n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/AWS_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Google_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/KLOOK_LOGO.png\")}/></div>\n                  </div>\n                  \n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/LinkedIn_Logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Microsoft_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Zoom-Logo.png\")}/></div>\n                  </div>\n                  \n                </div>\n                <div><p className=\"text-uppercase resp1\">Career Expert Insights from Top Companies</p></div>\n                <div className=\"home-company-list row resp3\">\n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Citi_Logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/GS_Logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/hsbc-logo.png\")}/></div>\n                  </div>\n                  \n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/ICBC_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/morgan-stanley-logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/ubs-logo.png\")}/></div>\n                  </div>\n                  </div>\n              </Fade>\n          </div>\n        </div>\n        \n        </div>\n    )\n  }\n}\n\n\n/*const mapStateToProps = ({settings, auth}) => {\n\n};*/\n\n//export default connect(mapStateToProps, {changeNavigationStyle})(Home);\nexport default withRouter(Employer);","/home/ubuntu/environment/jobslab-web/src/app/general/TestHome.js",["2984","2985","2986","2987","2988","2989"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n//import { Parallax, Background } from 'react-parallax';\n//import { fadeInUp } from 'react-animations';\nimport Fade from 'react-reveal/Fade';\nimport config from 'react-reveal/globals';\nimport PropTypes from \"prop-types\";\n\nimport Button from '@material-ui/core/Button';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes'\n//import { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes'\n//import { changeNavigationStyle } from 'actions/index';\n\n//import { ParallaxProvider } from 'react-scroll-parallax';\n//import { Parallax } from 'react-scroll-parallax';\n\nconfig({ ssrFadeout: true });\n\nlet blur = 0;\nlet parallax = 0;\n\nvar scrolledY = 0;\nvar ticking = false;\n\nclass TestHome extends Component {\n  \n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeAnimation: false\n    }\n  }\n  componentDidMount() {\n    //this.props.changeNavigationStyle({HORIZONTAL_NAVIGATION});\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n    window.addEventListener('scroll', this.handleScroll, false);\n\n    setTimeout(() => {\n      this.setState({ fadeAnimation: true });\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  nav = React.createRef();\n  //ver = this.iOSversion();\n  \n  /*handleScroll = () => {\n    scrolledY = window.scrollY;\n    blur = window.scrollY / 100;\n    parallax = window.scrollY / 10;\n    \n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        if (this.nav.current) {\n          this.nav.current.style.filter = `blur(${blur}px)`;\n          this.nav.current.style.transform = `translate3d(0%, ${parallax}%, 0px)`;\n          //if (this.ver[0] >= 7) {\n          //this.nav.current.style.backgroundPosition = `center ${scrolledY}px`;\n          //}\n        }\n        ticking = false;\n      });\n\n      ticking = true;\n    }\n  };*/\n  \n  \n  handleScroll = () => {\n    scrolledY = window.scrollY;\n    this.requestTick();\n  };\n  \n  requestTick = () => {\n    if (!ticking) {\n      requestAnimationFrame(this.update);\n    }\n    ticking = true;\n  };\n  \n  update = () => {\n    ticking = false;\n    var currentScrollY = scrolledY;\n    blur = currentScrollY / 100;\n    parallax = currentScrollY / 10;\n    if (this.nav.current) {\n          this.nav.current.style.filter = `blur(${blur}px)`;\n          this.nav.current.style.transform = `translate3d(0%, ${parallax}%, 0px)`;\n        }\n  };\n\n  render() {\n    const fade = (true == this.state.fadeAnimation) ? true : false;\n    return (\n      <div className=\"home-wrapper\">\n          <div className=\"home-imgcontainer\">\n          {/*<div className=\"parallax-home\" ref={this.nav}></div>*/}\n            <div className=\"home-wordcontainer\">\n              <h3>Unlock Your Potential with the World's First Digital Headhunter.</h3>\n              <h3>Find Matches within a Minute.</h3>\n              <div className=\"button-sec responsive\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jr-btn-slg\" onClick={(e) => this.props.history.push(\"/joblist\")}>\n                  <font size=\"+1\">Find Jobs</font>\n                </Button>\n                <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-success text-white\" onClick={(e) => this.props.history.push(\"/employer\")}>\n                  <font size=\"+1\">Find Talent</font>\n                </Button>\n              </div>\n            </div>\n            <div className=\"color-overlay\"></div>\n            {/*<Parallax y={[-90 ,90]}>*/}\n            <video id=\"home-video\" autoPlay muted loop ref={this.nav}>\n            <source src=\"https://hkjobslab.s3-ap-southeast-1.amazonaws.com/home.mp4\" type=\"video/mp4\" />\n            </video>\n            {/*</Parallax>*/}\n          </div>\n                \n        <div className=\"home-imgcontainer banner\">        \n          <div className=\"parallax01\"></div>\n          <div className=\"home-bannercontainer white-style\">\n              <div className=\"banner-half-sec image\">\n              </div>\n              <div className=\"banner-half-sec\">\n                  <h3>Finding A New Job Has Never Been Easier</h3>\n                  <p>It takes seconds to create your profile and our AI will start matching jobs for you straight away</p>\n                  <div className=\"button-sec\">\n                    <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jr-btn-slg\">\n                      <font size=\"+1\">Find Jobs</font>\n                    </Button>\n                  </div>\n              </div>\n          </div>\n        </div>\n        \n        <div className=\"home-imgcontainer banner\">        \n          <div className=\"parallax02\"></div>\n            <div className=\"home-bannercontainer blue-style responsive\">\n                <div className=\"banner-half-sec blue-style responsive\">\n                  <h3>Unlock a Great Job</h3>\n                  <p>Reveal leading company names within your industry</p>\n                  <div className=\"button-sec\">\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-white text-black\">\n                      <font size=\"+1\">Find Jobs</font>\n                    </Button>\n                  </div>\n                </div>\n                <div className=\"banner-half-sec image responsiveimage\">\n                </div>\n            </div>\n        </div>\n        \n        <div className=\"home-imgcontainer banner\">        \n          <div className=\"parallax03\"></div>\n            <div className=\"home-bannercontainer dark-style\">\n                <div className=\"banner-half-sec image\">\n                </div>\n                <div className=\"banner-half-sec\">\n                  <h3>Know What You're Worth</h3>\n                  <p>Check our real-time salary guides in your industry</p>\n                  <div className=\"button-sec\">\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-warning text-white\">\n                      <font size=\"+1\">Find Jobs</font>\n                    </Button>\n                  </div>\n                </div>\n          </div>\n        </div>\n        \n        <div className=\"home-imgcontainer banner\">  \n          <div className=\"home-bannercontainer\">\n            <div className=\"double-sec\">\n              <div className=\"parallax-double01\"></div>\n              <div className=\"double-sec-background white-style responsive\">\n              <div className=\"double-sec-container\">\n                <h3>Unlock Rewards.</h3>\n                <p><i>Take A Holiday On Us.</i></p>\n              </div>\n              </div>\n            </div>\n            <div className=\"double-sec\">\n              <div className=\"parallax-double02\"></div>\n              <div className=\"double-sec-background purple-style\">\n              <div className=\"double-sec-container\">\n                <h3>Refer Peers to Jobs & Receive Cash Rewards</h3>\n                <p>Faster Payment System</p>\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        <div className=\"howitworks\">\n          <div className=\"parallax-howitworks\"></div>\n          <div className=\"howitworks-background\">\n            <h3>How It Works</h3>\n            <div className=\"howitworks-sec\">\n              <div className=\"howitworks-part responsivelhs\">\n                <div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-gift\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Get Rewarded</h3>\n      \t\t\t\t\t\t\t<p>Get your dream job and also get rewarded with a dream holiday when you get hired</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-stack-exchange\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Confidentiality Guaranteed</h3>\n      \t\t\t\t\t\t\t<p>We are fully GDPR compliant and your profile remains completely confidential and only shared with an employer when you apply for a role</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-envelope\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Full Transparency</h3>\n      \t\t\t\t\t\t\t<p>Our easy to use dashboard is automatically updated with the latest status of your job application</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-phone\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Talk to Professionals</h3>\n      \t\t\t\t\t\t\t<p>Our expert recruitment team is on hand to assist you through the entire interview process</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n              </div>\n                <div className=\"howitworks-part image\">\n                  <img src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/home/how-iphone.png\" alt=\"\" />\n                </div>\n              <div className=\"howitworks-part responsiverhs\">\n                <div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-hand-pointer-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Apply Easily</h3>\n      \t\t\t\t\t\t\t<p>Create your profile in seconds and instantly get matched with great jobs by our AI</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-clock-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Save Time</h3>\n      \t\t\t\t\t\t\t<p>Our AI works 24/7 to automatically match you with all relevant jobs so no need to waste time with reading hundreds of JDs and talking to headhunters</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-lightbulb-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Salary Surveys</h3>\n      \t\t\t\t\t\t\t<p>Want to know if you are underpaid? Check our real-time salary surveys to see how you stack up in your industry</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-users\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Refer Your Contacts</h3>\n      \t\t\t\t\t\t\t<p>Have you ever seen a job posting that will be a perfect for a friend? Simply refer them and get rewarded with up to HK$40,000 with they get hired</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\n/*const mapStateToProps = ({settings, auth}) => {\n\n};*/\n\n//export default connect(mapStateToProps, {changeNavigationStyle})(Home);\nexport default withRouter(TestHome);\n\n\n{/*<div class=\"row\">\n          \t<div class=\"col-lg-12 home\">\n          \t\t<div class=\"heading\">\n          \t\t\t<h2>How It Works</h2>\n        \t\t\t\t<span>Each month, we partner with hundreds of leading companies to profile great jobs to great candidates. <br />We use Artificial Intelligence to screen jobs for a perfect match. \n          \t\t\t</span>\n          \t\t</div>\n    \t\t\t\t<div class=\"how-to-sec\">\n        \t\t\t<div class=\"how-to\">\n        \t\t\t\t<span class=\"how-icon\"><i class=\"la la-user\"></i></span>\n        \t\t\t  <h3>Register an account</h3>\n        \t\t\t\t<p>It takes 10 seconds to upload your profile. We'll quickly match you with the right jobs within a minute. Our Career Experts are on hand to help customize your job search.</p>\n        \t\t\t</div>\n        \t\t\t<div class=\"how-to\">\n      \t\t\t\t\t<span class=\"how-icon\"><i class=\"la la-file-archive-o\"></i></span>\n  \t\t\t\t\t\t\t<h3>Search jobs and earn referral rewards</h3>\n        \t\t\t\t<p>You can also browse our job listings to review our expert insights, refer industry peers for cash rewards and explore a match with great companies.</p>\n        \t\t\t</div>\n        \t\t\t<div class=\"how-to\">\n        \t\t\t\t<span class=\"how-icon\"><i class=\"la la-list\"></i></span>\n        \t\t\t\t<h3>Get jobs and earn rewards</h3>\n  \t\t\t\t\t\t\t<p>We go beyond job boards. Our Career Experts guide you through an interview process and help to negotiate great job offers. Once you got a job through our platform, we reward you through our exclusive promotions.</p>\n      \t\t\t\t</div>\n      \t\t\t</div>\n    \t\t\t</div>\n    \t\t</div>*/}","/home/ubuntu/environment/jobslab-web/src/app/client/ClientRegister.js",["2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000","3001","3002","3003","3004"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from \"axios\";\nimport Fade from 'react-reveal/Fade';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport InputBase from '@material-ui/core/InputBase';\nimport Select from 'react-select';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\nimport { Helmet } from 'react-helmet';\nimport { requestInitUser } from 'actions/Auth';  \nimport * as notification from 'actions/Notification';\n\nimport SignupContent from 'components/auth/SignupContent';\n\nvar queryString = require('query-string');\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nconst useTextFieldStyles = makeStyles({\n  underline: {\n    \"&&&:before\": {\n      borderBottom: \"none\"\n    },\n    \"&&:after\": {\n      borderBottom: \"none\"\n    }\n  }\n});\n\nclass ClientRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      isSignupLoading: false,\n      isUploadLoading: false,\n      isUploadSuccess: false,\n      \n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      password2: '',\n      dial: { value: \"+852\", label: \"+852\" },\n      phone_number: '',\n      isClient: false,\n      company: '',\n      companySend: '',\n      company_list: [],\n      suggestions: [],\n      userType:'client',\n      //cvData: {},\n      cvFile: null,\n      cvToken: null,\n      cvFileType: null,\n      cvFilePath: null,\n    };\n  }\n  \n  componentDidMount() {\n    this.suggestThemeSignUp = {\n      container:                'containerProfile',\n      containerOpen:            'containerOpenProfile',\n      input:                    'inputSignUp',\n      inputOpen:                'inputOpenProfile',\n      inputFocused:             'inputFocusedProfile',\n      suggestionsContainer:     'suggestionsContainerSignUp',\n      suggestionsContainerOpen: 'suggestionsContainerOpenProfile',\n      suggestionsList:          'suggestionsListProfile',\n      suggestion:               'suggestionProfile',\n      suggestionFirst:          'suggestionFirstProfile',\n      suggestionHighlighted:    'suggestionHighlightedProfile',\n      sectionContainer:         'sectionContainerProfile',\n      sectionContainerFirst:    'sectionContainerFirstProfile',\n      sectionTitle:             'sectionTitleProfile'\n    }\n  }\n  \n  textboxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  \n  selectCandidate() {\n    this.setState({isClient: false, userType:'candidate'});\n    //document.getElementById(\"candidate\").classList.add(\"active\");\n    //document.getElementById(\"client\").classList.remove(\"active\");\n  }\n  \n  selectClient() {\n    this.setState({isClient: true, userType:'client', cvData: null, cvFile: null});\n    //document.getElementById(\"client\").classList.add(\"active\");\n    //document.getElementById(\"candidate\").classList.remove(\"active\");\n  }\n  \n  textboxChange = (e) => {\n    if(e.target.name)\n    {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  }\n  \n  handleSelectChange = (object, name) => {\n    this.setState({ [name]: object });\n  };\n  \n  formSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n    var company = (this.state.company && this.state.company.name) ? this.state.company.name : this.state.companySend;\n    //console.log(this.state.company);\n    const data = {\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      dial: this.state.dial==null ? null : this.state.dial.label,\n      phone_number: this.state.phone_number,\n      company: company,\n      userType: this.state.userType,\n      cvToken: this.state.cvToken==null ? null : this.state.cvToken,\n      cvFileType: this.state.cvFileType==null ? null : this.state.cvFileType,\n      cvFilePath: this.state.cvFilePath==null ? null : this.state.cvFilePath,\n    };\n    \n    axios.post('/api/auth/signup', data)\n    .then(res => {\n      console.log(\"start to sign up\");\n      console.log(res.data);\n      if (res.data.isSuccess) {\n        notification.success(\"You have registered your account successfully.\");\n        const data = {\n          email: this.state.email,\n          password: this.state.password\n        }\n        axios.post('/api/auth/login', data)\n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({isLoading: false});\n            this.props.requestInitUser();\n            this.props.history.push('/verification');\n          }\n          else {\n            notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n          }\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        notification.error(res.data.msg);\n        this.setState({isLoading: false});\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      //suggestions: getSuggestions(value, this.state.company_list)\n    });\n  };\n  \n  onSuggestionSelected = (event, {suggestionValue}) => {\n  \tvar targetElement = event.target;\n\t  var targetName = \"\";\n\t  var isTargetFound = false;\n\t  \n\t  //find autosuggest container\n  \twhile(!isTargetFound)\n    {\n      if(targetElement.tagName == \"DIV\")\n      {\n        if(targetElement.classList.contains(\"containerProfile\"))\n        {\n          console.log(targetElement.classList);\n          isTargetFound = true;\n        }\n      }\n      if(!isTargetFound)\n        targetElement = targetElement.parentNode;\n    }\n    \n    var childElements =  targetElement.children;\n\t\tfor(var i = 0; i < childElements.length; i++){\n\t\t\tif (childElements[i].tagName == \"INPUT\") {\n\t\t\t   targetName = childElements[i].name;\n\t\t\t   break;\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"targetName:\" + targetName + \", suggestionValue:\" + suggestionValue);\n    this.setState({\n      [targetName]: suggestionValue\n    });\n  }\n\n   autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  render() {\n    /*let { from } = (this.props.location.state != null) && this.props.location.state;\n    if (this.state.redirectToReferrer) return <Redirect to={from} />;*/\n    \n    const { company, suggestions } = this.state;\n    const { dialList, companyList } = this.props;\n    \n    const filterOptions = createFilterOptions({\n      matchFrom: 'any',\n      stringify: option => ((option.name ? option.name : \"\")),\n    });\n    \n    return (\n      <div className=\"home-wrapper login\">\n        <Helmet>\n            <title>Register | JobsLab</title>\n        </Helmet>\n        <div className=\"login-imgcontainer responsive\">\n        <Fade duration={2000}>\n          <div className=\"login-lhs\">\n            <div className=\"login-content fullpage\">\n              <div className=\"login-header fullpage employer\">\n                <h3>Sign Up</h3>\n              </div>\n              <SignupContent isClient={true} isPopup={false} />\n        \n                 {/*<div className=\"login-form\">\n          <form onSubmit={this.formSubmit}>\n          <div className=\"form-group\">\n              <Autocomplete\n                  value={company}\n                  options={companyList ? companyList : []}\n                  getOptionLabel={option => option.name}\n                  filterOptions={filterOptions}\n                  freeSolo\n                  id=\"company\"\n                  renderInput={params => (\n                    <InputBase ref={params.InputProps.ref}\n                      inputProps={params.inputProps} placeholder=\"Company Name\" className=\"form-control form-control-lg employer\" />\n                  )}\n                  onChange={(e, value) => this.autocompleteChange(e, value, 'company')}\n                  onInputChange={(e, value) => this.autocompleteChange(e, value, 'companySend')}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 col-6\">\n                <div className=\"form-group half-input\">\n                  <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.textboxChange}\n                         className=\"form-control form-control-lg employer\"/>\n                </div>\n              </div>\n              <div className=\"col-md-6 col-6\">\n                <div className=\"form-group half-input\">\n                  <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.textboxChange}\n                         className=\"form-control form-control-lg employer\"/>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg employer\"/>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg employer\"/>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"password\" name=\"password2\" placeholder=\"Confirm Password\" value={this.state.password2} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg employer\"/>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 col-6\">\n                <div className=\"form-group\">\n                  <div className=\"form-control form-control-lg employer dial\">\n                    <Select\n    \t\t\t\t  \t\t\t  className=\"react-select-container\"\n    \t\t\t \t\t\t\t\t  classNamePrefix=\"react-select\"\n                      value={this.state.dial}\n                      onChange={(obj) => this.handleSelectChange(obj,'dial')}\n                      options={dialList}\n                      isMulti={false}\n                      defaultMenuIsOpen={false}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-6 col-6\">\n                <div className=\"form-group\">\n                  <div className=\"form-control form-control-lg employer phone\">\n                    <input type=\"text\" name=\"phone_number\" placeholder=\"Phone Number\" value={this.state.phone_number} onChange={this.textboxChange}\n                     className=\"form-control form-control-lg employer\"/>\n                  </div>                  \n                </div>\n              </div>\n            </div>\n            <div className=\"mt-4 mb-2\">\n            <button type=\"submit\" className=\"btn btn-primary jr-btn-rounded employer w-100\"\n            disabled={this.state.isLoading}>{this.state.isLoading && <i className='fa fa-spinner fa-spin'/>}\n              Register\n            </button>\n            </div>\n          </form>\n          \n        </div>*/}\n              </div>\n            </div>\n          </Fade>\n          <img className=\"login-bg\" src={encodeURI(WEB_IMAGE_URL+\"login/login.jpg\")} alt=\"\" />\n          </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {dialList, companyList} = state.list;\n  return {\n    dialList,\n    companyList,\n  };\n}\n\nconst mapDispatchToProps = {\n  requestInitUser,\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ClientRegister));\n","/home/ubuntu/environment/jobslab-web/src/app/client/ClientJobList.js",["3005","3006","3007","3008","3009","3010","3011","3012","3013","3014"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from \"axios\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Widget from \"components/Widget\";\nimport Modal from 'react-modal';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport moment from \"moment\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Helmet } from 'react-helmet';\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes';\n\nimport modalStyle from 'styles/modalStyle';\n\nimport AdminJobListFilter from 'components/popup/AdminJobListFilter';\nimport ApplicationListForm from 'components/popup/ApplicationListForm';\n\nimport { numberWithCommas } from 'util/functions.js';\n\nvar queryString = require('query-string');\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass ClientJobList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      modalStyleState: modalStyle.jobListModalStyle,\n      hasMore: true,\n  \t  pageSize: 20,\n  \t  pageNum: 1,\n  \t  jobList: [],\n      searchBox: false,\n      searchText: '',\n      \n      location: null,\n      location_list: [],\n      industry: null,\n      industry_list: [],\n  \n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n  \t  lastJobId:null,\n  \t  noRecordFound:false,\n  \t  pageReady: false,\n  \t  searchList:[],\n      checkedItemsIndustry: new Map(),\n  \t  checkedItemsJobType: new Map(),\n  \t  category_list:[],\n  \t  locationSelected: [],\n\t    industrySelected: [],\n  \t  //enabledAIEngine:true,\n  \t  activeJob: '',\n  \t  \n  \t  showFilterPopup: false,\n  \t  applicationListOpen: false\n  }; \n  }\n\n  componentDidMount() {\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    this.initData();\n    /*\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);\n    */\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initData();\n    }\n  }\n  \n  initData = () => {\n    \n    if(!this.props.listLoading) \n    {\n      var params = queryString.parse(this.props.location.search);\n      var searchText = (params.q) ? params.q : \"\";\n      var location = (params.loc) ? params.loc : \"\";\n      //var activeJob = (params.actJob == \"true\") ? true : false;\n      //var location = (this.state.location_list.hasOwnProperty(params.loc)) ? params.loc : (this.state.location_list.hasOwnProperty('5cd445e5f6bab6e3dac72fa0') ? '5cd445e5f6bab6e3dac72fa0' : 'default');\n      //var industry = this.state.industry_list.find((obj) => { return ((obj.value == params.ind) ? obj : null) });\n      //var industry = (this.state.industry_list.hasOwnProperty(params.ind)) ? params.ind : 'default';\n      var minSalary = (parseInt(params.minSal)) ? parseInt(params.minSal) : 0;\n      var maxSalary = (parseInt(params.maxSal)) ? parseInt(params.maxSal) : 500000;\n      minSalary = (minSalary >= maxSalary) ? (maxSalary - 10000) : minSalary;\n      var minExperience = (parseInt(params.minExp)) ? parseInt(params.minExp) : 0;\n      var maxExperience = (parseInt(params.maxExp)) ? parseInt(params.maxExp) : 50;\n      minExperience = (minExperience >= maxExperience) ? (maxExperience - 10) : minExperience;\n      var industry = (params.ind) ? params.ind : \"\";\n      //var jobType = (params.jt) ? params.jt : \"\";\n      //var enabledAIEngine = (params.enAI == \"false\") ? false : true;\n  \n      // industry\n      var selectedIndustry = [];\n      var industryList = this.props.industryList ? this.props.industryList : [];\n      industry.split(\",\").forEach(function (item) {\n          var tempIndustry = industryList.find((industryObj) => { return ((industryObj.value.toString() == item) ? industryObj : null) });\n          if(tempIndustry)\n            selectedIndustry.push(tempIndustry);\n      });\n      \n      industry = selectedIndustry;\n\n      // location\n      var selectedLocation = [];\n      var countryList = this.props.countryList ? this.props.countryList : [];\n      \n      location.split(\",\").forEach(function (item) {\n          var tempLocation = countryList.find((locationObj) => { return ((locationObj.value == item) ? locationObj : null) });\n          if(tempLocation)\n            selectedLocation.push(tempLocation);\n      });\n      \n      location = selectedLocation;\n      this.setState({\n          searchText : searchText,\n          locationSelected: location,\n          industrySelected: industry,\n          salary:{ min: minSalary, max: maxSalary},\n          experience:{ min: minExperience, max: maxExperience},\n          //activeJob: activeJob,\n          //checkedItemsIndustry: industry,\n          pageReady: true\n      }, () => {\n          this.getMoreJd();\n      });\n    }\n  }\n  \n  handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n  \n  getMoreJd = () => {\n    \n    if(this.state.pageReady)\n    {\n     var jobType = \"\"\n\n      this.state.checkedItemsJobType.forEach(function(value, key) {\n        if(value)\n          jobType += key + \",\";\n      });\n      if(jobType.length>0)\n      jobType = jobType.substr(0, jobType.length-1); \n      \n      /*\n      var industry = \"\"\n\n      this.state.checkedItemsIndustry.forEach(function(value, key) {\n        if(value)\n          industry += key + \",\";\n      });\n      if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      */\n      var industry = \"\";\n    \n      this.state.industrySelected.forEach(function(object) {\n        if(object.value)\n          industry += object.value + \",\";\n      });\n      \n      if(industry.length>0)\n        industry = industry.substr(0, industry.length-1); \n        \n      var location = \"\"\n    \n      console.log(this.state.locationSelected);\n      this.state.locationSelected.forEach(function(object) {\n        if(object.value)\n          location += object.value + \",\";\n      });\n      \n      if(location.length>0)\n        location = location.substr(0, location.length-1); \n        \n      axios.post('/api/clients/get/job/managed/more' , {\n        lastJobId: this.state.lastJobId,\n        pageNum: this.state.pageNum,\n        recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        //searchCountryId: this.state.location ? this.state.location.value : \"default\",\n        jobLocation: location,\n        searchIndustry: industry ? industry : \"default\",\n        minSalary: this.state.salary.min,\n        maxSalary: this.state.salary.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        jobType: jobType,\n        //enabledAIEngine: this.state.enabledAIEngine\n      }) \n      .then(res => {\n        if (res.data.isSuccess) {\n          this.setState({\n              loader: false,\n              jobList:  this.state.jobList.concat(res.data.jobList),\n              hasMore: (res.data.hasMore == true)? true : false,\n              lastJobId: (res.data.jobList.length > 0) ? res.data.jobList[res.data.jobList.length-1]._id: this.state.lastJobId,\n              pageNum: this.state.pageNum + 1\n          });\n          \n          //if records are not returned\n          if(!this.state.lastJobId)\n          {\n            this.setState({ loader: false, noRecordFound:true });\n          }\n        }\n      })\n      .catch(function (err) {\n        //console.log(err);\n      });   \n    }\n }\n \n searchJobList = (e) => {\n   \n    var queryParm = \"?\";\n    var seperator = \"&\";\n    \n     var industry = \"\"\n    \n    //console.log(this.state.locationSelected);\n    this.state.industrySelected.forEach(function(object) {\n      if(object.value)\n        industry += object.value + \",\";\n    });\n    \n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      \n   var location = \"\"\n    \n    console.log(this.state.locationSelected);\n    this.state.locationSelected.forEach(function(object) {\n      if(object.value)\n        location += object.value + \",\";\n    });\n    \n    if(location.length>0)\n      location = location.substr(0, location.length-1); \n      \n    queryParm += \"q=\" + this.state.searchText + seperator;\n    queryParm += \"loc=\" + (location || '') + seperator;\n    queryParm += \"ind=\" + (industry || '') + seperator;\n    //queryParm += \"jt=\" + jobType + seperator;\n    queryParm += \"minSal=\" + this.state.salary.min + seperator;\n    queryParm += \"maxSal=\" + this.state.salary.max + seperator;\n    queryParm += \"minExp=\" + this.state.experience.min + seperator;\n    queryParm += \"maxExp=\" + this.state.experience.max;\n    //queryParm += \"actJob=\" + this.state.activeJob;\n    window.location = '/client/joblist' + queryParm;\n\n  }\n  \n\n  clearFilter = () => {\n    this.setState({\n      checkedItemsIndustry: new Map(),\n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n      searchText : \"\",\n      locationSelected : [],\n      industrySelected : [], //this.state.location_list.find((obj) => { return (obj.label == \"Hong Kong\") }),\n      industry : null,\n    });\n  }\n  \n  openModal = (e, popUp) => {\n    e.preventDefault();\n    this.setState({ [popUp]: true});\n    //this.setState({showFilterPopup: true});\n  }\n  \n  /*selectSearchText(text){\n     this.setState({\n      searchText: text,\n    });\n  }*/\n  \n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   //console.log(gotList);\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n  }\n  \n  closeModal = (name) => {\n    if(name == \"applicationListOpen\")\n      this.setState({activeJob: null})\n      \n    this.setState({ [name]: false});\n  }\n\n  setSelectedJob = (jId) => {\n    this.setState({activeJob: jId});\n  }\n  \n    \n  clearText = () => {\n   this.setState({\n     searchText : \"\",\n   });\n }\n \n  viewJob = (job) => {\n    var jobId = (job != null) ? job : \"\";\n    if(jobId)\n      window.open(\"/job/\"+jobId, \"_blank\");\n    else\n      alert(\"Job data error!\");\n  }\n  \n  render() {\n    const { loader } = this.state;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.jobList.map((job, i) => {\n      items.push(\n                  <StyledTableRow key={i}>\n                    <StyledTableCell align=\"center\">{job.createdAt ? moment(job.createdAt).format(\"YYYY/MM/DD\") : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\"><Link to={\"/job/\"+job._id}>{job.jobTitle ? job.jobTitle : \"\"}</Link></StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">{job.company ? job.company : \"\" }</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">{job.salaryMax ? numberWithCommas(job.salaryMax) : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{job.yearMin ? job.yearMin : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{(job.isPublic == true) ? \"Yes\" : ((job.isPublic == false) ? \"No\" : \"N/A\")}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{(job.viewCount) ? job.viewCount : 0}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{(job.applicationNum) ? job.applicationNum : 0}</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewJob(job && job._id ? job._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">\n                    {(job.applicationNum && job.applicationNum > 0) ?  \n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" onClick={ (e) => {this.setSelectedJob(job._id); this.openModal(e, \"applicationListOpen\")} }>\n                        View\n                      </Button>\n                    : \"\"}\n                    </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });\n    \n    \n    return (\n      <div className=\"app-wrapper\">\n        <Helmet>\n            <title>My Job List | JobsLab</title>\n        </Helmet>\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n        </div> : \n        <div>\n          {/*<Modal\n            isOpen={this.state.showFilterPopup}\n            closeTimeoutMS={200}\n            style={this.state.modalStyleState}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={() => this.closeModal('showFilterPopup')}\n            className=\"jobListModal\"\n            contentLabel=\"Modal\"\n          >\n          \n            <Widget styleName=\"jr-card-profile\">*/}\n          <Dialog open={this.state.showFilterPopup} onClose={() => this.closeModal('showFilterPopup')} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n            <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}> \n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Filter <span className=\"close-popup\" onClick={() => this.closeModal('showFilterPopup')}><i className=\"la la-close\"></i></span></h3>\n                  </div>\n                  <AdminJobListFilter \n                          checkedItemsIndustry={this.state.checkedItemsIndustry}  \n                          locationSelected={this.state.locationSelected}\n                          industrySelected={this.state.industrySelected}\n                          experience={this.state.experience} \n                          salary={this.state.salary}\n                          //activeJob={this.state.activeJob}\n                          handleCheckBoxChange={this.updateCheckList.bind(this)}\n                          search={this.searchJobList.bind(this)}\n                          handlePropChange={this.handlePropChange.bind(this)}\n                          onFieldChanged={this.inputRangeChanged.bind(this)}\n                          clearFilter={this.clearFilter.bind(this)}\n                          updateSearchText={this.updateSearchText.bind(this)}\n                          selectSearchText={this.selectSearchText.bind(this)}\n                          searchText={this.state.searchText}\n                          clearText={this.clearText.bind(this)}\n                          autocompleteChange={this.autocompleteChange.bind(this)}\n                  />\n              </DialogContent>\n          </Dialog>    \n            {/*</Widget>\n          </Modal>*/}\n          \n          <div className=\"col-xl-4 col-lg-4 col-md-4 col-4 mb-4\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                      onClick={(e) => this.openModal(e,\"showFilterPopup\")}>\n                  <font size=\"+1\">Filter</font>\n                </Button>\n          </div>   \n          \n          <div id=\"inif-container\" className=\"table-container admin-infinite-table\">\n            <Table stickyHeader aria-label=\"sticky customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell align=\"center\">Post Date</StyledTableCell>\n                  <StyledTableCell align=\"center\">Job Title</StyledTableCell>\n                  {/*<StyledTableCell align=\"center\">Company</StyledTableCell>*/}\n                  <StyledTableCell align=\"center\">Salary (Max)</StyledTableCell>\n                  <StyledTableCell align=\"center\">Year (Min)</StyledTableCell>\n                  <StyledTableCell align=\"center\">Open to public</StyledTableCell>\n                  <StyledTableCell align=\"center\">Total No. of Views</StyledTableCell>\n                  <StyledTableCell align=\"center\">Total No. of Applicants</StyledTableCell>\n                  {/*<StyledTableCell align=\"center\">View Job Info.</StyledTableCell>*/}\n                  <StyledTableCell align=\"center\">View Applicants</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <InfiniteScroll\n                    className=\"MuiTableBody-root\"\n                    pageStart={0}\n                    element={'tbody'}\n                    loadMore={this.getMoreJd.bind(this)}\n                    hasMore={this.state.hasMore}\n                    loader={loaderComponent}\n                    useWindow={false}\n                    getScrollParent={() => document.getElementById('inif-container')}\n                  >\n                    {items}\n              </InfiniteScroll>\n            </Table>\n          </div>\n          <ApplicationListForm jobId={this.state.activeJob} isOpen={this.state.applicationListOpen} closeModal={() => this.closeModal('applicationListOpen')} />\n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList,industryList, listLoading} = state.list;\n  return {\n    countryList,\n    industryList,\n    listLoading\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(ClientJobList));\n\n","/home/ubuntu/environment/jobslab-web/src/app/candidate/CandidateDashboard.js",["3015","3016","3017","3018","3019","3020","3021","3022","3023","3024","3025","3026","3027","3028"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Link as ScrollLink, Element } from 'react-scroll';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SalarySurvey from 'components/dashboard/Candidate/SalarySurvey';\nimport Profile from \"components/dashboard/Common/Profile\";\nimport ExpertList from \"components/dashboard/Common/ExpertList\";\nimport SimpleRadarChart from \"components/Chart/SimpleRadarChart\";\nimport ChartCard from \"components/dashboard/Common/ChartCard\";\nimport { increamentData } from \"./mdata\";\nimport { Area, AreaChart, ResponsiveContainer } from \"recharts\";\nimport ApplicationCard from 'components/dashboard/Candidate/ApplicationCard';\nimport RecommendedJobCard from \"components/dashboard/Candidate/RecommendedJobCard\";\nimport InterestedJobCard from \"components/dashboard/Candidate/InterestedJobCard\";\nimport ReferralCard from 'components/dashboard/Candidate/ReferralCard';\nimport RewardCard from \"components/dashboard/Candidate/RewardCard\";\nimport JobAlertCard from \"components/dashboard/Candidate/JobAlertCard\";\nimport { Helmet } from 'react-helmet';\nimport Gauge from \"components/dashboard/Candidate/Competitiveness/Gauge\";\nimport CompetitivenessGauge from \"components/dashboard/Candidate/Competitiveness/CompetitivenessGauge\";\n\nimport { radarChartData } from \"./data\";\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport { arraySortByDate } from 'actions/Function.js';\n\nimport Tour from 'reactour'\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport Button from '@material-ui/core/Button';\n\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n\nclass CandidateDashboard extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.resetInifScroll();\n\n    this.state = {\n      loader: true,\n      \n      appList: [],\n      allRecommendedJobList: [],\n      matchedJobList: [],\n      recommendedJobList: [],\n      interestedJobList: [],\n      refList: [],\n      \n      appCount: 0,\n      matchedCount: 0,\n      matchedCountWeekly: 0,\n      recommendCount: 0,\n      recommendCountWeekly: 0,\n      interviewCount: 0,\n      interviewConfirmCount: 0,\n      //unlockCount: 0,\n      //unlockPendingCount: 0,\n      referralCount: 0,\n      refereeCount: 0,\n      isTourOpen: true,\n      hasMore: new Map(),\n      pageNum: new Map(),\n      pageSize: 20,\n    }\n  }\n\n  resetInifScroll = async () => {\n    var hasMore = new Map();\n    //recomemed job\n    hasMore.set(\"allRecommendedJob\",true);\n    hasMore.set(\"matchedRecommendedJob\",true);\n    hasMore.set(\"hhRecommendedJob\",true);\n    //interested job\n    hasMore.set(\"interestedJob\", true);\n    \n    var pageNum = new Map();\n    //recomemed job\n    pageNum.set(\"allRecommendedJob\",1);\n    pageNum.set(\"matchedRecommendedJob\",1);\n    pageNum.set(\"hhRecommendedJob\",1);\n    //interested job\n    pageNum.set(\"interestedJob\", 1);\n    \n    this.setState({\n      hasMore: hasMore,\n      pageNum: pageNum,\n    })\n  }\n  \n  componentDidMount() {\n    this.updateDashboard();\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);\n    \n    //!-----disable Tour-----!//\n    this.setState({ isTourOpen: false });\n    document.getElementsByClassName('reactour-scroll')[0].style.height = `initial`;\n    //!-----disable Tour-----!//\n    \n  }\n  \n  updateDashboard = async () => {\n    await this.resetInifScroll();\n    \n    this.getStats();\n    this.getApplications();\n    this.getMatchedJobs();\n    this.getAllRecommendedJobs();\n    this.getRecommendedJobs();\n    this.getInterestedJobs();\n    this.getReferrals();\n  }\n  \n  updateHasMore(param, status){\n    var hasMore = this.state.hasMore;\n    hasMore.set(param, status ? true : false);\n    return hasMore;\n  }\n  \n  updatePageNum(param, page){\n    var pageNum = this.state.pageNum;\n    pageNum.set(param, page ? page : 1);\n    return pageNum;\n  }\n  \n  getStats() {\n    axios.get('/api/candidates/get/dashboard/stats')\n    .then(res => {\n      if (res.data.isSuccess) {\n        this.setState({\n          matchedCount: res.data.matchedCount,\n          matchedCountWeekly: res.data.matchedCountWeekly,\n          recommendCount: res.data.recommendCount,\n          recommendCountWeekly: res.data.recommendCountWeekly,\n          appCount: res.data.appCount,\n          appCountWeekly: res.data.appCountWeekly,\n          interviewCount: res.data.interviewCount,\n          interviewConfirmCount: res.data.interviewConfirmCount,\n          referralCount: res.data.referralCount,\n          refereeCount: res.data.refereeCount,\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getApplications() {\n  \taxios.get('/api/candidates/get/application/list')\n    .then(res => {\n      if (res.data.isSuccess) {\n        console.log(res.data)\n        this.setState({\n          appList: res.data.app_list,\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getMatchedJobs() {\n    var currentPage = this.state.pageNum.get(\"matchedRecommendedJob\") ? this.state.pageNum.get(\"matchedRecommendedJob\") : 1;\n  \taxios.post('/api/candidates/get/job/matched', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n  \t})\n    .then(res => {\n      if (res.data.isSuccess) {\n        \n        var hasMore = this.updateHasMore(\"matchedRecommendedJob\", false);\n        var pageNum = this.updatePageNum(\"matchedRecommendedJob\", currentPage + 1);\n        \n        this.setState({\n          matchedJobList: res.data.sim_list,\n          hasMore : hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getAllRecommendedJobs() {\n    var currentPage = this.state.pageNum.get(\"allRecommendedJob\") ? this.state.pageNum.get(\"allRecommendedJob\") : 1\n  \taxios.post('/api/candidates/get/job/recommended/all', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n  \t})\n    .then(res => {\n      if (res.data.isSuccess) {\n        \n        var hasMore = this.updateHasMore(\"allRecommendedJob\", res.data.hasMore ? true : false);\n        var pageNum = this.updatePageNum(\"allRecommendedJob\", currentPage + 1);\n        \n        this.setState({\n          allRecommendedJobList: res.data.app_list,\n          hasMore : hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  getRecommendedJobs() {\n    var currentPage = this.state.pageNum.get(\"hhRecommendedJob\") ? this.state.pageNum.get(\"hhRecommendedJob\") : 1;\n  \taxios.post('/api/candidates/get/job/recommended', {\n        pageNum: currentPage,\n        recordPerReq: this.state.pageSize,\n  \t})\n    .then(res => {\n      if (res.data.isSuccess) {\n        var hasMore = this.updateHasMore(\"hhRecommendedJob\", false);\n        var pageNum = this.updatePageNum(\"hhRecommendedJob\", currentPage + 1);\n        this.setState({\n          recommendedJobList: res.data.app_list,\n          hasMore : hasMore,\n          pageNum: pageNum\n        }, \n        () => {\n          //var array = arraySortByDate(this.state.matchedJobList.concat(this.state.recommendedJobList), false)\n          //console.log(array)\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getInterestedJobs() {\n    var currentPage = this.state.pageNum.get(\"interestedJob\") ? this.state.pageNum.get(\"interestedJob\") : 1\n  \taxios.post('/api/candidates/get/job/interested', {\n      pageNum: currentPage,\n      recordPerReq: this.state.pageSize,\n  \t})\n    .then(res => {\n      if (res.data.isSuccess) {\n        var hasMore = this.updateHasMore(\"interestedJob\", (res.data.hasMore == true) ? true : false);\n        var pageNum = this.updatePageNum(\"interestedJob\", currentPage + 1);\n        this.setState({\n          interestedJobList : res.data.app_list,\n          hasMore: hasMore,\n          pageNum: pageNum\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  getReferrals() {\n  \taxios.get('/api/candidates/get/referral/list')\n    .then(res => {\n      if (res.data.isSuccess) {\n        this.setState({\n          refList: res.data.ref_list,\n          //referralCount: res.data.ref_list.length,\n          referralTotalCount: res.data.referralTotalCount,\n          refereeCount: res.data.ref_list.map(ref => {return ref.refereeList.length}).reduce(reducer)\n        });\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  closeTour = () => {\n    this.setState({ isTourOpen: false });\n    document.getElementsByClassName('reactour-scroll')[0].style.height = `initial`;\n  };\n  disableBody = () => {\n    disableBodyScroll(this.targetElement);\n    document.getElementsByClassName('app-footer')[0].style.display = `none`;\n  }\n  enableBody = () => {\n    enableBodyScroll(this.targetElement);\n    document.getElementsByClassName('app-footer')[0].style.display = `flex`;\n  }\n\n  render() {\n    const { loader, appList,allRecommendedJobList, matchedJobList, recommendedJobList, interestedJobList, refList } = this.state;\n    const { appCount, appCountWeekly, matchedCountWeekly, matchedCount, recommendCount, recommendCountWeekly, interviewCount, interviewConfirmCount, referralCount, refereeCount } = this.state;\n    const { isTourOpen } = this.state;\n    \n    return (\n      <div className=\"app-wrapper reactour-scroll\">\n\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div className=\"row\">\n          <Helmet>\n              <title>My Dashboard | JobsLab</title>\n          </Helmet>\n          {/*\n          <Tour\n            steps={steps}\n            isOpen={isTourOpen}\n            rounded={10}\n            onRequestClose={this.closeTour}\n            onAfterOpen={this.disableBody}\n            onBeforeClose={this.enableBody}\n            showCloseButton = {false}\n            disableInteraction = {true}\n            closeWithMask = {false}\n            lastStepNextButton = {<Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"><font>Finish!</font></Button>}\n          />\n          */}\n          <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-12\">\n            <Profile />\n            {/*<SimpleRadarChart data={radarChartData} />*/}\n            {/*<CompetitivenessGauge />*/}\n            <Gauge />\n            <ExpertList />\n          </div>\n          \n          <div className=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12\">\n            <div className=\"row\">\n              \n              <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 step01\">\n                <ScrollLink activeClass=\"active\" className=\"jr-link dashboard-chartcard\" to=\"recommend\" spy={true} smooth={true} offset={-80} duration={500}>\n                  <ChartCard \n                    chartProperties={{\n                      title: 'RECOMMENDATION',\n                      prize: matchedCount+recommendCount,\n                      icon: 'stats',\n                      bgColor: 'indigo',\n                      styleName: '',\n                      desc: ((matchedCountWeekly ? matchedCountWeekly : 0) + (recommendCountWeekly ? recommendCountWeekly  :0)) + ' recommendation(s) this week',\n                      percent: '',\n                    }}\n                    children={<ResponsiveContainer width=\"100%\" height={75}>\n                      <AreaChart data={increamentData}\n                                margin={{top: 0, right: 0, left: 0, bottom: 0}}>\n                        <Area dataKey='pv' strokeWidth={0} stackId=\"2\" stroke='#273894' fill=\"#273894\"\n                             fillOpacity={1}/>\n                     </AreaChart>\n                   </ResponsiveContainer>}\n                  />\n                </ScrollLink>\n              </div>\n              <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6\">\n                <ScrollLink activeClass=\"active\" className=\"jr-link dashboard-chartcard\" to=\"application\" spy={true} smooth={true} offset={-80} duration={500}>\n                  <ChartCard\n                    chartProperties={{\n                      title: 'APPLICATION',\n                      prize: appCount,\n                      icon: 'stats',\n                      bgColor: 'pink accent-2',\n                      styleName: '',\n                      desc: (appCountWeekly ? appCountWeekly : 0) + ' application(s) this week',\n                      percent: '',\n                    }}\n                    children={<ResponsiveContainer width=\"100%\" height={75}>\n                      <AreaChart data={increamentData}\n                                 margin={{top: 0, right: 0, left: 0, bottom: 0}}>\n                        <Area dataKey='pv' type='monotone' strokeWidth={0} stackId=\"2\" stroke='#da2361'\n                              fill='#da2361'\n                              fillOpacity={1}/>\n                      </AreaChart>\n                    </ResponsiveContainer>}\n                  />\n                </ScrollLink>\n              </div>\n              <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6\">\n                <ScrollLink activeClass=\"active\" className=\"jr-link dashboard-chartcard\" to=\"application\" spy={true} smooth={true} offset={-80} duration={500}>\n                  <ChartCard\n                    chartProperties={{\n                      title: 'INTERVIEW',\n                      prize: interviewCount,\n                      icon: 'stats',\n                      bgColor: 'info',\n                      styleName: '',\n                      desc: interviewConfirmCount+\" interview confirm(s)\",\n                      percent: '',\n                    }}\n                    children={<ResponsiveContainer width=\"100%\" height={75}>\n                      <AreaChart data={increamentData}\n                                 margin={{top: 0, right: 0, left: 0, bottom: 0}}>\n                        <Area dataKey='pv' strokeWidth={0} stackId=\"2\" stroke='#0c8e9f' fill='#0c8e9f'\n                              fillOpacity={1}/>\n                      </AreaChart>\n                    </ResponsiveContainer>}\n                  />\n                </ScrollLink>\n              </div>\n              <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6\">\n                <ScrollLink activeClass=\"active\" className=\"jr-link dashboard-chartcard\" to=\"referral\" spy={true} smooth={true} offset={-80} duration={500}>\n                  <ChartCard\n                    chartProperties={{\n                      title: 'REFERRAL',\n                      prize: referralCount,\n                      icon: 'stats',\n                      bgColor: 'success',\n                      styleName: '',\n                      desc: refereeCount+' referee(s)',\n                      percent: '',\n                    }}\n                    children={<ResponsiveContainer width=\"100%\" height={75}>\n                      <AreaChart data={increamentData}\n                                 margin={{top: 0, right: 0, left: 0, bottom: 0}}>\n                        <Area dataKey='pv' strokeWidth={0} stackId=\"2\" stroke='#3a983e' fill='#3a983e'\n                              fillOpacity={1}/>\n                      </AreaChart>\n                    </ResponsiveContainer>}\n                  />\n                </ScrollLink>\n              </div>\n              \n              {/*<div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1 step02\">\n                <ExpertList />\n              </div>*/}\n                \n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1\">\n                <div className=\"row\">\n                  <div className=\"col-xl-9 col-lg-12 order-xl-2\">\n                    <Element name=\"recommend\" className=\"element step03\">\n                      <RecommendedJobCard hasMore={this.state.hasMore}  \n                                          loadAllMore={this.getAllRecommendedJobs.bind(this)}  \n                                          loadMatchedMore={this.getMatchedJobs.bind(this)} \n                                          loadRecommendedMore={this.getRecommendedJobs.bind(this)} \n                                          allRecommendedJobList={allRecommendedJobList}\n                                          matchedJobList={matchedJobList} \n                                          recommendedJobList={recommendedJobList}/>\n                    </Element>\n                  </div>\n                  <div className=\"col-xl-3 col-lg-12 order-xl-2\">\n                    <JobAlertCard />\n                    <RewardCard />\n                  </div>\n                </div>\n              </div>\n                \n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1\">\n                <Element name=\"application\" className=\"element\">\n                  <ApplicationCard appList={appList}/>\n                </Element>\n              </div>\n              \n              \n              \n              {/*<div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1\">\n                <div className=\"row\">\n                  <div className=\"col-xl-8 col-lg-12 order-xl-2\">\n                    <Element name=\"unlock\" className=\"element\">\n                      <InterestedJobCard hasMore={this.state.hasMore}\n                                         loadInterestedJobMore={this.getInterestedJobs.bind(this)}\n                                         interestedJobList={interestedJobList} \n                                         updateDashboard={this.updateDashboard}/>\n                    </Element>\n                  </div>\n                  <div className=\"col-xl-4 col-lg-12 order-xl-2 step04\">\n                    <Element name=\"referral\" className=\"element\">\n                      <ReferralCard refList={refList}/>\n                    </Element>\n                  </div>\n                </div>\n              </div>*/}\n              \n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 order-sm-1 step02\">\n                <SalarySurvey />\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      }\n      </div>\n    )\n  }\n}\n\nconst steps = [\n  {\n    selector: '.step01',\n    content: 'Click this button to reveal the company name',\n  },\n  {\n    selector: '.step02',\n    content: 'Click this button to refer to your friends',\n  },\n  {\n    selector: '.step03',\n    content: 'This is step3',\n  },\n  {\n    selector: '.step04',\n    content: 'This is the last step',\n  },];\n  \nexport default CandidateDashboard;\n","/home/ubuntu/environment/jobslab-web/src/app/general/Home.js",["3029","3030","3031","3032","3033","3034","3035","3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052","3053","3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n//import { Parallax, Background } from 'react-parallax';\n//import { fadeInUp } from 'react-animations';\nimport Fade from 'react-reveal/Fade';\nimport config from 'react-reveal/globals';\nimport PropTypes from \"prop-types\";\nimport { Helmet } from 'react-helmet';\nimport { detailCards, recentActivity } from \"./data\";\nimport IconWithTextCard from \"./IconWithTextCard\";\nimport Drift from \"components/Drift\";\n\nimport Button from '@material-ui/core/Button';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes'\nimport { WEB_IMAGE_URL, WEB_VIDEO_URL } from 'constants/PictureUrl';\n//import { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes'\n//import { changeNavigationStyle } from 'actions/index';\n\n//import { ParallaxProvider } from 'react-scroll-parallax';\n//import { Parallax } from 'react-scroll-parallax';\n\nimport Beta from 'components/popup/Beta';\n\nconfig({ ssrFadeout: true });\n\nlet blur = 0;\nlet parallax = 0;\n\nvar scrolledY = 0;\nvar ticking = false;\n\nvar carouselIndex = 1;\nvar carousel2Index = 1;\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeAnimation: false,\n      betaModalIsOpen: false,\n      carouselValue: 1,\n      carouselActive: true,\n      carousel2Value: 1,\n      carousel2Active: true,\n    }\n  }\n  componentDidMount() {\n    //this.props.changeNavigationStyle({HORIZONTAL_NAVIGATION});\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n    window.addEventListener('scroll', this.handleScroll, false);\n    //document.getElementById(\"home-video\").controls = false;\n    /*const videoElement = document.getElementById('home-video');\n            if (videoElement.playing) {\n                // video is already playing so do nothing\n            }\n            else {\n                // video is not playing\n                // so play video now\n                videoElement.play();\n            }*/\n\n    if (document.getElementById('home-video') == true) {\n      const videoElement = document.getElementById('home-video');\n      var promise = videoElement.play();\n\n      if (promise !== undefined) {\n        promise.then(_ => {\n          //console.log('   // Autoplay was successful.');\n          document.getElementsByClassName('parallax-home')[0].style.opacity = `0`;\n        }).catch(error => {\n          //console.log('   // Autoplay was prevented.');\n          if (window.matchMedia(\"(max-width: 1200px)\").matches) {\n            document.getElementsByClassName('parallax-home')[0].style.opacity = `1`;\n          }\n        });\n      }\n    }\n\n\n    setTimeout(() => {\n      this.setState({ fadeAnimation: true });\n    }, 1000)\n\n    this.carouselLoop();\n    this.carousel2Loop();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  nav = React.createRef();\n  //ver = this.iOSversion();\n\n  /*handleScroll = () => {\n    scrolledY = window.scrollY;\n    blur = window.scrollY / 100;\n    parallax = window.scrollY / 10;\n    \n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        if (this.nav.current) {\n          this.nav.current.style.filter = `blur(${blur}px)`;\n          this.nav.current.style.transform = `translate3d(0%, ${parallax}%, 0px)`;\n          //if (this.ver[0] >= 7) {\n          //this.nav.current.style.backgroundPosition = `center ${scrolledY}px`;\n          //}\n        }\n        ticking = false;\n      });\n\n      ticking = true;\n    }\n  };*/\n\n\n  handleScroll = () => {\n    scrolledY = window.scrollY;\n    this.requestTick();\n  };\n\n  requestTick = () => {\n    if (!ticking) {\n      requestAnimationFrame(this.update);\n    }\n    ticking = true;\n  };\n\n  update = () => {\n    ticking = false;\n    var currentScrollY = scrolledY;\n    blur = currentScrollY / 100;\n    parallax = currentScrollY / 10;\n    if (this.nav.current) {\n      this.nav.current.style.filter = `blur(${blur}px)`;\n      this.nav.current.style.transform = `translate3d(0%, ${parallax}%, 0px)`;\n    }\n  };\n\n  closeModal = (name) => {\n    this.setState({\n      //referralModalIsOpen : false\n      [name]: false\n    })\n  }\n\n  carouselClick = (value) => {\n    carouselIndex = 0;\n    this.setState({ carouselActive: false });\n    this.carouselChange(value);\n  }\n\n  carousel2Click = (value) => {\n    carousel2Index = 0;\n    this.setState({ carousel2Active: false });\n    this.carousel2Change(value);\n  }\n\n  carouselChange = (value) => {\n    this.setState({ carouselValue: value });\n    setTimeout(() => {\n      this.setState({ carouselActive: true });\n    }, 300)\n  }\n\n  carousel2Change = (value) => {\n    this.setState({ carousel2Value: value });\n    setTimeout(() => {\n      this.setState({ carousel2Active: true });\n    }, 300)\n  }\n\n  carouselLoop = () => {\n    if (carouselIndex <= 0) {\n\n    }\n    else if (carouselIndex < 4) {\n      this.setState({ carouselActive: false });\n      this.carouselChange(carouselIndex);\n      carouselIndex++;\n      setTimeout(this.carouselLoop, 5000);\n    }\n    else {\n      carouselIndex = 1;\n      this.carouselLoop();\n    }\n  }\n\n  carousel2Loop = () => {\n    if (carousel2Index <= 0) {\n\n    }\n    else if (carousel2Index < 4) {\n      this.setState({ carousel2Active: false });\n      this.carousel2Change(carousel2Index);\n      carousel2Index++;\n      setTimeout(this.carousel2Loop, 5000);\n    }\n    else {\n      carousel2Index = 1;\n      this.carousel2Loop();\n    }\n  }\n\n  render() {\n    const fade = (true == this.state.fadeAnimation) ? true : false;\n\n    return (\n      <div className=\"home-wrapper\">\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n          <div className=\"home-intro\">\n            \n            <Fade duration={2000}>\n              <div className=\"home-intro__textbox\">\n                <div className=\"container\">\n                  <h3 className=\"home-intro__title\">Experienced Hires Made Simple.</h3>\n                  <div className=\"button-sec responsive\">\n                    <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jr-btn-slg home-blue-btn\" onClick={(e) => this.props.history.push(\"/joblist\")}>\n                      <font size=\"+1\">Find Jobs</font>\n                    </Button>\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-success text-white home-green-btn\" onClick={(e) => this.props.history.push(\"/employer\")}>\n                      <font size=\"+1\">Find Talent</font>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Fade>\n            \n            <div className=\"home-intro__bg\">\n              <img className=\"d-none d-lg-block\" src={encodeURI(WEB_IMAGE_URL+\"home/homepage-01.png\")}/>\n            </div>\n            \n            <div className=\"home-intro__sponsor\">\n              <p className=\"home-intro__text\">Powered by:</p>\n              <div className=\"home-intro__logo\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/cyberport.png\")}/>\n              </div>\n            </div>\n            \n          </div>\n                \n        <div className=\"home-imgcontainer home-carousel-responsive\">        \n          <div className=\"parallax01\"></div>\n          <div className=\"home-bannercontainer white-style\">\n            <Fade duration={2000} bottom when={fade}>\n              <div className=\"banner-half-sec image\">\n                <Fade duration={300} left distance='10px' when={this.state.carouselActive}>\n                {\n                this.state.carouselValue === 1 ? <img src={encodeURI(WEB_IMAGE_URL+\"home/banner01.png\")}/> :\n                this.state.carouselValue === 2 ? <img src={encodeURI(WEB_IMAGE_URL+\"home/banner01_carousel2.png\")}/> :\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/banner01_carousel3.png\")}/>\n                }\n                </Fade>\n              </div>\n              <div className=\"banner-half-sec home-carousel-title\">\n                  <h3>Get Matched, Get Hired</h3>\n                  <h3>Finding A New Job Has Never Been Easier</h3>\n                  <a onClick={() => {this.carouselClick(1)}}>\n                  <div className={(this.state.carouselValue === 1 ? 'home-carousel-content active' : 'home-carousel-content')}>\n                    <div className=\"col-1 my-auto home-carousel-icon\">\n                    <i className={(this.state.carouselValue === 1 ? 'fas fa-check-circle active-icon' : 'fas fa-plus-circle inactive-icon')}></i>\n                    </div>\n                    <div className=\"col-11 my-2\">\n                      <span>Create your profile in seconds</span>\n                      <p>Register on Jobslab in 20 seconds by uploading your CV on the system</p>\n                      <div className={(this.state.carouselValue === 1 ? 'active-text mt-2' : 'inactive-text mt-2')}>\n                      <p>Complete your profile with a few simple click and out AI will generate the rest for you</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n                  <a onClick={() => {this.carouselClick(2)}}>\n                  <div className={(this.state.carouselValue === 2 ? 'home-carousel-content active' : 'home-carousel-content')}>\n                    <div className=\"col-1 my-auto home-carousel-icon\">\n                    <i className={(this.state.carouselValue === 2 ? 'fas fa-check-circle active-icon' : 'fas fa-plus-circle inactive-icon')}></i>\n                    </div>\n                    <div className=\"col-11 my-2\">\n                      <span>Automatically get matched with jobs</span>\n                      <p>Once your profile is complete, our AI will recommend jobs for you so there is no need to keep searching for jobs</p>\n                      <div className={(this.state.carouselValue === 2 ? 'active-text mt-2' : 'inactive-text mt-2')}>\n                      <p>Get notified about jobs that match your profile right away and apply with a simply click</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n                  <a onClick={() => {this.carouselClick(3)}}>\n                  <div className={(this.state.carouselValue === 3 ? 'home-carousel-content active' : 'home-carousel-content')}>\n                    <div className=\"col-1 my-auto home-carousel-icon\">\n                    <i className={(this.state.carouselValue === 3 ? 'fas fa-check-circle active-icon' : 'fas fa-plus-circle inactive-icon')}></i>\n                    </div>\n                    <div className=\"col-11 my-2\">\n                      <span>Get real-time updates & feedbacks</span>\n                      <p>Get immediate updates from employers at every stage of the application process</p>\n                      <div className={(this.state.carouselValue === 3 ? 'active-text mt-2' : 'inactive-text mt-2')}>\n                      <p>JobsLab keeps you continously informed about your application and the trends in the job market</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n              </div>\n            </Fade>\n          </div>\n        </div>\n        \n        <div className=\"home-imgcontainer banner\">        \n          <div className=\"parallax02\"></div>\n            <div className=\"home-bannercontainer blue-style responsive\">\n              <Fade duration={2000} bottom>\n                <div className=\"banner-half-sec blue-style responsive\">\n                  <h3>Unlock a Great Job</h3>\n                  <p>Reveal leading company names within your industry</p>\n                  <div className=\"button-sec\">\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-white text-black\" onClick={(e) => this.props.history.push(\"/joblist\")}>\n                      <font size=\"+1\">Find Jobs</font>\n                    </Button>\n                  </div>\n                </div>\n                <div className=\"banner-half-sec image responsiveimage\">\n                  <img src={encodeURI(WEB_IMAGE_URL+\"home/banner02-mobile.png\")} alt=\"\" />\n                </div>\n              </Fade>\n            </div>\n        </div>\n        \n        <div className=\"home-imgcontainer value-proposition\">        \n          <div className=\"parallax01\"></div>\n          <div className=\"home-bannercontainer white-style\">\n            <Fade duration={2000} bottom when={fade}>\n            <div class=\"container\">\n              <div className=\"row h-100\">\n                <div className=\"col-xl-4 text-content mb-4 res-2nd\">\n                  <div className=\"mb-3 h-33\">\n                    <i class=\"fas fa-address-card mb-2\"></i>\n                    <span>Generate a Winning Profile</span>\n                    <p>Our system generates your profile in 20 seconds from your existing resume. Customize to suit or keep as is. Either way, you've got a great profile to land your next job.</p>\n                  </div>\n                  <div className=\"mb-3 h-33\">\n                    <i class=\"fas fa-user-tie mb-2\"></i>\n                    <span>Your Personal Recruiter</span>\n                    <p>Our AI works 24/7 to find the right job for you. Get notified about new jobs that are a good match right away. Receive recommendations from both our AI and our Career Experts.</p>\n                  </div>\n                  <div className=\"mb-3 h-33\">\n                    <i class=\"fas fa-clock mb-2\"></i>\n                    <span>Real-Time Updates</span>\n                    <p>No more waiting for updates. Get real-time updates from employers at every stage of the application process. Manage the process from your own personal career dashboard.</p>\n                  </div>\n                </div>\n                <div className=\"col-xl-4 text-content mb-4 res-3rd\">\n                  <div className=\"mb-3 h-33\">\n                    <i class=\"fas fa-plane-departure mb-2\"></i>\n                    <span>Get Rewarded</span>\n                    <p>Take a Holiday on Us. Enjoy unique and exciting travel experiences via our partnership with Klook. Get rewarded for finding your next job with JobsLab.</p>\n                  </div>\n                  <div className=\"mb-3 h-33\">\n                    <i class=\"fas fa-user-friends mb-2\"></i>\n                    <span>Refer a Friend</span>\n                    <p>Share a great job and get rewarded for referring your friends and peers. Get rewarded automatically when your referrals land their new job.</p>\n                  </div>\n                  <div className=\"mb-3 h-33\">\n                    <i class=\"fas fa-chess mb-2\"></i>\n                    <span>Jump Start Your Career</span>\n                    <p>Benefit from exclusive articles, videos, interviews & more from our career experts and leading industry experts. Visit the JobsLab <a target=\"_blank\" href=\"https://blog.jobslab.io\">blog</a> today.</p>\n                  </div>\n                </div>\n                <div className=\"col-xl-4 res-1st\">\n                  <div>\n                    <img className=\"mb-4\" src={encodeURI(WEB_IMAGE_URL+\"home/mockup3.png\")} alt=\"\" />\n                    <div className=\"px-4\">\n                      <h3>Beyond just jobs.</h3>\n                      <p>We see beyond the profile to the individual.</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            </Fade>\n          </div>\n        </div>\n        \n        <div className=\"home-imgcontainer home-carousel-responsive\">        \n          <div className=\"parallax03\"></div>\n          <div className=\"home-bannercontainer blue-style\">\n            <Fade duration={2000} bottom when={fade}>\n              <div className=\"banner-half-sec image\">\n                <Fade duration={300} left distance='10px' when={this.state.carousel2Active}>\n                {\n                this.state.carousel2Value === 1 ?\n                <div className=\"klook-button-sec\">\n                  <a target=\"_blank\" href=\"https://www.klook.com/zh-HK/?aid=14770&utm_medium=affiliate-alwayson&utm_source=non-network&utm_campaign=14770&utm_term=&utm_content=\">\n                    <div className=\"klook-photo\">\n                      <img src={encodeURI(WEB_IMAGE_URL+\"home/home-klook-white.png\")}/>\n                    </div>\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-warning text-white\">\n                      <font size=\"+1\">See Our Latest Promotion</font>\n                    </Button>\n                  </a>\n                </div> :\n                this.state.carousel2Value === 2 ? <img src={encodeURI(WEB_IMAGE_URL+\"home/insurance-icon-white.png\")}/> :\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/home-fps-white.png\")}/>\n                }\n                </Fade>\n              </div>\n              <div className=\"banner-half-sec home-carousel-title white\">\n                  <h3>Get Rewarded, Get Paid</h3>\n                  <h3>It Is Not Only About Finding Jobs</h3>\n                  <a onClick={() => {this.carousel2Click(1)}}>\n                  <div className={(this.state.carousel2Value === 1 ? 'home-carousel-content active white' : 'home-carousel-content')}>\n                    <div className=\"col-1 my-auto home-carousel-icon\">\n                    <i className={(this.state.carousel2Value === 1 ? 'fas fa-check-circle active-icon white' : 'fas fa-plus-circle inactive-icon white')}></i>\n                    </div>\n                    <div className=\"col-11 my-2\">\n                      <span>Get Access to Exclusive Rewards</span>\n                      <div className={(this.state.carousel2Value === 1 ? 'active-text' : 'inactive-text')}>\n                      <p>JobsLab partnered with Klook to offer you free holiday experiences when you successfully get your new job on JobsLab</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n                  <a onClick={() => {this.carousel2Click(2)}}>\n                  <div className={(this.state.carousel2Value === 2 ? 'home-carousel-content active white' : 'home-carousel-content')}>\n                    <div className=\"col-1 my-auto home-carousel-icon\">\n                    <i className={(this.state.carousel2Value === 2 ? 'fas fa-check-circle active-icon white' : 'fas fa-plus-circle inactive-icon white')}></i>\n                    </div>\n                    <div className=\"col-11 my-2\">\n                      <span>Get Exclusive Discount to Insurance</span>\n                      <div className={(this.state.carousel2Value === 2 ? 'active-text' : 'inactive-text')}>\n                      <p>JobsLab is partnering with a leading Virtual Insurance Company to offer discounted rates for our members to purchase insurance</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n                  <a onClick={() => {this.carousel2Click(3)}}>\n                  <div className={(this.state.carousel2Value === 3 ? 'home-carousel-content active white' : 'home-carousel-content')}>\n                    <div className=\"col-1 my-auto home-carousel-icon\">\n                    <i className={(this.state.carousel2Value === 3 ? 'fas fa-check-circle active-icon white' : 'fas fa-plus-circle inactive-icon white')}></i>\n                    </div>\n                    <div className=\"col-11 my-2\">\n                      <span>Refer Peers to Jobs & Receive Cash Rewards</span>\n                      <div className={(this.state.carousel2Value === 3 ? 'active-text' : 'inactive-text')}>\n                      <p>Receive cash rewards when you refer your peers to jobs on JobsLab and they successfully get hired</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n              </div>\n            </Fade>\n          </div>\n        </div>\n        \n  {/*\n        <div className=\"home-imgcontainer banner double-resp\">  \n          <div className=\"home-bannercontainer\">\n            <div className=\"double-sec\">\n              <div className=\"parallax-double01\"></div>\n              <div className=\"double-sec-background white-style responsive\">\n              <Fade duration={2500} cascade>\n              <div className=\"double-sec-container\">\n                <h3>Get Rewarded</h3>\n                <p><i>Take a Holiday on Us</i></p>\n                <a href=\"https://www.klook.com/zh-HK/?aid=14770&utm_medium=affiliate-alwayson&utm_source=non-network&utm_campaign=14770&utm_term=&utm_content=\">\n                <img className=\"w-50\" src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/home/crossover_klook.png\" alt=\"\" />\n                </a>\n                <div className=\"button-sec\">\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-warning text-white\" href=\"https://www.klook.com/zh-HK/?aid=14770&utm_medium=affiliate-alwayson&utm_source=non-network&utm_campaign=14770&utm_term=&utm_content=\" target=\"_blank\">\n                      <font size=\"+1\">See Our Latest Promotions</font>\n                    </Button>\n                  </div>\n              </div>\n              </Fade>\n              </div>\n            </div>\n            <div className=\"double-sec\">\n              <div className=\"parallax-double02\"></div>\n              <div className=\"double-sec-background purple-style\">\n              <Fade duration={2500} cascade>\n              <div className=\"double-sec-container\">\n                <h3>Refer Peers to Jobs & Receive Cash Rewards</h3>\n                <img src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/home/fps-white.png\" alt=\"\" />\n                <p>Faster Payment System</p>\n              </div>\n              </Fade>\n              </div>\n            </div>\n          </div>\n        </div>\n  */}\n        \n        <div className=\"howitworks\">\n          <div className=\"parallax-howitworks\"></div>\n          <div className=\"howitworks-background\">\n            <Fade duration={2000} bottom>\n            <h3 style={{paddingTop: \"50px\",paddingBottom:\"50px\", fontSize:\"35px\"}}>How It Works</h3>\n            </Fade>\n            <div className=\"howitworks-sec\" style={{paddingBottom:\"50px\"}}>\n              <div className=\"howitworks-part responsivelhs\">\n              <Fade duration={2000} bottom cascade>\n                <div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-gift\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Get Rewarded</h3>\n      \t\t\t\t\t\t\t<p>Get your dream job and also get rewarded with a dream holiday when you get hired</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-stack-exchange\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Confidentiality Guaranteed</h3>\n      \t\t\t\t\t\t\t<p>We are fully GDPR compliant and your profile remains completely confidential and only shared with an employer when you apply for a role</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-envelope\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Full Transparency</h3>\n      \t\t\t\t\t\t\t<p>Our easy to use dashboard is automatically updated with the latest status of your job application</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec lhs-style\">\n                  <i className=\"la la-phone\"></i>\n                  <div className=\"howitworks-wordcontainer lhs-style\">\n                    <h3>Talk to Professionals</h3>\n      \t\t\t\t\t\t\t<p>Our expert recruitment team is on hand to assist you through the entire interview process</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t</Fade>\n              </div>\n              <Fade duration={2000} bottom>\n                <div className=\"howitworks-part image\">\n                  <img src={encodeURI(WEB_IMAGE_URL+\"home/how-iphone.png\")} alt=\"\" />\n                </div>\n              </Fade>\n              <div className=\"howitworks-part responsiverhs\">\n                <Fade duration={2000} bottom cascade>\n                <div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-hand-pointer-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Apply Easily</h3>\n      \t\t\t\t\t\t\t<p>Create your profile in seconds and instantly get matched with great jobs by our AI</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-clock-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Save Time</h3>\n      \t\t\t\t\t\t\t<p>Our AI works 24/7 to automatically match you with all relevant jobs so no need to waste time with reading hundreds of JDs and talking to headhunters</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-lightbulb-o\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Salary Surveys</h3>\n      \t\t\t\t\t\t\t<p>Want to know if you are underpaid? Check our real-time salary surveys to see how you stack up in your industry</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t\n        \t\t\t\t<div className=\"handside-sec rhs-style\">\n                  <i className=\"la la-users\"></i>\n                  <div className=\"howitworks-wordcontainer rhs-style\">\n                    <h3>Refer Your Contacts</h3>\n      \t\t\t\t\t\t\t<p>Have you ever seen a job posting that would be perfect for a friend? Simply refer them and get rewarded with up to HK$40,000 with they get hired</p>\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t</Fade>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"home-imgcontainer banner youtube\">        \n          <div className=\"parallax-iframe\"></div>\n            <div className=\"home-bannercontainer dark-style youtube\">\n              \n                <div className=\"home-youtube\">\n              <h3>Introducing JobsLab</h3>\n              <p>Matching exceptional people with amazing jobs. Watch our brand video.</p>\n                  <iframe width=\"600\" height=\"350\" \n                  src=\"https://www.youtube.com/embed/XLkDYdppMOA\">\n                  </iframe>\n                  \n                </div>\n          </div>\n        </div>\n        \n        <div className=\"home-imgcontainer company\">        \n          <div className=\"parallax-iframe\"></div>\n            <div className=\"home-bannercontainer grey-style company\">\n              <Fade duration={2000} cascade>\n              \n                \n                <div className=\"home-company-list row resp2\">\n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/AWS_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Google_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/KLOOK_LOGO.png\")}/></div>\n                  </div>\n                  \n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/LinkedIn_Logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Microsoft_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Zoom-Logo.png\")}/></div>\n                  </div>\n                  \n                </div>\n                <div><p className=\"text-uppercase resp1\">Career Expert Insights from Top Companies</p></div>\n                <div className=\"home-company-list row resp3\">\n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Citi_Logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/GS_Logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/hsbc-logo.png\")}/></div>\n                  </div>\n                  \n                  <div className=\"company-ipad-resp\">\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/ICBC_logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/morgan-stanley-logo.png\")}/></div>\n                    <div className=\"home-company\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/ubs-logo.png\")}/></div>\n                  </div>\n                  </div>\n              </Fade>\n          </div>\n        </div>\n\n        <Drift appId=\"7wn228ik2p99\" />\n        <Beta isOpen={this.state.betaModalIsOpen} closeModal={() => this.closeModal('betaModalIsOpen')}/>\n        \n      </div>\n    )\n  }\n}\nexport default withRouter(Home);\n","/home/ubuntu/environment/jobslab-web/src/app/general/IconWithTextCard.js",[],"/home/ubuntu/environment/jobslab-web/src/app/general/data.js",[],"/home/ubuntu/environment/jobslab-web/src/app/candidate/data.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/Beta.js",["3066"],"import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n//import { withStyles } from \"@material-ui/core/styles\";\n\nclass Beta extends Component {\n  render() {\n    const { isOpen, closeModal } = this.props;\n  \n    return (\n      <Dialog fullWidth open={isOpen} onClose={closeModal} aria-labelledby=\"form-dialog-title\">\n      \n        <DialogTitle id=\"form-dialog-title\"\n        style={{ //backgroundImage: `url(${\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/home/banner3.jpg\"})`, \n          overflow: \"hidden\"\n        }}\n        >\n        <div className=\"beta-popup-title\">\n          <div className=\"beta-popup-img-bg\">\n            <div className=\"color-overlay\"/>\n            <img src={encodeURI(WEB_IMAGE_URL+\"beta/beta-popup-bg.png\")} alt=\"\" />\n          </div>\n          <div className=\"beta-margin-top\"/><h3>JobsLab is</h3>\n          <h3>Now in Beta</h3>\n        </div>\n        </DialogTitle>\n        \n        <DialogContent style={{ overflow: \"hidden\", background: \"#e2e2e2\" }}>\n          <DialogContentText>\n            <div className=\"beta-popup-content\">\n              <div className=\"beta-popup-step\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/step1.png\")} alt=\"\" />\n                <h3>Register</h3><h3>Instantly</h3>\n              </div>\n              <div className=\"beta-popup-arrow\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/arrow.png\")} alt=\"\" />\n                <img className=\"beta-resp-arrow\" src={encodeURI(WEB_IMAGE_URL+\"beta/responsive-arrow.png\")} alt=\"\" />\n              </div>\n              <div className=\"beta-popup-step\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/step2.png\")} alt=\"\" />\n                <h3>Get Matched</h3><h3>by Our AI</h3>\n              </div>\n              <div className=\"beta-popup-arrow\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/arrow.png\")} alt=\"\" />\n                <img className=\"beta-resp-arrow\" src={encodeURI(WEB_IMAGE_URL+\"beta/responsive-arrow.png\")} alt=\"\" />\n              </div>\n              <div className=\"beta-popup-step\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/step3.png\")} alt=\"\" />\n                <h3>Ace the</h3><h3>Interview</h3>\n              </div>\n              <div className=\"beta-popup-arrow\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/arrow.png\")} alt=\"\" />\n                <img className=\"beta-resp-arrow\" src={encodeURI(WEB_IMAGE_URL+\"beta/responsive-arrow.png\")} alt=\"\" />\n              </div>\n              <div className=\"beta-popup-step\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"beta/step4.png\")} alt=\"\" />\n                <h3>Take the</h3><h3>Offer</h3>\n              </div>\n            </div>\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\n//export default Beta;\nexport default Beta;","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/RewardCard.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ReferralCard/index.js",["3067","3068","3069","3070"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport ReferralItem from './ReferralItem';\r\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\r\n\r\nclass ReferralCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    const refList = this.props.refList;\r\n    \r\n    return (\r\n      <div className=\"jr-card referral-index\">\r\n        <div className=\"jr-card-header d-flex align-items-center mb-3\">\r\n          <h3 className=\"card-heading mb-0\">\r\n            <i className=\"zmdi zmdi-smartphone-android zmdi-hc-fw text-primary text-lighten-2 mr-2\"/>\r\n            Referral List\r\n            {/*<IntlMessages id=\"dashboard.marketingCampaign\"/>*/}\r\n            <p className=\"sub-heading\">Get paid for your referrals.</p>\r\n          </h3>\r\n          \r\n          <span className=\"badge badge-primary ml-auto\">{refList.length+\" Referred Job\"+(refList.length>1 ? \"s\" : \"\")}</span>\r\n        </div>\r\n        <div className=\"table-responsive-material markt-table\">\r\n          <CustomScrollbars className=\"scrollbar\" style={{height: 280}}>\r\n            <table className=\"table default-table table-sm remove-table-border table-hover mb-0\">\r\n              <tbody>\r\n              {refList.map(ref => {\r\n                return (\r\n                  <ReferralItem key={ref._id} data={ref}/>\r\n                );\r\n              })}\r\n              </tbody>\r\n            </table>\r\n            {\r\n              refList.length <= 0 ?\r\n                  <div className=\"recordNotFound notfound\" style={{height:'235px'}}>\r\n                  <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/porfolio.png\")}/>\r\n                    <span>\r\n                        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                        &nbsp; Start building your referral portfolio for rewards.\r\n                    </span> \r\n                  </div>\r\n                : \"\"\r\n            }\r\n          </CustomScrollbars>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ReferralCard;","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/InterestedJobCard/index.js",["3071","3072","3073","3074","3075","3076"],"import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport * as notification from 'actions/Notification';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport InterestedJobItem from './InterestedJobItem';\r\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\r\n\r\n\r\nclass InterestedJobCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n  \r\n  confirmApp = (jobId) => {\r\n    const data = { jobId };\r\n    axios.post('/api/candidates/set/application/apply', data)\r\n    .then(res => {\r\n      if (res.data.isSuccess) {\r\n        notification.success(\"You have applied the job successfully.\");\r\n        this.props.updateDashboard();\r\n      }\r\n      else {\r\n        notification.error(\"The action cannot be performed at the moment. Please try again later.\");\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const interestedJobList = this.props.interestedJobList;\r\n    \r\n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\r\n    \r\n    var interestedJobItems = [];\r\n    interestedJobList.map((app, index) => {\r\n      interestedJobItems.push(\r\n          <InterestedJobItem key={app._id} isUnlocked={app.state.candidateStatus==\"Eligible\"} data={app.job} confirmApp={() => this.confirmApp(app.job._id)} />\r\n      )\r\n    });\r\n    \r\n    var pendingCount = interestedJobList.filter((app) => {return app.state.candidateStatus==\"Pending\"}).length;\r\n    \r\n    return (\r\n      <div className=\"jr-card\">\r\n        <div className=\"jr-card-header d-flex align-items-start\">\r\n          <div className=\"mr-auto\">\r\n            <h3 className=\"card-heading\">Reveal Company Requested</h3>\r\n            <p className=\"sub-heading\">Our career experts and AI are reviewing your request to disclose employer identity.</p>\r\n          </div>\r\n          <span className=\"badge badge-primary ml-auto\">{pendingCount+\" Pending Unlock\"+(pendingCount>1 ? \"s\" : \"\")}</span>\r\n          \r\n          {/*<Button className=\"jr-btn mt-n1 mr-n2\" color=\"primary\" onClick={() => this.props.history.push(\"/joblist\")}>\r\n            <i className=\"zmdi zmdi-plus zmdi-hc-lg\"/>\r\n            <span>More Jobs</span>\r\n          </Button>*/}\r\n        </div>\r\n        <CustomScrollbars id=\"inif-container-interestedJobCard\" className=\"scrollbar\" style={{height: 280}}>\r\n            {/*<div className=\"row\">*/}\r\n            {\r\n              interestedJobItems.length <= 0 ?\r\n                  <div className=\"recordNotFound notfound\" style={{height:'220px'}}>\r\n                  <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/notfound.png\")}/>\r\n                    <span>\r\n                        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                        &nbsp; No Record Found.\r\n                    </span> \r\n                  </div>\r\n              :\r\n               <InfiniteScroll\r\n                    className=\"row\"\r\n                    pageStart={0}\r\n                    loadMore={this.props.loadInterestedJobMore}\r\n                    hasMore={this.props.hasMore.get(\"interestedJob\") ? true : false }\r\n                    loader={loaderComponent}\r\n                    useWindow={false}\r\n                    getScrollParent={() => document.getElementById('inif-container-interestedJobCard')}\r\n                  >\r\n                    {interestedJobItems}\r\n                </InfiniteScroll>\r\n            }\r\n           \r\n            {/*interestedJobList.map((app, index) => <InterestedJobItem key={app._id} isUnlocked={app.state.candidateStatus==\"Eligible\"} data={app.job} confirmApp={() => this.confirmApp(app._id)} />)*/}\r\n          {/*</div>*/}\r\n        </CustomScrollbars>\r\n        {/*<Button size=\"small\" color=\"primary\">VIEW ALL PRODUCTS</Button>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(InterestedJobCard);\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ReferralCard/ReferralItem.js",["3077"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { numberWithCommas } from 'actions/Function.js';\r\nimport { INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\r\n\r\n\r\nconst ReferralItem = ({data}) => {\r\n  const {job, viewCount, refereeList} = data;\r\n  const {_id, jobTitle, company, industry, salaryMax} = job;\r\n  const successCount = refereeList.reduce((counter, {state}) => state==600 ? counter+1 : counter, 0);\r\n  //const iconName = 1 > 0 ? \"up\" : \"down\";\r\n  //const statusStyle = 1 > 0 ? \" text-success\" : \"text-danger\";\r\n  return (\r\n    <tr\r\n      tabIndex={-1}\r\n      key={_id}\r\n    >\r\n      <td>\r\n        <div className=\"user-profile py-2 d-flex flex-row align-items-center\">\r\n          <div className=\"jr-featured-thumb mr-2\" style={{minWidth: '80px', maxWidth: '80px'}}>\r\n            <img \r\n              className=\"rounded-lg\" \r\n              src={(company == null) ? \r\n                encodeURI(INDUSTRY_ICON_URL+((industry[0]) ? industry[0]._id.name : \"\")+\".png\") : \r\n                encodeURI(COMPANY_ICON_URL+company+\".png\")} \r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div className=\"user-detail ml-2\">\r\n            <Link to={\"/job/\"+_id}><h5 className=\"user-name\">{jobTitle}</h5></Link>\r\n            {/*<span className=\"text-light-grey jr-fs-sm\">{refereeList.length+\" referee\"}</span><br/>\r\n            <span className=\"text-light-grey jr-fs-sm\">{successCount +\" success\"}</span>*/}\r\n            <span className=\"text-light-grey referral-item\">{viewCount+\" view\"+(viewCount>1 ? \"s\" : \"\")}</span><br/>\r\n            <span className=\"text-light-grey referral-item\">{refereeList.length+\" applied\"}</span><br/>\r\n            {/*<span className=\"text-light-grey referral-item\">{successCount +\" success\"}</span>*/}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <h5 className=\"mb-0\">${numberWithCommas(successCount*Math.round(salaryMax*0.2/1000)*1000)}</h5>\r\n        <span className=\"text-light-grey jr-fs-sm\">Earned</span>\r\n      </td>\r\n      {/*<td className=\"text-right\">\r\n        <div className={`${statusStyle}`}>\r\n          <i className={`zmdi zmdi-trending-${iconName}`}/> 1</div>\r\n        <div className=\"text-light-grey jr-fs-sm text-capitalize\">{iconName}</div>\r\n      </td>*/}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReferralItem;\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/InterestedJobCard/InterestedJobItem.js",["3078","3079","3080"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { numberWithCommas } from 'actions/Function.js';\r\nimport { INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\r\n\r\n\r\nconst InterestedJobItem = ({data, isUnlocked, confirmApp}) => {\r\n  const {_id, jobTitle, company, industry, salaryMax, yearMin, createdAt, isPublic, refererReward} = data;\r\n  //const styleName = \"col-xl-6 col-lg-6 col-sm-6 col-12 mb-4\";\r\n  const styleName = \"col-xl-12 col-lg-12 col-sm-12 col-12 mb-4\";\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-sm-5 col-2 unlock-margin-resp\" style={{minWidth: '80px', maxWidth: '80px'}}>\r\n          <img \r\n            className=\"img-fluid rounded\" \r\n            src={(company == null) ? \r\n              encodeURI(INDUSTRY_ICON_URL+((industry[0]) ? industry[0]._id.name : \"\")+\".png\") : \r\n              encodeURI(COMPANY_ICON_URL+company+\".png\")} \r\n            alt={jobTitle}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-10 col-10 pl-sm-3 pl-2 pt-sm-1 unlock-margin-resp\">\r\n          <Link to={\"/job/\"+_id}><b><h4 className=\"mb-1 unlock-center-resp\"> {jobTitle} {company==null && <span className=\"jr-tag text-uppercase bg-warning d-inline-block locked locked-job-web\" color=\"#ff9800\" >Locked</span>}</h4>\r\n          {company==null && <span className=\"jr-tag text-uppercase bg-warning d-inline-block locked locked-job-resp application-button-width-resp unlock-center-resp unlock-margin-resp\" color=\"#ff9800\" >Locked</span>}\r\n          </b></Link>\r\n          {/*<p className=\"text-light mb-1\"> {company!=null ? company : \" \"}</p>*/}\r\n          <div className=\"d-flex align-items-end\">\r\n            <h5 className=\"text-muted mr-auto\">Monthly Salary</h5>\r\n            <h5>{salaryMax ? \"$\" + numberWithCommas(salaryMax) : \"Attractive\"}</h5>\r\n            <div className=\"unlockjob-button web\">\r\n            <div className=\"unlockbutton-padding\"><Button variant=\"contained\" size=\"small\" className=\"mb-0\" color=\"primary\" disabled={!isUnlocked} onClick={confirmApp}>Apply</Button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-end\">\r\n            <h5 className=\"text-muted mr-auto\">Rewards</h5>\r\n            <h5>${numberWithCommas(refererReward ? refererReward : 0 )}</h5>\r\n            <div className=\"unlockjob-button web\"></div>\r\n          </div>\r\n          \r\n          <div className=\"unlockbutton-padding responsive\"><Button variant=\"contained\" size=\"small\" className=\"mb-0\" color=\"primary\" disabled={!isUnlocked} onClick={confirmApp}>Apply</Button></div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default InterestedJobItem;\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/app/candidate/mdata.js",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ItemSecond.js",["3081"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst\r\n  PriceItem = ({styleName, headerStyle, itemStyle, footerStyle}) => {\r\n    return (\r\n      <div className={`${styleName}`}>\r\n\r\n        <Fade duration={2000} bottom>\r\n        <div className={`${headerStyle}`}>\r\n          {/*<span className=\"price employer\">18% <i>per hire</i></span>\r\n          <h4 className=\"letter-spacing-base text-uppercase mb-0\">Premium</h4>*/}\r\n          <span className=\"price employer text-uppercase\">Premium</span>\r\n        </div>\r\n\r\n        <ul className={`package-items ${itemStyle} employer`}>\r\n          {/*<li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>12% per junior hire</span>\r\n          </li>*/}\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Dedicated account manager</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Priority support</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Download applicant data</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Enhanced digital marketing</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Enhanced candidate rewards</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Enhanced network rewards</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Enhanced data access</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>24 months interview logs</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Customized research reports</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>6 days a week support</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>5 months guarantee</span>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className=\"package-footer\">\r\n          <Link to=\"/employer/register\" className={`jr-link ${footerStyle}`}>Register</Link>\r\n        </div>\r\n        </Fade>\r\n      </div>\r\n    )\r\n  };\r\n\r\nexport default PriceItem;\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/app/general/ItemFirst.js",["3082"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst\r\n  PriceItem = ({styleName, headerStyle, itemStyle, footerStyle}) => {\r\n    return (\r\n      <div className={`${styleName}`}>\r\n        <Fade duration={2000} bottom>\r\n        <div className={`${headerStyle}`}>\r\n          {/*<span className=\"price employer\">13% <i>per hire</i></span>\r\n          <h4 className=\"letter-spacing-base text-uppercase mb-0\">Standard</h4>*/}\r\n          <span className=\"price employer text-uppercase\">Standard</span>\r\n        </div>\r\n        <ul className={`package-items ${itemStyle} employer`}>\r\n          {/*<li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>10% per junior hire</span>\r\n          </li>*/}\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Dedicated account manager</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Download applicant data</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Standard digital marketing</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Standard candidate rewards</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>Standard network rewards</span>\r\n          </li>\r\n          <li>\r\n            <i class=\"la la-check-circle\"></i>\r\n            <span>12 months interview logs</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"package-footer\">\r\n          <Link to=\"/employer/register\" className={`jr-link ${footerStyle}`}>Register</Link>\r\n        </div>\r\n        </Fade>\r\n      </div>\r\n    )\r\n  };\r\n\r\nexport default PriceItem;\r\n\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Common/ChartCard.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Chart/SimpleRadarChart.js",[],"/home/ubuntu/environment/jobslab-web/src/components/register/RegisterConfirm.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/RecommendedJobCard/index.js",["3083","3084","3085","3086","3087","3088","3089","3090"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport RecommendedJobItem from \"./RecommendedJobItem\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\r\n\r\nimport { arraySortByDate } from 'actions/Function.js';\r\n\r\nclass RecommendedJobCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: '0'\r\n    }\r\n  };\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const allRecommendedJobList = this.props.allRecommendedJobList;\r\n    const matchedJobList = this.props.matchedJobList;\r\n    const recommendedJobList = this.props.recommendedJobList;\r\n    \r\n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\r\n    \r\n    var allRecommendedItems = [];\r\n    allRecommendedJobList.map((obj, i) => {\r\n      allRecommendedItems.push(\r\n          <RecommendedJobItem key={obj._id} data={obj} isAI={obj.score ? true : false} />\r\n      )\r\n    });\r\n    \r\n    var matchedRecommendedItems = [];\r\n    matchedJobList.map((sim, i) => {\r\n      matchedRecommendedItems.push(\r\n          <RecommendedJobItem key={sim._id} data={sim.job} isAI={true} />\r\n      )\r\n    });\r\n    \r\n    var recommendedItems = [];\r\n    recommendedJobList.map((app, i) => {\r\n      recommendedItems.push(\r\n          <RecommendedJobItem key={app._id} data={app.job} isAI={false} />\r\n      )\r\n    });\r\n    \r\n    \r\n    return (\r\n      <Widget>\r\n        <div className=\"d-flex flex-row justify-content-between mb-2\">\r\n          <h4 className=\"mr-2\">Recommended Jobs</h4>\r\n\r\n          {/*<span className=\"ml-2 pointer\"><i className=\"zmdi zmdi-search text-primary jr-fs-xl\"/></span>*/}\r\n        </div>\r\n        <div className=\"jr-news-action jr-tabs-classic jr-tabs-classic-no-border\">\r\n          <div className=\"jr-tabs-up jr-tabs-up-no-border\">\r\n            <Nav className=\"jr-tabs-pills-ctr\" pills>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({active: this.state.activeTab === '0'})}\r\n                  onClick={() => {\r\n                    this.toggle('0');\r\n                  }}\r\n                >\r\n                  All\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({active: this.state.activeTab === '1'})}\r\n                  onClick={() => {\r\n                    this.toggle('1');\r\n                  }}\r\n                >\r\n                  By AI\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({active: this.state.activeTab === '2'})}\r\n                  onClick={() => {\r\n                    this.toggle('2');\r\n                  }}\r\n                >\r\n                 By HeadHunter\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n          <CustomScrollbars className=\"scrollbar\" style={{height: 510}}>\r\n          {/*<TabContent className=\"jr-tabs-content recommeded-jd-scroll\" activeTab={this.state.activeTab}>*/}\r\n            <TabContent className=\"jr-tabs-content\" activeTab={this.state.activeTab}>\r\n              <TabPane id=\"inif-container-recommendedJobCard-tab0\" tabId=\"0\">\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.props.loadAllMore}\r\n                    hasMore={this.props.hasMore.get(\"allRecommendedJob\") ? true : false}\r\n                    loader={loaderComponent}\r\n                    useWindow={false}\r\n                    getScrollParent={() => document.getElementById('inif-container-recommendedJobCard-tab0')}\r\n                  >\r\n                    {allRecommendedItems}\r\n                </InfiniteScroll>\r\n                {\r\n                  allRecommendedItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; New jobs are added daily - check back soon.\r\n                        </span> \r\n                      </div>\r\n                    : \"\"\r\n                }\r\n                {/* arraySortByDate(matchedJobList.concat(recommendedJobList),false).map((obj) =>//allProperties.map((data, index) =>\r\n                    <RecommendedJobItem key={obj._id} data={obj.job} isAI={obj.score ? true : false} />\r\n                  )\r\n                */}\r\n              </TabPane>\r\n              \r\n              <TabPane id=\"inif-container-recommendedJobCard-tab1\" tabId=\"1\">\r\n                {\r\n                  matchedRecommendedItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; New jobs are added daily - check back soon.\r\n                        </span> \r\n                      </div>\r\n                    : \r\n                      <InfiniteScroll\r\n                          pageStart={0}\r\n                          loadMore={this.props.loadMatchedMore}\r\n                          hasMore={this.props.hasMore.get(\"matchedRecommendedJob\") ? true : false }\r\n                          loader={loaderComponent}\r\n                          useWindow={false}\r\n                          getScrollParent={() => document.getElementById('inif-container-recommendedJobCard-tab1')}\r\n                        >\r\n                          {matchedRecommendedItems}\r\n                      </InfiniteScroll>\r\n                }\r\n                {/*matchedJobList.map((sim) =>//allProperties.map((data, index) =>\r\n                  <RecommendedJobItem key={sim._id} data={sim.job} isAI={true} />\r\n                )*/}\r\n              </TabPane>\r\n  \r\n              {<TabPane id=\"inif-container-recommendedJobCard-tab2\" tabId=\"2\">\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.props.loadRecommendedMore}\r\n                    hasMore={this.props.hasMore.get(\"hhRecommendedJob\") ? true : false}\r\n                    loader={loaderComponent}\r\n                    useWindow={false}\r\n                    getScrollParent={() => document.getElementById('inif-container-recommendedJobCard-tab2')}\r\n                  >\r\n                    {recommendedItems}\r\n                </InfiniteScroll>\r\n                {\r\n                  recommendedItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; New jobs are added daily - check back soon.\r\n                        </span> \r\n                      </div>\r\n                    : \"\"\r\n                }\r\n                {/*recommendedJobList.map((app) =>//allProperties.map((data, index) =>\r\n                  <RecommendedJobItem key={app._id} data={app.job} isAI={false} />\r\n                )*/}\r\n              </TabPane>}\r\n            </TabContent>\r\n          </CustomScrollbars>\r\n        </div>\r\n      </Widget>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecommendedJobCard;\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ApplicationCard/index.js",["3091","3092","3093","3094","3095","3096"],"import React, {Component} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport ApplicationItem from './ApplicationItem';\r\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\r\n\r\n\r\nimport {Badge} from 'reactstrap';\r\n//import { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\n//import 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\n//import \"@patternfly/react-core/dist/styles/base.css\";\r\n/*\r\nimport {\r\n  DataToolbar,\r\n  DataToolbarItem,\r\n  DataToolbarContent,\r\n  DataToolbarFilter,\r\n  DataToolbarToggleGroup,\r\n  DataToolbarGroup\r\n} from \"@patternfly/react-core/dist/esm/experimental\";\r\nimport {\r\n  Title,\r\n  Select,\r\n  SelectOption,\r\n  SelectVariant,\r\n  EmptyState,\r\n  EmptyStateIcon,\r\n  EmptyStateBody,\r\n  EmptyStateSecondaryActions,\r\n  Bullseye,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  InputGroup,\r\n  TextInput,\r\n  Button,\r\n  ButtonVariant\r\n} from \"@patternfly/react-core\";\r\n\r\nimport { SearchIcon, FilterIcon } from \"@patternfly/react-icons\";\r\nimport { Table, TableHeader, TableBody, TableVariant } from \"@patternfly/react-table\";\r\n*/\r\nclass ApplicationCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        { title: \"Job Title\" },\r\n        { title: \"Company\" },\r\n        { title: \"Last Update\" },\r\n        { title: \"Status\" },\r\n        { title: \"\" }\r\n      ],\r\n      rows: [\r\n        { cells: [\"US-Node 1\", \"5\", \"25\", \"5\", \"Stopped\"] },\r\n        { cells: [\"US-Node 2\", \"5\", \"30\", \"2\", \"Down\"] },\r\n        { cells: [\"US-Node 3\", \"13\", \"35\", \"12\", \"Degraded\"] },\r\n        { cells: [\"US-Node 4\", \"2\", \"5\", \"18\", \"Needs Maintainence\"] },\r\n        { cells: [\"US-Node 5\", \"7\", \"30\", \"5\", \"Running\"] },\r\n        { cells: [\"US-Node 6\", \"5\", \"20\", \"15\", \"Stopped\"] },\r\n        { cells: [\"CZ-Node 1\", \"12\", \"48\", \"13\", \"Down\"] },\r\n        { cells: [\"CZ-Node 2\", \"3\", \"8\", \"20\", \"Running\"] },\r\n        { cells: [\"CZ-Remote-Node 1\", \"15\", \"20\", \"10\", \"Down\"] },\r\n        { cells: [\"Bangalore-Node 1\", \"20\", \"30\", \"30\", \"Running\"] }\r\n      ],\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const appList = this.props.appList;\r\n    const { rows, columns } = this.state;\r\n    \r\n    return (\r\n      <div className=\"jr-card\">\r\n        <div className=\"jr-card-header mb-3 d-flex\">\r\n          <h3 className=\"mb-0 mr-auto\">Application List</h3>\r\n          <span className=\"badge badge-secondary\">{appList.length+\" Application\"+(appList.length>1 ? \"s\" : \"\")}</span>\r\n        </div>\r\n        <CustomScrollbars className=\"scrollbar\" style={{height: 280}}>\r\n          <div className=\"table-responsive-material applicationList-table-container\">\r\n            <div id=\"css_table\">\r\n              <div className=\"css_tr table-underline\">\r\n                <div className=\"css_th css_th--styled\"></div>\r\n                <div className=\"css_th css_th--styled\"><h4>Job Title</h4></div>\r\n                <div className=\"css_th css_th--styled\"><h4>Company</h4></div>\r\n                <div className=\"css_th css_th--styled\"><h4>Last Update</h4></div>\r\n                <div className=\"css_th css_th--styled\"><h4>Status</h4></div>\r\n              </div>\r\n              {\r\n                  appList.map(app => {\r\n                    return (\r\n                      <ApplicationItem key={app._id} data={app}/>\r\n                    );\r\n                  })\r\n              }\r\n              \r\n            </div>\r\n            {\r\n              appList.length <= 0 ?\r\n                  <div className=\"recordNotFound notfound\" style={{height:'200px'}}>\r\n                  <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/notfound.png\")}/>\r\n                    <span>\r\n                        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                        &nbsp; No Record Found.\r\n                    </span> \r\n                  </div>\r\n                : \"\"\r\n            }\r\n            {/*<Table\r\n              cells={columns}\r\n              rows={rows}\r\n              variant={TableVariant.compact}\r\n              aria-label=\"Compact Table\"\r\n              borders={false}\r\n            >\r\n              <TableHeader />\r\n              <TableBody />\r\n            </Table>*/}\r\n          \r\n            {/*<table className=\"project-list-table table remove-table-border mb-0 applicationList-scroll\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Job Title</th>\r\n                  <th scope=\"col\">Company</th>\r\n                  <th scope=\"col\">Last Update</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              \r\n              <tbody>\r\n                {appList.map(app => {\r\n                  return (\r\n                    <ApplicationItem key={app._id} data={app}/>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>*/}\r\n            {/*<Link to={\"/candidate/applications\"} className=\"float-md-right\"><span>See All</span> <i className={`zmdi zmdi-long-arrow-right jr-fs-xxl ml-2 d-inline-block align-middle`}/></Link>*/}\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ApplicationCard;","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Common/ExpertList/index.js",["3097","3098"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport WidgetHeader from \"components/WidgetHeader/index\";\r\nimport { AVATAR_DEFAULT_URL } from 'constants/PictureUrl';\r\n\r\nimport UserContactForm from 'components/popup/UserContactForm';\r\n\r\nfunction Status(props) {\r\n  const isType = props.isType;\r\n  if (isType === 'online') {\r\n    return <span className=\"badge-status-dot bg-success\"/>;\r\n  } else if (isType === 'away') {\r\n    return <span className=\"badge-status-dot bg-warning\"/>;\r\n  } else {\r\n    return <span className=\"badge-status-dot bg-red\"/>;\r\n  }\r\n}\r\n\r\nclass ExpertList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expertList: [],\r\n      contactModalIsOpen: false,\r\n      activeAdmin : null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/users/get/expert/list\")\r\n    .then(res => {\r\n      if (res.data.isSuccess) {\r\n        this.setState({\r\n          expertList: res.data.expertList,\r\n        })\r\n      }\r\n    })\r\n  }\r\n  \r\n  openModal = (e, expert) => {\r\n    console.log(e);\r\n    console.log(expert);\r\n    this.setState({\r\n      contactModalIsOpen: true,\r\n      activeExpert: expert\r\n    });\r\n  }\r\n  \r\n  closeModal = (name) => {\r\n    this.setState({\r\n      [name]: false,\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const {expertList, contactModalIsOpen} = this.state;\r\n    return (\r\n      <div className=\"jr-entry-sec\">\r\n        <WidgetHeader title={<span>Our Career Experts {/*<span className=\"text-grey\">(27 Mutual)</span>*/}</span>}/>\r\n        <ul className=\"jr-fnd-list\">\r\n          {expertList.map((expert, index) =>\r\n            <Tooltip key={index} id=\"tooltip-fab\" title={\"Contact: \"+expert.phone.dial+\" \"+expert.phone.number} placement=\"bottom\">\r\n              <li className=\"mb-2\" key={index} style={{cursor: 'pointer'}} onClick={(e)=>{ e.preventDefault();this.openModal(e,expert);}}>\r\n                <div className=\"jr-user-fnd\">\r\n                  <img \r\n                    alt=\"...\"\r\n                    src={(expert.pictureUrl == null) ? \r\n                          AVATAR_DEFAULT_URL : \r\n                          expert.pictureUrl} alt='' />\r\n                  <div className=\"jr-user-fnd-content\">\r\n                    {/*<span className=\"jr-badge\"><Status isType={user.status}/></span>*/}\r\n                    <h6>{expert.name.firstName + \" \" + expert.name.lastName}</h6>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </Tooltip>\r\n          )}\r\n        </ul>\r\n        <UserContactForm expertData={this.state.activeExpert} isOpen={contactModalIsOpen} closeModal={() => this.closeModal('contactModalIsOpen')} />\r\n        {/*<SignupForm isOpen={contactModalIsOpen} closeModal={this.closeModal} />*/}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ExpertList;\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Common/Profile/index.js",["3099","3100"],"import React, {Component} from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {connect} from \"react-redux\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\nimport { AVATAR_DEFAULT_URL } from 'constants/PictureUrl';\r\n\r\nimport { numberWithCommas } from 'actions/Function.js';\r\n\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const { name, pictureUrl } = this.props.userData;\r\n    const { career, salary, experience } = this.props.candidateData;\r\n    {/*const {user, userInfo} = this.props;\r\n    const {id, name, image, address} = user;\r\n    const {followers, following, frinds} = userInfo;*/}\r\n    return (\r\n      <Auxiliary>\r\n        <div className=\"jr-profileon\">\r\n          <div className=\"jr-profileon-thumb jr-profileon-thumb-htctrcrop dashboard-cutting\">\r\n            <img \r\n            src={(pictureUrl == null) ? \r\n                  AVATAR_DEFAULT_URL : \r\n                  pictureUrl} alt='' />\r\n          </div>\r\n          <div className=\"jr-profileon-content\">\r\n            <p className=\"jr-profileon-title\">{name.firstName} {name.lastName}</p>\r\n            <span className=\"jr-fs-sm\">{career.length>0 && career[0].jobTitle+\" at \"+career[0].company}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"jr-follower text-center\">\r\n          <ul className=\"jr-follower-list\">\r\n            <li>\r\n              <span className=\"jr-follower-title\"><b>{\"$\"+numberWithCommas(salary)}</b></span>\r\n              <span>Monthly Salary</span>\r\n            </li>\r\n            <li>\r\n              <span className=\"jr-follower-title\"><b>{experience ? experience : \"-\"}</b></span>\r\n              <span>Year of Experience</span>\r\n            </li>\r\n            <li>\r\n              <span className=\"jr-follower-title\"><b>{career.length}</b></span>\r\n              <span>Career Count</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"mb-xl-4 mb-3\">\r\n          <Button size=\"small\" variant=\"contained\" className=\"mb-0\" color=\"primary\"\r\n                    onClick={(e) => this.props.history.push(\"/candidate/profile\")}>Go to Profile</Button>\r\n        </div>\r\n      </Auxiliary>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { userData, candidateData } = state.auth;\r\n  return { userData, candidateData }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Profile));\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/SalarySurvey/index.js",["3101","3102","3103","3104"],"import React, {Component} from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SalarySurveyChart from './SalarySurveyChart';\r\n\r\nimport industryData from './salary.json';\r\n\r\nclass SalarySurvey extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      industry1: null,\r\n      subIndustry1: null,\r\n      industry2: null,\r\n      subIndustry2: null,\r\n      \r\n      industryList: industryData,\r\n      \r\n      dataset1: [],\r\n      dataset2: [],\r\n    };\r\n  }\r\n  \r\n  autocompleteChange = (e, value, name) => {\r\n    this.setState({ [name]: value });\r\n    if (name=='industry1')\r\n      this.setState({ subIndustry1: null });\r\n    else if (name=='industry2')\r\n      this.setState({ subIndustry2: null });\r\n    else if (name=='subIndustry1')\r\n      if (value==null)\r\n        this.setState({ subIndustry1: null });\r\n      else\r\n        this.setState({ dataset1: value.salary });\r\n    else if (name=='subIndustry2')\r\n      if (value==null)\r\n        this.setState({ subIndustry2: null });\r\n      else\r\n        this.setState({ dataset2: value.salary });\r\n  }\r\n  \r\n  render() {\r\n    const {industry1, subIndustry1, industry2, subIndustry2, industryList, dataset1, dataset2} = this.state;\r\n    \r\n    return (\r\n      <div className=\"jr-card\">\r\n        <div className=\"jr-card-header mb-3 d-flex\">\r\n          <div>\r\n            <h3 className=\"mb-0 mr-auto\">Salary Comparison</h3>\r\n            <p className=\"sub-heading\">Compare your salary to other positions to see how you stack up.</p>\r\n            {/*<p className=\"text-grey mb-1\">Information Technology</p>*/}\r\n          </div>\r\n          <div className=\"ml-auto jr-dealclose-header-right\">\r\n            <p className=\"mb-2\">\r\n              <span style={{backgroundColor: \"#FF9800\"}}\r\n                  className=\"size-8 rounded-circle d-inline-block mr-1\"/>\r\n              {subIndustry1 ? subIndustry1.label : 'Web Developer'}\r\n            </p>\r\n            {subIndustry2 ? \r\n            <p className=\"ml-2 mb-2\">\r\n              <span style={{backgroundColor: '#3BB4A3'}}\r\n                  className=\"size-8 rounded-circle d-inline-block mr-1\"/>\r\n               {subIndustry2.label}\r\n            </p>\r\n            : null}\r\n          </div>\r\n        </div>\r\n        <SalarySurveyChart datakey1={subIndustry1 && subIndustry1.label} dataset1={dataset1} datakey2={subIndustry2 && subIndustry2.label} dataset2={dataset2} />\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n            <Autocomplete\r\n              value={industry1}\r\n              options={industryList} \r\n              getOptionLabel={option => option.label}\r\n              autoHighlight={true}\r\n              blurOnSelect={true}\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Industry\" fullWidth />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'industry1')}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-12 col-sm-12\">\r\n            <Autocomplete\r\n              value={subIndustry1}\r\n              options={industry1==null ? [] : industryList.find(obj => { return obj.value === industry1.value })['subIndustry_list']} \r\n              getOptionLabel={option => option.label}\r\n              autoHighlight={true}\r\n              blurOnSelect={true}\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Sub-Industry\" fullWidth />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'subIndustry1')}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n            <h3 className=\"mt-3 text-center\">vs </h3>\r\n          </div>\r\n          <div className=\"col-lg-2 col-md-12 col-sm-12 ml-auto\">\r\n            <Autocomplete\r\n              value={industry2}\r\n              options={industryList} \r\n              getOptionLabel={option => option.label}\r\n              autoHighlight={true}\r\n              blurOnSelect={true}\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Industry\" fullWidth />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'industry2')}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-12 col-sm-12\">\r\n            <Autocomplete\r\n              value={subIndustry2}\r\n              options={industry2==null ? [] : industryList.find(obj => { return obj.value === industry2.value })['subIndustry_list']} \r\n              getOptionLabel={option => option.label}\r\n              autoHighlight={true}\r\n              blurOnSelect={true}\r\n              renderInput={params => (\r\n                <TextField {...params} label=\"Sub-Industry\" fullWidth />\r\n              )}\r\n              onChange={(e, value) => this.autocompleteChange(e, value, 'subIndustry2')}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SalarySurvey;","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/RecommendedJobCard/RecommendedJobItem.js",["3105","3106","3107"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { numberWithCommas } from 'actions/Function.js';\r\nimport { INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\r\n\r\n\r\nfunction RecommendedJobItem({data, isAI}) {\r\n  const {_id, jobTitle, company, industry, salaryMax, yearMin, createdAt, isPublic, refererReward} = data;\r\n  return (\r\n    <div className=\"media jr-featured-item\">\r\n      {/*isFeatured === true ? <span color=\"orange\"><span className=\"text-uppercase\">featured</span></span> : null*/}\r\n      <div className=\"unlock-margin-resp jr-featured-thumb \" style={{maxWidth: '80px'}}>\r\n        <img \r\n          className=\"rounded-lg\" \r\n          src={(company == null) ? \r\n            encodeURI(INDUSTRY_ICON_URL+((industry[0]) ? (industry[0]._id.name ? (industry[0]._id.name) \r\n                                                                               : \"\" ) \r\n                                                       : \"\")+\".png\") : \r\n            encodeURI(COMPANY_ICON_URL+company+\".png\")} \r\n          alt=\"...\"\r\n        />\r\n        {/*company==null && <span className=\"jr-tag\">Locked</span>*/}\r\n      </div>\r\n      <div className=\"media-body jr-featured-content unlock-center-resp margin-top-resp\">\r\n        <div className=\"jr-featured-content-left\">\r\n          { isAI ? \r\n            <span className=\"jr-tag text-uppercase bg-info d-inline-block\" color=\"#06BB8A\">Recommended by AI</span>\r\n            :\r\n            <span className=\"jr-tag text-uppercase bg-danger d-inline-block\" color=\"#06BB8A\">Recommended by HeadHunter</span>\r\n          }\r\n          {company==null && <span className=\"jr-tag text-uppercase bg-warning d-inline-block locked\" color=\"#ff9800\" >Locked</span>}\r\n          \r\n          <Link to={\"/job/\"+_id}><h3 className=\"mb-1\">{jobTitle}</h3></Link>\r\n\r\n          <p className=\"text-grey mb-1\">{company!=null && company}</p>\r\n\r\n          <div className=\"d-flex flex-wrap mb-2 dashboard-center-resp\">\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Industry:</span> {(industry && industry.length > 0) ? industry[0]._id.name : \"\"}</p>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Monthly Salary:</span> {salaryMax ? \"$\" + numberWithCommas(salaryMax) : \"Attractive\"}</p>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Year of Experience:</span> {yearMin}</p>\r\n            {/*<p className=\"mr-3 mb-1\"><span className=\"text-grey\">Reward:</span> ${numberWithCommas(Math.round(salaryMax*0.2/1000)*1000 + 10000)}</p>*/}\r\n            {/*<a className=\"text-grey text-underline\" href=\"#/\"> + {more} more</a>*/}\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            {/*<p className=\"text-grey mb-1\">\r\n              <i className={`zmdi zmdi-account jr-fs-lg mr-2 d-inline-block align-middle`}/>{name}\r\n            </p>\r\n            <p className=\"text-grey ml-4 mb-1\">\r\n            <p className=\"text-grey mb-1\">\r\n              <i className={`zmdi zmdi-calendar-alt jr-fs-lg mr-2 d-inline-block align-middle`}/>{moment(createdAt).format(\"YYYY/MM/DD\")}\r\n            </p>*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"jr-featured-content-right\">\r\n          <div>\r\n            <h2 className=\"mt-3 mb-0 jr-font-weight-medium unlock-center-resp\">Total Reward: ${numberWithCommas((refererReward ? refererReward : 0 ) + 10000)}</h2>\r\n            <p className=\"text-grey jr-fs-sm\"></p>\r\n            {/*<p className=\"text-grey jr-fs-sm\">Monthly Salary: ${numberWithCommas(salaryMax)}</p>*/}\r\n          </div>\r\n          <div className=\"unlock-center-resp\">\r\n          <Link to={\"/job/\"+_id}><span>Check in detail</span> <i\r\n            className={`zmdi zmdi-long-arrow-right jr-fs-xxl ml-2 d-inline-block align-middle`}/></Link>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecommendedJobItem;\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/ApplicationCard/ApplicationItem.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/SalarySurvey/SalarySurveyChart.js",[],"/home/ubuntu/environment/jobslab-web/src/components/common/ExpandDetailBox/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/common/ExpandDetailBox/Detail.js",["3108","3109","3110","3111"],"import React, { Component, Fragment } from \"react\";\nimport Expand from \"react-expand-animated\";\n\nimport {\n  Header,\n  Main,\n  BoxToggle,\n  BoxExpand,\n  BoxExpand1,\n  Button,\n  ExpandBoxes\n} from \"./Detail.styles.js\";\n\nclass Detail extends Component {\n  \n  state = { open: false };\n\n  toggle = () => {\n    this.setState(prevState => ({ open: !prevState.open }));\n  };\n\n  render() {\n    const styles = { \n      open: { background: \"#ecf0f1\" }\n    };\n    const transitions = [\"height\", \"opacity\", \"background\"];\n    const description = this.props.description;\n\n    return (\n      <Fragment>\n        <Main>\n          <Expand\n            open={this.props.open}\n            duration={500}\n            styles={styles}\n            transitions={transitions}\n          >\n            <ExpandBoxes>\n              <BoxExpand>\n                { description && description.split(\"\\n\").map((text, index) => (\n                  text && text.replace('*','') &&\n        \t\t \t\t\t<p style={{\"text-align\": \"left\"}} key={index}>- {text.replace('*','')}</p>\n        \t\t \t\t))}\n              </BoxExpand>\n              {/*<BoxExpand1>Hallo</BoxExpand1>*/}\n            </ExpandBoxes>\n          </Expand>\n        </Main>\n      </Fragment>\n    );\n  }\n}\n\nexport default Detail;\n","/home/ubuntu/environment/jobslab-web/src/components/common/ExpandDetailBox/Detail.styles.js",["3112","3113"],"import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1000px;\n  //margin-left: auto;\n  margin-right: auto; \n`;\n\nexport const Header = styled(Container)`\n  text-align: center; \n  color: palevioletred;\n  font-weight: bold;\n  font-size: 24px;\n  padding: 20px;\n`;\n\nexport const Main = styled(Container)``;\n\n{/*export const BoxToggle = styled.div`\n  margin: 30px auto;\n  text-align: center;\n`;*/}\n\nexport const BoxExpand = styled.div`\n  color: #000000;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-color: #575757;\n  border-radius: 4px;\n  margin: 20px;\n  flex: auto;\n  word-wrap: break-word;\n  white-space:pre-wrap;\n  width: 95%;\n`;\n\nexport const BoxExpand1 = styled(BoxExpand)`\n  background-color: #7795f8;\n`;\n\n{/*export const Button = styled.a`\n  cursor: pointer;\n  white-space: nowrap;\n  display: inline-block;\n  height: 40px;\n  width: 200px;\n  line-height: 40px;\n  padding: 0 14px;\n  background: #d1d1d1;\n  border-radius: 4px;\n  font-size: 14px;\n  letter-spacing: .025em;\n  color: #fff;\n  text-decoration: none;\n  \n  &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\n  }\n`;*/}\n\nexport const ExpandBoxes = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;","/home/ubuntu/environment/jobslab-web/src/components/LinkedinFollow/index.js",["3114","3115"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LinkedinFollow extends Component {\n  constructor(props) {\n    super(props);\n  }\n  \n\n   render() {\n    return (\n      <div className='linkedin-follow-btn'>\n        <iframe \n            id=\"linkedinFollowBtn\"\n            src=\"https://www.linkedin.com/pages-extensions/FollowCompany?id=31128411&amp;\"\n            className=\"IN-widget IN-widget--iframe\" \n            scrolling=\"no\" \n            allowtransparency=\"true\" \n            frameborder=\"0\" \n            border=\"0\" \n            width=\"1\" \n            height=\"1\" \n          >\n        </iframe>\n     </div>\n    )\n  }\n}\n\nexport default withRouter(LinkedinFollow);\n\n","/home/ubuntu/environment/jobslab-web/src/app/admin/AdminNewDashboard.js",["3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130"],"import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from \"axios\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport Widget from \"components/Widget\";\n//import Modal from 'react-modal';\nimport InfiniteScroll from 'react-infinite-scroller';\n//import modalStyle from 'styles/modalStyle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { numberWithCommas } from 'util/functions.js';\nimport moment from \"moment\";\nimport { Helmet } from 'react-helmet';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport IntlMessages from 'util/IntlMessages';\n\nimport SearchBox from 'components/SearchBox';\nimport AdminCandidateFilter from 'components/popup/AdminCandidateFilter';\nimport CandidateApplicationListForm from 'components/popup/CandidateApplicationListForm';\n\n\nimport Detail from './NewDashboard/Detail';\n\nvar queryString = require('query-string');\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#00bcd4\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nclass AdminNewDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //modalStyleState: modalStyle.jobListModalStyle,\n      loader: true,\n      pageReady: false,\n      pageSize: 20,\n      pageNum: 1,\n      hasMore: true,\n      \n      candidateList: [],\n      \n      countryList: [],\n      searchText: \"\",\n      searchUserText: \"\",\n      industrySelected: [],\n      locationSelected: [],\n      industry: null,\n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n      myCandidate: false,\n      activeCandidate: false,\n      openToOpportunity: false,\n      onlyNotCompletedCandidate: false,\n      checkedItemsIndustry: new Map(),\n      searchType: \"candidate\",\n  \t  //checkedItemsLocation: new Map(),\n  \t  \n  \t  activeCandidateId: '',\n  \t  applicationListOpen: false,\n  \t  showFilterPopup: false,\n  \t  \n  \t  isRemindWarning: false,\n  \t  \n      isDetailExpanded: false,\n    }\n  }\n  \n  toggle = () => {\n    this.setState(prevState => ({\n      isDetailExpanded: !prevState.isDetailExpanded\n    }));\n  }\n\n        \n  componentDidMount() {\n      this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n      this.initData();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if(!newProps.listLoading && oldProps.listLoading) {\n      this.initData();\n    }\n  }\n  \n  initData = () => {\n    \n    if(!this.props.listLoading) \n    {\n      var params = queryString.parse(this.props.location.search);\n      var searchText = (params.q) ? params.q : \"\";\n      var searchUserText = (params.qUser) ? params.qUser : \"\";\n      var location = (params.loc) ? params.loc : \"\"; //this.props.location_list.find((obj) => { return ((obj.value == params.loc) ? obj : null) });\n      var industry = (params.ind) ? params.ind : \"\";\n      var myCandidate = (params.myCand == \"true\") ? true : false;\n      var activeCandidate = (params.actCand == \"true\") ? true : false;\n      var openToOpportunity = (params.openOpp == \"true\" ) ? true : false;\n      var onlyNotCompletedCandidate = (params.notCompletedCand == \"true\" ) ? true : false;\n      var minSalary = (parseInt(params.minSal)) ? parseInt(params.minSal) : 0;\n      var maxSalary = (parseInt(params.maxSal)) ? parseInt(params.maxSal) : 500000;\n      //maxSalary = (maxSalary > 200000) ? 200000 : maxSalary;\n      minSalary = (minSalary >= maxSalary) ? (maxSalary - 10000) : minSalary;\n      var minExperience = (parseInt(params.minExp)) ? parseInt(params.minExp) : 0;\n      var maxExperience = (parseInt(params.maxExp)) ? parseInt(params.maxExp) : 50;\n      //maxExperience = (maxExperience > 40) ? 40 : maxExperience;\n      minExperience = (minExperience >= maxExperience) ? (maxExperience - 10) : minExperience;\n      \n      \n      // industry\n      var selectedIndustry = [];\n      var industryList = this.props.industryList ? this.props.industryList : [];\n      industry.split(\",\").forEach(function (item) {\n          var tempIndustry = industryList.find((industryObj) => { return ((industryObj.value == item) ? industryObj : null) });\n          console.log(tempIndustry);\n          if(tempIndustry)\n            selectedIndustry.push(tempIndustry);\n      });\n      \n      industry = selectedIndustry;\n      \n\n      // location\n      var selectedLocation = [];\n      var countryList = this.props.countryList;\n      \n      location.split(\",\").forEach(function (item) {\n          var tempLocation = countryList.find((locationObj) => { return ((locationObj.value == item) ? locationObj : null) });\n          if(tempLocation)\n            selectedLocation.push(tempLocation);\n      });\n      \n      location = selectedLocation;\n      this.setState({\n          searchText : searchText,\n          searchUserText : searchUserText,\n          industrySelected: industry,\n          locationSelected: location,\n          //industry: industry,\n          salary:{ min: minSalary, max: maxSalary},\n          experience:{ min: minExperience, max: maxExperience},\n          myCandidate: myCandidate,\n          activeCandidate: activeCandidate,\n          openToOpportunity: openToOpportunity,\n          onlyNotCompletedCandidate: onlyNotCompletedCandidate,\n          pageReady: true\n      }, () => {\n          this.getMoreCandidate();\n          //this.setState({ loader: false });\n      });\n      \n    }\n  }\n  \n  getMoreCandidate = () => {\n\n    if(this.state.pageReady)\n    {\n      var industry = \"\";\n      this.state.industrySelected.forEach(function(object) {\n        if(object.value)\n          industry += object.value + \",\";\n      });\n      \n      if(industry.length>0)\n        industry = industry.substr(0, industry.length-1); \n        \n      var location = \"\"\n      this.state.locationSelected.forEach(function(object) {\n        if(object.value)\n          location += object.value + \",\";\n      });\n      if(location.length > 0)\n        location = location.substr(0, location.length-1); \n       \n      axios.post('/api/admins/get/candidate/list/more' , {\n        lastUserId: this.state.lastUserId,\n        pageNum: this.state.pageNum,\n        recordPerReq: this.state.pageSize,\n        searchData: this.state.searchText,\n        searchUser: this.state.searchUserText,\n        searchCountryId: location, //this.state.location ? this.state.location.value : \"default\",\n        searchIndustryId: industry,\n        minSalary: this.state.salary.min,\n        maxSalary: this.state.salary.max,\n        minExperience: this.state.experience.min,\n        maxExperience: this.state.experience.max,\n        activeCandidate: this.state.activeCandidate,\n        openToOpportunity: this.state.openToOpportunity,\n        myCandidate: this.state.myCandidate,\n        onlyNotCompletedCandidate: this.state.onlyNotCompletedCandidate,\n      }) \n      .then(res => {\n        if (res.data.isSuccess) {\n          console.log(res.data.candidateList.length);\n          this.setState({\n              loader: false,\n              candidateList:  this.state.candidateList.concat(res.data.candidateList),\n              hasMore: (res.data.hasMore == true)? true : false,\n              lastUserId: (res.data.candidateList.length > 0) ? res.data.candidateList[res.data.candidateList.length-1]._id: this.state.lastUserId,\n              pageNum: this.state.pageNum + 1\n          });\n          console.log(this.state.lastUserId);\n          \n          //if records are not returned\n          if(!this.state.lastUserId)\n          {\n               this.setState({ loader: false, noRecordFound:true });\n          }\n        }\n      })\n      .catch(function (err) {\n        //this.setState({ loader: false});\n        //console.log(err);\n      });  \n    }\n  }\n  \n  closeModal = (name) => {\n    if(name == \"applicationListOpen\")\n      this.setState({activeCandidateId: null})\n      \n    this.setState({ [name]: false});\n  }\n\n \n  handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n  \n  searchCandidate = (type) => {\n    var queryParm = \"?\";\n    var seperator = \"&\";\n    \n    var industry = \"\"\n    \n    this.state.industrySelected.forEach(function(object) {\n      if(object.value)\n        industry += object.value + \",\";\n    });\n    \n    if(industry.length>0)\n      industry = industry.substr(0, industry.length-1); \n      \n      \n    var location = \"\"\n      \n    this.state.locationSelected.forEach(function(object) {\n      if(object.value)\n        location += object.value + \",\";\n    });\n    \n    if(location.length>0)\n      location = location.substr(0, location.length-1); \n   \n    queryParm += \"qUser=\" + this.state.searchUserText + seperator;\n    queryParm += \"q=\" + this.state.searchText + seperator;\n    queryParm += \"loc=\" + (location || '') + seperator;\n    queryParm += \"ind=\" + (industry || '') + seperator;\n    //queryParm += \"jt=\" + jobType + seperator;\n    queryParm += \"minSal=\" + this.state.salary.min + seperator;\n    queryParm += \"maxSal=\" + this.state.salary.max + seperator;\n    queryParm += \"minExp=\" + this.state.experience.min + seperator;\n    queryParm += \"maxExp=\" + this.state.experience.max + seperator;\n    queryParm += \"myCand=\" + this.state.myCandidate + seperator;\n    queryParm += \"actCand=\" + this.state.activeCandidate + seperator;\n    queryParm += \"notCompletedCand=\" + this.state.onlyNotCompletedCandidate + seperator;\n    queryParm += \"openOpp=\" + this.state.openToOpportunity;\n    \n    window.location = '/admin/candidatelist' + queryParm;\n  }\n  \n  searchByKey = (e) => {\n    if(e.key === 'Enter'){\n      this.searchCandidate(\"user\");\n    }\n  }\n  \n  clearFilter = () => {\n    this.setState({\n      //checkedItemsLocation: new Map(),\n      checkedItemsIndustry: new Map(),\n      salary: { min: 0, max: 500000 },\n      experience: { min: 0, max: 50 },\n      searchText : \"\",\n      searchUserText : \"\",\n      industrySelected : [],\n      locationSelected : [], //this.state.location_list.find((obj) => { return (obj.label == \"Hong Kong\") }),\n      industry : null,\n      myCandidate: false,\n      activeCandidate: false,\n      openToOpportunity: false,\n      onlyNotCompletedCandidate: false,\n    });\n  }\n \n  openModal = (e, popUp) => {\n    e.preventDefault();\n    this.setState({ [popUp]: true});\n  }\n  \n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n     [e.target.name] : e.target.value,\n    });\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   //console.log(gotList);\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n }\n\n updateState = (stateName, value) => {\n    this.setState({[stateName]: value});\n }\n  \n  viewProfile = (candId) => {\n    var candidateId = (candId != null) ? candId : \"\";\n    if(candidateId)\n      window.open(\"/resume/\"+candidateId, \"_blank\");\n    else\n      alert(\"Candidate data error!\");\n  }\n  \n  render() {\n    const { loader, isRemindWarning } = this.state;\n    \n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\n    \n    var items = [];\n    this.state.candidateList.map((candidate, i) => {\n      var candidateInfo = candidate;\n      var userInfo = candidate.userInfo;\n      items.push(\n                  <StyledTableRow key={i} className={`${candidateInfo && candidateInfo.isCompleted ? \"\" : \"incomplete-cadidate\"}`}>\n                        <StyledTableCell align=\"center\"><a href={\"/resume/\"+candidate._id} target=\"_blank\">{userInfo.name ? userInfo.name.firstName + \" \" + userInfo.name.lastName : \"\"}</a></StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          {userInfo.email ? userInfo.email : \"\"}<br />\n                          {userInfo.phone && userInfo.phone.dial && userInfo.phone.number ? userInfo.phone.dial + \" \" + userInfo.phone.number : \"\"}\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.phone ? candidate.phone.dial + \" \" + candidate.phone.number : \"\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo && candidateInfo.career && candidateInfo.career.length>0 ? candidateInfo.career[0].company : \"\"}<br />\n                          {candidateInfo && candidateInfo.career && candidateInfo.career.length>0 ? \"(\"+candidateInfo.career[0].jobTitle+\")\" : \"\"}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo && candidateInfo.salary  ? \"$\"+numberWithCommas(candidateInfo.salary) : \"\"}<br />\n                          {candidateInfo && candidateInfo.experience  ? candidateInfo.experience+\" Yr\" : \"\"}\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.userInfo && candidate.userInfo.career && candidate.userInfo.career.length>0 ? candidate.userInfo.career[0].jobTitle : \"\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {candidate.industryInfo ? candidate.industryInfo.name : \"N/A\"}<br />\n                          {candidate.subIndustryInfo ? \"(\"+candidate.subIndustryInfo.name+\")\" : \"N/A\"}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                          {candidate.locationInfo ? candidate.locationInfo.name : \"N/A\"}<br />\n                          {candidateInfo && candidateInfo.openToRelocation ? \"(Yes)\" : \"(No)\"}<br />\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.isActive ? \"Yes\" : \"No\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {candidateInfo && candidateInfo.openToOpportunity ? \"Yes\" : \"-\"}<br />\n                          {candidateInfo && candidateInfo.openToOpportunity && candidateInfo.noticePeriod ? \"(\"+candidateInfo.noticePeriod+\" Month)\" : \"\"}\n                        </StyledTableCell>\n                        {/*<StyledTableCell align=\"center\">{candidate.userInfo && candidate.userInfo.noticePeriod ? candidate.userInfo.noticePeriod : \"\"}</StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">{candidateInfo && candidateInfo.isCompleted ? \"Yes\" : \"No\"}</StyledTableCell>\n                        {/*<StyledTableCell align=\"center\"><Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" component={Link} onClick={() => this.viewProfile(candidate._id)}>View Details</Button></StyledTableCell>*/}\n                        <StyledTableCell align=\"center\">\n                          {(candidate.applicationNum && candidate.applicationNum > 0) ? \n                            <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\" onClick={ (e) => {this.updateState(\"activeCandidateId\",candidate._id); this.openModal(e, \"applicationListOpen\")} }>\n                              View ({candidate.applicationNum && candidate.applicationNum})\n                            </Button>\n                          : \"\"}\n                        </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });\n    const { isDetailExpanded } = this.state;\n\n    return (\n      <div className=\"app-wrapper\">\n      { loader ?\n        <div className=\"loader-view\"\n             style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div>\n          <Helmet>\n              <title>My Candidate List | JobsLab</title>\n          </Helmet>\n          {/*<Modal\n            isOpen={this.state.showFilterPopup}\n            closeTimeoutMS={200}\n            style={this.state.modalStyleState}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={() => this.closeModal('showFilterPopup')}\n            className=\"jobListModal\"\n            overlayClassName=\"jobListModal-Overlay\" \n            contentLabel=\"Modal\"\n          >\n          \n            <Widget styleName=\"jr-card-profile\">*/}\n          <Dialog open={this.state.showFilterPopup} onClose={() => this.closeModal('showFilterPopup')} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n              <DialogContent id=\"popup-filter\" style={{ width: \"400px\" }}>  \n                  <div className=\"mb-3\">\n                    <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Filter <span className=\"close-popup\" onClick={() => this.closeModal('showFilterPopup')}><i className=\"la la-close\"></i></span></h3>\n                \n                  </div>\n                  <AdminCandidateFilter \n                          //checkedItemsIndustry={this.state.checkedItemsIndustry}  \n                          locationSelected={this.state.locationSelected}\n                          industrySelected={this.state.industrySelected}\n                          experience={this.state.experience} \n                          salary={this.state.salary} \n                          myCandidate={this.state.myCandidate}\n                          activeCandidate={this.state.activeCandidate}\n                          openToOpportunity={this.state.openToOpportunity}\n                          onlyNotCompletedCandidate={this.state.onlyNotCompletedCandidate}\n                          handleCheckBoxChange={this.updateCheckList.bind(this)}\n                          search={this.searchCandidate.bind(this)}\n                          handlePropChange={this.handlePropChange.bind(this)}\n                          onFieldChanged={this.inputRangeChanged.bind(this)}\n                          clearFilter={this.clearFilter.bind(this)}\n                          updateSearchText={this.updateSearchText.bind(this)}\n                          selectSearchText={this.selectSearchText.bind(this)}\n                          searchText={this.state.searchText}\n                          searchUserText={this.state.searchUserText}\n                          autocompleteChange={this.autocompleteChange.bind(this)}\n                  />\n            {/*</Widget>\n          </Modal>*/}\n              </DialogContent>\n          </Dialog>\n          \n          <div className=\"d-flex mb-4\">\n                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                      onClick={(e) => this.openModal(e,'showFilterPopup')}>\n                  <font size=\"+1\">Filter</font>\n                </Button>\n                {/*<Button size=\"small\" variant=\"contained\" color=\"red\" className=\"ml-auto jr-btn jr-btn-lg bg-white\" \n                        onClick={() => this.setState({ isRemindWarning: true })}\n                >Profile Completion Reminder</Button>*/}\n        \n                <Button size=\"small\" variant=\"contained\" className=\"ml-auto jr-btn jr-btn-lg bg-white\" \n                        onClick={() => this.props.history.push(\"/candidate/register\")}\n                >New Candidate</Button>\n          </div>   \n          \n          <div id=\"inif-container\" className=\"table-container admin-infinite-table\">\n            <Table stickyHeader aria-label=\"sticky customized table\">\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">Candidate Name</StyledTableCell>\n                    <StyledTableCell align=\"center\">Contact</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Candidate Phone</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Current Company<br />(Job Title)</StyledTableCell>\n                    <StyledTableCell align=\"center\">Salary<br />Experience</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Current Title</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Industry<br />(Job Function)</StyledTableCell>\n                    <StyledTableCell align=\"center\">Location<br />(Open to Relocation)</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Is active user</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Open to opportunities<br />(Notice Period)</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Notice Period (Month)</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">Is profile completed</StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">Candidate Profile</StyledTableCell>*/}\n                    <StyledTableCell align=\"center\">View Applications\n            {\n              isDetailExpanded\n              ?\n              <Button size=\"small\" variant=\"contained\" className=\"mb-0 float-right float-sm-left float-md-right\" color=\"primary\" onClick={this.toggle}><small>Hide Detail</small></Button>\n              :\n              <Button size=\"small\" variant=\"contained\" className=\"mb-0 float-right float-sm-left float-md-right\" color=\"primary\" onClick={this.toggle}><small>Show Detail</small></Button>\n            }\n            <Detail description={\"testing\"} open={isDetailExpanded}/></StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                  <InfiniteScroll\n                      className=\"MuiTableBody-root\"\n                      pageStart={0}\n                      element={'tbody'}\n                      loadMore={this.getMoreCandidate.bind(this)}\n                      hasMore={this.state.hasMore}\n                      loader={loaderComponent}\n                      useWindow={false}\n                      getScrollParent={() => document.getElementById('inif-container')}\n                    >\n                      {items}\n                  </InfiniteScroll>\n            </Table>\n          </div>\n          <CandidateApplicationListForm candidateId={this.state.activeCandidateId} isOpen={this.state.applicationListOpen} closeModal={() => this.closeModal('applicationListOpen')} />\n        </div>\n      }\n        <SweetAlert show={isRemindWarning}\n                    warning\n                    showCancel\n                    confirmBtnText={\"Yes, Send it!\"}\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\n                    onConfirm={() => this.sendReminder()}\n                    onCancel={() => this.setState({ isRemindWarning: false })}\n        >\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\n        </SweetAlert>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n   const {countryList, industryList, listLoading} = state.list;\n  return {\n    countryList,\n    industryList,\n    listLoading\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminNewDashboard));\n\n","/home/ubuntu/environment/jobslab-web/src/app/test/TestRecorder.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Recorder/index.js",["3131","3132","3133","3134","3135"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { captureUserMedia,stopCaptureUserMedia } from './MediaUtil';\nimport Webcam from './WebCam';\nimport RecordRTC from 'recordrtc';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport IntlMessages from 'util/IntlMessages';\nimport * as notification from 'actions/Notification';\nimport {isIOS,isChrome} from \"react-device-detect\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport CountdownTimer from \"components/CountdownTimer/index.js\";\n\nconst hasGetUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||\n                        navigator.mozGetUserMedia || navigator.msGetUserMedia);\n                        \nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      recordVideo: null,\n      src: null,\n      stream: null,\n      isUploadSuccess: false,\n      uploadVideo: false,\n      uploadingVideo: false,\n      recording: false,\n      timeIsUp: false\n    };\n    \n    this.startRecord = this.startRecord.bind(this);\n    this.stopRecord = this.stopRecord.bind(this);\n    this.markUploadFailed = this.markUploadFailed.bind(this);\n    this.getUploadLocation = this.getUploadLocation.bind(this);\n    this.uploadVideo = this.uploadVideo.bind(this);\n    this.processRequest = this.processRequest.bind(this);\n    this.stopRecordFromTimer = this.stopRecordFromTimer.bind(this);\n  }\n  \n  componentDidMount() {\n    \n  }\n \n \n  startRecord() {\n    \n    if(isIOS & isChrome) {\n      notification.error(\"Your browser is not supported. Please try to record by Safari.\");\n      return true;\n    }\n    \n    this.setState({ \n          recording: true\n    });\n    /*if(!hasGetUserMedia) {\n      alert(\"Your browser cannot stream from your webcam. Please switch to Chrome or Firefox.\");\n      return;\n    }*/\n    // audio/webm\n    // video/webm;codecs=vp9\n    // video/webm;codecs=vp8\n    // video/webm;codecs=h264\n    // video/x-matroska;codecs=avc1\n    // video/mpeg -- NOT supported by any browser, yet\n    // video/mp4  -- NOT supported by any browser, yet\n    // audio/wav\n    // audio/ogg  -- ONLY Firefox\n    var options = {\n            type: 'video',\n            mimeType: 'video/webm;codecs=h264'\n        };\n   \n    navigator.mediaDevices.getUserMedia({ audio: true, video: true})\n      .then(stream => {\n        //this.setState({ src: stream }); \n        window.localStream = stream;\n        //this.state.recordVideo = RecordRTC(stream, options); // { type: 'video' }\n        this.setState({ \n          src: stream,\n          recording: true,\n          playback: false,\n          playbackUrl: \"\",\n          recordVideo: RecordRTC(stream, options)\n        });\n        this.state.recordVideo.startRecording();\n      })\n      .catch(error => {\n            notification.error(\"Please enable your webcam/ microphone for recording video.\");\n            this.setState({ \n              src: null, \n              recording: false,\n              playback: false,\n              playbackUrl: \"\",\n              playbackBlob: null,\n              recordVideo: null\n            });\n      });\n  }\n  \n  stopRecord() { \n    this.state.recordVideo.stopRecording((videoUrl) => {\n\n      var fileBlob = this.state.recordVideo.blob;\n      //console.log(URL.createObjectURL(fileBlob));\n\n      this.setState(\n      { \n        src: null, \n        recording: false,\n        playback: true,\n        playbackUrl: URL.createObjectURL(fileBlob),\n        playbackBlob: fileBlob\n      });\n      stopCaptureUserMedia(window.localStream);\n    });\n  }\n  \n  \n  stopRecordFromTimer() {\n    this.stopRecord();\n    this.setState(\n      { \n        timeIsUp: true\n      });\n  }\n  \n  markUploadFailed() {\n    this.setState({ \n      uploadingVideo: false \n    });\n    notification.error(\"Failed to submit the video. Please try again.\");\n  }\n  \n  getUploadLocation() {\n    this.setState({ \n          uploadVideo: false,\n          uploadingVideo: true\n    });\n    var data = {videoId : this.props.videoId};\n    axios.post(this.props.videoUploadUrl, data, {\n       onUploadProgress: data => {\n         //Set the progress value to show the progress bar\n         console.log(Math.round((100 * data.loaded) / data.total))\n       },\n     })\n      .then(res => {\n        if (res && res.status == 200 && res.data.isSuccess) {\n          this.uploadVideo(res.data.url, res.data.fileName);\n        }\n        else {\n          this.markUploadFailed();\n        }\n      })\n      .catch(error => {\n        this.markUploadFailed();\n      });\n  }\n  \n  uploadVideo(requestUrl, requestFileName) {\n      var fileBlob = this.state.playbackBlob;\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(fileBlob);\n      reader.onloadend = (event) => {\n         axios({\n          method: 'put',\n          url: requestUrl,\n          data: reader.result\n          })\n          .then(res => {\n            if (res && res.status == 200) {\n              this.processRequest();\n            }\n            else {\n              this.markUploadFailed();\n            }\n          })\n          .catch(error => {\n            console.log(error);\n            this.markUploadFailed();\n          });\n      }\n  }\n  \n  processRequest() {\n     var data = {videoId : this.props.videoId};\n     axios.post(this.props.processRequestUrl, data, {\n       onUploadProgress: data => {\n         //Set the progress value to show the progress bar\n         console.log(Math.round((100 * data.loaded) / data.total))\n       },\n     })\n      .then(res => {\n        if (res && res.status == 200 && res.data.isSuccess) {\n          this.setState({ \n            isUploadSuccess: true, \n            uploadingVideo: false \n          });\n        }\n        else {\n          this.markUploadFailed();\n        }\n      })\n      .catch(error => {\n        this.markUploadFailed();\n      });\n  }\n  \n   render() {\n     const {src, playback, playbackUrl, recording, uploadVideo, uploadingVideo, timeIsUp, isUploadSuccess} = this.state;\n     const {buttonClass, timeLimitSec} = this.props;\n    return(\n      <div>\n       {\n         timeLimitSec != null ?\n           <CountdownTimer timeLimitSec={timeLimitSec} timerState={recording ? \"START\" : \"RESET\"} callbackFunc={this.stopRecordFromTimer} />\n         : null\n       }\n       \n       {/* <Modal show={this.state.uploadSuccess}><Modal.Body>Upload success!</Modal.Body></Modal>*/}\n        <div>\n          {src ? <Webcam src={src}/> : ''}\n          {playback ? <video className=\"recording-video\" controls controlsList=\"nodownload\" src={playbackUrl}/> : ''}\n        </div>\n        {\n         recording ?\n         <Button disabled={!recording} variant=\"contained\" color=\"primary\" className={buttonClass || \"jr-btn recording-video-btn\"} onClick={() => { this.stopRecord() }}>\n                        <font size=\"\"><i className=\"fas fa-video-slash mr-2\"/></font>\n                        Stop Recording\n         </Button>\n         \n         :<Button disabled={recording} variant=\"contained\" color=\"primary\" className={buttonClass || \"jr-btn recording-video-btn\"} onClick={() => { this.startRecord() }}>\n                        <font size=\"\"><i className=\"fas fa-video mr-2\"/></font>\n                        Start Recording\n          </Button>\n        }\n        <Button disabled={!playback} variant=\"contained\" color=\"primary\" className={buttonClass || \"jr-btn recording-video-btn\"} onClick={() => this.setState({ uploadVideo: true })}>\n                        <font size=\"\"><i className=\"far fa-check-circle mr-2\"/></font>\n                        Submit Video\n        </Button>\n        <SweetAlert show={uploadVideo}\n                    warning\n                    showCancel\n                    confirmBtnText={\"Yes, Submit It!\"/*<IntlMessages id=\"sweetAlerts.yesDeleteIt\"/>*/}\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\n                    onConfirm={this.getUploadLocation}\n                    onCancel={() => this.setState({ uploadVideo: false, uploadingVideo: false })}\n        >\n          <IntlMessages id=\"sweetAlerts.youWillNotAble\"/>\n        </SweetAlert>\n        <SweetAlert \n            show={uploadingVideo}\n            title=\"Uploading the video......\" \n            onConfirm={this.onConfirm} \n            onCancel={this.onCancel}\n            customButtons={\n              <React.Fragment>\n              </React.Fragment>\n            }\n        >\n          <div style={{height:'30px'}}> \n             <ScaleLoader color={\"#00bcd4\"} loading={uploadingVideo} size={50} />\n          </div>\n        </SweetAlert>\n        <SweetAlert show={isUploadSuccess} success title={\"Congratulations!\"/*<IntlMessages id=\"sweetAlerts.goodJob\"/>*/}\n                    onConfirm={ () => this.setState({ isUploadSuccess: false }, ()=>{ this.props.finishedSubmission()}) }>\n          Your video has been submitted successfully.\n          {/*<IntlMessages id=\"sweetAlerts.btnClicked\"/>*/}\n        </SweetAlert>\n        <SweetAlert show={timeIsUp}\n                    warning\n                    confirmBtnText={\"Got It!\"}\n                    confirmBtnBsStyle=\"danger\"\n                    title={\"Time is up. Please submit your video.\"}\n                    onConfirm={() => this.setState({ timeIsUp: false })}\n        >\n        </SweetAlert>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Recorder);\n\n","/home/ubuntu/environment/jobslab-web/src/components/Recorder/MediaUtil.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Recorder/WebCam.js",[],"/home/ubuntu/environment/jobslab-web/src/app/admin/NewDashboard/Detail.js",["3136","3137","3138","3139"],"/home/ubuntu/environment/jobslab-web/src/app/admin/NewDashboard/Detail.styles.js",["3140","3141"],"/home/ubuntu/environment/jobslab-web/src/components/popup/InterviewVideoRequestForm.js",["3142","3143"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n//import Modal from 'react-modal';\n//import modalStyle from 'styles/modalStyle';\nimport Widget from \"components/Widget\";\nimport { DateTimePicker } from '@material-ui/pickers';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport * as notification from 'actions/Notification';\n\nclass InterviewVideoRequestForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  \n      //startTime: null,\n      selectedDate: null,//new Date(),\n      timeLimit: null,\n      question: '',\n    };\n  }\n  \n  textboxChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n  \n  /*datePickerChange = (date, key) => {\n    this.setState({ [key]: date });\n  }*/\n  \n  handleDateChange = (date) => {\n    this.setState({selectedDate: date});\n  };\n  \n  handleNumberInputChange = (e) => {\n    var name = e.target.name;\n    this.setState({ [name]: parseInt(e.target.value, 10) });\n  };\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  /*handleNumericChange = (val, name) => {\n    this.setState({ [name]: val });\n  }*/\n  \n  interviewSchedule = () => {\n    const data = {\n      appId: this.props.appId,\n      deadline: this.state.selectedDate,\n      timeZone: moment.tz.guess(true),\n      timeLimit: this.state.timeLimit,\n      question: this.state.question,\n    };\n    var apiUrl = '/api/admins/set/interview/video/request';\n    axios.post(apiUrl, data)\n    .then(res => {\n      if (res.data.isSuccess) {\n        notification.success(\"You have successfully requested an interview video for this application.\");\n        this.props.completeSchedule();\n        //this.props.completeSchedule(this.props.appId, 410, 'Interviewing');\n      }\n      else {\n        notification.error(res.data.msg);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n  }\n  \n  render() {\n    const { isOpen, closeModal } = this.props;\n    const { selectedDate, timeLimit, question } = this.state;\n\n    return (\n      <Dialog open={isOpen} onClose={() => closeModal('interviewVideoModalIsOpen')} scroll={'body'} /*maxWidth=\"md\"*/ aria-labelledby=\"form-dialog-title\">\n      {/*<Modal\n        isOpen={isOpen}\n        onRequestClose={() => closeModal('interviewModalIsOpen')}\n        style={modalStyle.jobContentModalStyle}\n        contentLabel=\"\"\n      >\n      <Widget styleName=\"jr-card-profile\">\n        <div className=\"account-popup-area signup-popup-box\">\n        \t<div className=\"referral-popup\">*/}\n        \t  <DialogTitle id=\"form-dialog-title\">Video Request</DialogTitle>\n        \t  <DialogContent>\n          \t  <div className=\"row justify-content-left\">\n          \t    {/*<span className=\"pf-title\">Select Candidate</span>*/}\n          \t    <div key=\"datetime_custom\" className=\"col-lg-6 col-md-12 col-sm-12\">\n                  <DateTimePicker\n                    fullWidth\n                    //autoOk\n                    showTabs={false}\n                    autoSubmit={false}\n                    //disableFuture\n                    //variant=\"inline\"\n                    label=\"Deadline\"\n                    value={selectedDate}\n                    onChange={this.handleDateChange}\n                    error={!selectedDate}\n                    helperText={!selectedDate && \"Required\"}\n                    leftArrowIcon={<i className=\"zmdi zmdi-arrow-back\"/>}\n                    rightArrowIcon={<i className=\"zmdi zmdi-arrow-forward\"/>}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <i className=\"zmdi zmdi-alarm\"/>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </div>\n                <div className=\"col-xl-4 col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <TextField\n                    //id=\"experience\"\n                    name=\"timeLimit\"\n                    label=\"Time Limit (min)\"\n                    type=\"number\"\n                    inputProps={{ min: \"0\"}}\n                    value={timeLimit}\n                    onChange={this.handleNumberInputChange}\n                    fullWidth\n                  />\n                </div>\n          \t    {/*<div className=\"col-lg-6\">\n          \t      <span className=\"pf-title\">Start Time</span>\n                  <div className=\"pf-field\">\n                    <DatePicker\n                      timeFormat=\"HH:mm\"\n                      timeIntervals={30}\n                      timeCaption=\"time\"\n                      dateFormat=\"MMMM d, yyyy h:mm aa\"\n                      showTimeSelect\n                      minDate={new Date()}\n                      selected={this.state.startTime}\n                      onChange={(date) => this.datePickerChange(date,'startTime')}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-lg-3\">\n                  <span className=\"pf-title\">Hours</span>\n                  <div className=\"pf-field\">\n\t\t\t\t\t \t\t\t\t\t<NumericInput min={0} max={12} step={1} value={this.state.hours} onChange={(val) => this.handleNumericChange(val, 'hours')} />\n                  </div>\n                </div>\n                <div className=\"col-lg-3\">\n                  <span className=\"pf-title\">Minutes</span>\n                  <div className=\"pf-field\">\n\t\t\t\t\t \t\t\t\t\t<NumericInput min={0} max={45} step={15} value={this.state.minutes} onChange={(val) => this.handleNumericChange(val, 'minutes')} />\n                  </div>\n                </div>*/}\n                <div className=\"col-12 pt-3\">\n                  <TextField\n                    className=\"jobTextArea\"\n                    name=\"question\"\n                    label=\"Question(s) for the candidate\"\n                    fullWidth\n                    multiline={true}\n                    variant=\"outlined\"\n                    value={question}\n                    onChange={this.textboxChange}\n                    error={!question}\n                    helperText={!question && \"Required\"}\n                  />\n                  {/*\n                  <label className=\"m-0 pb-1\" style={{'fontSize':'16px'}}>Interview Detail</label>\n                  <Textarea useCacheForDOMMeasurements style={{'fontSize':'16px'}} className=\"w-100\" name=\"detail\" minRows=\"8\" value={detail} onChange={this.textboxChange} />\n                  */}\n                </div>\n                {/*<div className=\"col-lg-12\">\n                  <span className=\"pf-title\">Detail</span>\n                  <div className=\"pf-field\">\n                   \t<Textarea useCacheForDOMMeasurements placeholder=\"Please input the interview detail...\" name=\"detail\" value={this.state.detail} onChange={this.textboxChange} />\n                  </div>\n                </div>*/}\n                <div className=\"col-lg-12\">\n                  <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.interviewSchedule}>Send</Button>\n                  <Button className=\"mt-2 mr-2 mr-auto\" onClick={() => closeModal('interviewVideoModalIsOpen')}>Cancel</Button>\n                </div>\n              </div>\n            </DialogContent>\n            {/*</div>\n          </div>\n        </Widget>\n      </Modal>*/}\n      </Dialog>\n    );\n  }\n}\n\nexport default InterviewVideoRequestForm;\n","/home/ubuntu/environment/jobslab-web/src/app/application/VideoInterview.js",["3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155"],"import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ContainerHeader from 'components/ContainerHeader/index';\n\n\nimport CandidateHeader from \"components/application/CandidateHeader\";\nimport JobDescription from \"components/application/JobDescription\";\nimport ClientList from \"components/application/ClientList\";\nimport InterviewQuestion from 'components/application/InterviewQuestion';\nimport InterviewVideo from 'components/application/InterviewVideo';\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\nimport * as notification from 'actions/Notification';\n\nimport {\n  CANDIDATE_WITHDRAWN_1,\n  CLIENT_REJECTED,\n  CANDIDATE_WITHDRAWN_2,\n  SELECTED\n} from 'constants/ApplicationState';\n\n\nclass VideoInterview extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true\n    }\n  }\n  \n  componentDidMount() {\n    this.getInVideo();\n    /*if (this.props.match.params.inVideoId != null) {\n      var inVideoId = this.props.match.params.inVideoId;\n      this.setState({\n        inVideoId: inVideoId\n      })\n      this.getInVideo(inVideoId);\n    }*/\n    this.props.updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    /*setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1000);*/\n  }\n    \n    \n  getInVideo = () => {\n    if (this.props.history.location.pathname.includes(\"/applicant\")) {\n      var token = this.props.match.params.token;\n      axios.get('/api/clients/get/encrypted/interview/video/'+token)\n      .then(res => {\n        console.log(res.data)\n        if (res.data.isSuccess) {\n          var job = res.data.inVideo.application.job;\n          job.refererReward = res.data.refererReward;\n          this.setState({\n            candidate: res.data.inVideo.application.candidate,\n            job: job,\n            refererReward: res.data.refererReward,\n            videoUrl: res.data.videoUrl,\n            deadline: res.data.inVideo.deadline, \n            timeLimit: res.data.inVideo.timeLimit, \n            interviewQuestion: res.data.inVideo.question, \n            isUploaded: res.data.inVideo.isUploaded,\n            isProcessed: res.data.inVideo.isProcessed,\n            isValid: res.data.isValid,\n            resumeToken: res.data.resumeToken==null ? null : res.data.resumeToken, //Annoymous access Resume by Resume Token\n            loader: false\n          });\n        }\n        else {\n          notification.error(res.data.msg);\n          this.props.history.push('/');\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n    else {\n      var inVideoId = this.props.match.params.inVideoId;\n      this.setState({ inVideoId: inVideoId });\n      axios.get('/api/'+this.props.userType+'s/get/interview/video/'+inVideoId)\n      .then(res => {\n        console.log(res.data)\n        if (res.data.isSuccess) {\n          var job = res.data.inVideo.application.job;\n          job.refererReward = res.data.refererReward;\n          this.setState({\n            candidate: res.data.inVideo.application.candidate,\n            job: job,\n            refererReward: res.data.refererReward,\n            state: res.data.inVideo.application.state,\n            videoUrl: res.data.videoUrl,\n            deadline: res.data.inVideo.deadline, \n            timeZone: res.data.inVideo.timeZone,\n            timeLimit: res.data.inVideo.timeLimit, \n            interviewQuestion: res.data.inVideo.question, \n            isUploaded: res.data.inVideo.isUploaded,\n            isProcessed: res.data.inVideo.isProcessed,\n            isValid: res.data.isValid,\n            appId: res.data.inVideo.application._id, //Client access Resume by application ID        \n            loader: false\n          });\n        }\n        else {\n          notification.error(res.data.msg);\n          this.props.history.push('/');\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n    \n  render() {\n      const { userType } = this.props;\n      const { loader, candidate, job, inVideoId, videoUrl, deadline, timeZone, timeLimit, interviewQuestion, isUploaded, isProcessed, isValid } = this.state;\n      //const appId = this.props.match.params.appId;\n      const { appId } = this.state;\n      const { resumeToken } = this.state;\n    \n      return (\n          <div className=\"app-wrapper\">\n              { loader ?\n                  <div className=\"loader-view\"\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                    <CircularProgress/>\n                    <Helmet>\n                        <title>JobsLab</title>\n                    </Helmet>\n                  </div> : \n                  \n                  <div>\n                    { userType!=\"candidate\" && <CandidateHeader candidateData={candidate} appId={appId} resumeToken={resumeToken} /> }\n                    { userType == \"candidate\" && \n                      <Helmet>\n                          <title>\n                            {\"Interview Video for \" + (job && job.jobTitle ? \" - \" + job.jobTitle : \"\") + \" | Jobslab\" }\n                          </title>\n                      </Helmet>\n                    }\n                    { (userType==\"client\" || userType==\"admin\") && \n                      <Helmet>\n                          <title>\n                            {\n                              (candidate && candidate._id && candidate._id.name ? \n                                      candidate._id.name.firstName + \" \" + candidate._id.name.lastName + \"'s Interview Video | Jobslab\"\n                                      : \"JobsLab\" \n                              )\n                            }\n                          </title>\n                      </Helmet>\n                    }\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <ContainerHeader title={ \"Interview Video for \" + (job && job.jobTitle) || '' /*<IntlMessages id=\"sidebar.timeLine.defaultwithIcons\"/>*/} />\n                      </div>\n                      <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-12\">\n                        { job && <JobDescription jobData={job} /> }\n                        { job && (userType==\"client\" || userType==\"admin\") && <ClientList clientList={job.client} /> }\n                        {/*<TimerView headerColor=\"gradient-primary\"/>*/}\n                      </div>\n                      <div className=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12\">\n                       {/*question & video*/}\n                       <InterviewQuestion \n                       deadline={deadline} \n                       timeZone={timeZone} \n                       timeLimit={timeLimit} \n                       interviewQuestion={interviewQuestion}\n                       />\n                       \n                       <InterviewVideo \n                         getInVideo={this.getInVideo.bind(this)}\n                         title={\"Interview Video\"}\n                         videoUrl={videoUrl} \n                         timeLimit={timeLimit}\n                         inVideoId={inVideoId} \n                         isUploaded={isUploaded}\n                         isProcessed={isProcessed}\n                         isValid={isValid}\n                       />\n                       \n                       \n                      </div>\n                    </div>\n                  </div>\n              }\n          </div>\n      )\n  }\n  \n}\n\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(VideoInterview));\n\n","/home/ubuntu/environment/jobslab-web/src/components/application/InterviewQuestion.js",[],"/home/ubuntu/environment/jobslab-web/src/components/TrueFalseIcon/index.js",["3156","3157"],"import React from 'react';\r\n\r\nconst TrueFalseIcon = ({checker}) => {\r\n\r\n  return (\r\n    <div>\r\n      { checker == true ?\r\n          <font size=\"4\"><i style={{'color':'green'}} className=\"fas fa-check mr-2\"/></font> \r\n          : ((checker == false) ? <font size=\"4\"><i style={{'color':'red'}} className=\"fas fa-times mr-2\"/></font> : \"N/A\")\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrueFalseIcon;","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/index.js",["3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169"],"import React, {useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Widget from \"components/Widget\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n//import IconButton from '@material-ui/core/IconButton'\n//import WidgetHeader from \"components/WidgetHeader/index\";\n//import Button from '@material-ui/core/Button';\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  Slide,\n  IconButton,\n  AppBar,\n  Toolbar,\n} from \"@material-ui/core\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport Recorder from 'components/Recorder';\n\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\nimport GroupInput from \"./CandidateVideoSummary/GroupInput\";\nimport ModalBeforeYouStart from \"./CandidateVideoSummary/ModalBeforeYouStart\";\nimport useStyles from \"./CandidateVideoSummary/styles\";\n\nconst Transition = React.forwardRef(function Transition(\n  props/*: TransitionProps & { children?: React.ReactElement<any, any> }*/,\n  ref/*: React.Ref<unknown>*/\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function IntroductionVideo(props) {\n  \n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const [userRole, setUserRole] = useState(props.userRole);\n  const [isEdit, setIsEdit] = useState(false);\n  const [isVideoUploaded, setIsVideoUploaded] = useState(false);\n  const [isVideoProcessed, setIsVideoProcessed] = useState(false);\n  const [loader, setLoader] = useState(true);\n  \n  const styles = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openYouStart, setOpenYouStart] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickOpenYouStart = () => {\n    setOpenYouStart(true);\n  };\n\n  const handleClickCloseYouStart = () => {\n    setOpenYouStart(false);\n  };\n  \n  useEffect(() => {\n    getVideo();\n  },[setVideoUrl, setIsVideoProcessed]);\n  \n  var getVideo = () => {\n    var token = props.token;\n    axios.get('/api/users/get/encrypted/introduction/video/'+token)\n    .then(res => {\n      console.log(res.data)\n      if (res.data.isSuccess) {\n        setVideoUrl(res.data.videoUrl);\n        setIsVideoUploaded(res.data.isUploaded);\n        setIsVideoProcessed(res.data.isProcessed);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    })\n    .finally(() => { setLoader(false) });\n  }\n  \n  var finishedSubmission = () => {\n    setIsEdit(false);\n    getVideo();\n  }\n  \n  return (\n    <div className=\"jr-entry-sec\">\n        <Widget styleName=\"jr-card-profile\">\n          <div className=\"d-flex\">\n            <h3 className=\"card-title mr-auto mb-1 mb-md-3\">\n              <div class=\"mr-2\" style={{'display' : 'inline-block'}}>\n                Introduction Video\n              </div>\n              <div style={{'display' : 'inline-block'}} data-tip=\"Do you feel like your CV is being overlooked for top jobs? <br />\n                Do you feel like you’ve more to offer than what’s written in your CV? <br />\n                Get your message across directly by leveraging our asynchronous video platform. <br />\n                It’ll help reduce bias that often leads to a CV or application ignored and <br />\n                is 3 times more likely to lead to a career match.\">\n                <font size=\"\"><i style={{'color': '#00bcd4'}} className=\"fas fa-exclamation-circle\"/></font>\n              </div>\n            </h3>\n            \n            \n            <ReactTooltip \n              effect={\"solid\"}\n              multiline={true}\n              place={\"top\"}\n              className={\"intro-tooltip\"}\n            />\n            <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={handleClickOpen}>\n              <i class=\"zmdi zmdi-edit\"/>\n            </IconButton>\n            {/*{ (userRole==\"candidate\" ) && (\n              isEdit ? \n                <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => setIsEdit(false)}>\n                  <i class=\"zmdi zmdi-mail-reply\"/>\n                </IconButton>\n              :\n                <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => setIsEdit(true)}>\n                  <i class=\"zmdi zmdi-edit\"/>\n                </IconButton>\n              )\n            }*/}\n          </div>\n          {\n          loader ?\n            <div className=\"loader-view\">\n              <CircularProgress/>\n            </div> : \n            <div style={{'text-align':'center'}}>\n              { isEdit==false &&\n                (\n                   isVideoUploaded==false ? (\n                     <div className=\"recording-video-img-container\">\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/interview/video_interview.png\")} />\n                     </div>\n                   )\n                  : (\n                    isVideoProcessed==false ? (\n                      <div className=\"recording-video-img-container\">\n                        <img src={encodeURI(WEB_IMAGE_URL+\"candidate/interview/video_process.png\")} />\n                        <p>We are processing the video.</p>\n                        <p>Please come back and check later.</p>\n                      </div>\n                    ) :\n                    (\n                     <div className=\"recording-video-img-container\">\n                       <video className=\"recording-video\" controls controlsList=\"nodownload\" src={videoUrl}/>\n                     </div>\n                    )\n                  )\n                )\n              }\n              \n              {/*\n                isEdit==true &&\n                  userRole==\"candidate\" && \n                  <Recorder timeLimitSec={180}\n                            getVideo={getVideo} \n                            finishedSubmission={finishedSubmission}\n                            videoUploadUrl={'/api/users/profile/video/getUrl'}\n                            processRequestUrl={'/api/users/profile/video/process'}\n                            videoId={\"\"}\n                            buttonClass={\"jr-btn introduction-recording-video-btn\"}\n                  />\n              */}\n            </div>\n          }\n          \n      \n        </Widget>\n        \n        <ModalBeforeYouStart\n        handleClickCloseYouStart={handleClickCloseYouStart}\n        openYouStart={openYouStart}\n        handleClose={handleClose}\n      />\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"md\"}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n        open={open}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={styles.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <KeyboardBackspaceIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <DialogContent dividers>\n          <div className={styles.candidateProfileVideoSummaryForm}>\n            <div className={styles.formTitle}>\n              A Video Introduction increases your chances of being shortlisted\n            </div>\n            <div className={styles.formCaption}>\n              Summarize your experience using the three sections below.&ensp;Fill\n              each section based on our examples & advice before you start\n              recording.&ensp;Your text will appear on a teleprompter during recording.\n            </div>\n\n            <GroupInput\n              defaultValue={\"\"}\n              onChangeValue={(value/*: string*/) => console.log(value)}\n              uiHeader=\"1. EXPERIENCE\"\n              subTitleHeader=\"Cover your educational qualifications and experience in 1-2 sentences.\"\n              subTitleDescription=\"E.g. My name is Kevin Chan and I am an investment banker with 11 years experience.&ensp;This includes 5 years covering China TMT and 6 years as part of the ECM team, covering IPO origination. \"\n            />\n\n            <GroupInput\n              defaultValue={\"\"}\n              onChangeValue={(value/*: string*/) => console.log(value)}\n              uiHeader=\"2. SKILLS\"\n              subTitleHeader=\"Highlight any specialist skills you have acquired during the course of your experience.\"\n              subTitleDescription=\"E.g. I am a CFA level 3 and I have a SFC type 1 and 4 RO licenses.&ensp;I have a strong knowledge of deal origination and execution background for IPO's in China.\"\n            />\n\n            <GroupInput\n              defaultValue={\"\"}\n              onChangeValue={(value/*: string*/) => console.log(value)}\n              uiHeader=\"3. ACHIEVEMENTS\"\n              subTitleHeader=\"Highlight what makes you stand out from your peer group.\"\n              subTitleDescription=\"E.g. Fundamental knowledge of China TMT.&ensp;I am also the hiring champion for my team.&ensp;I have native level Mandarin and English.\"\n            />\n\n            <div className={styles.desFormBottom}>\n              This Video Introduction will be added to your JobsLab profile\n              page, which can be edited on your dashboard any time.\n              <br />\n              If you record a new Video Introduction, your profile page will be\n              automatically updated with your new video.\n            </div>\n\n            <Button\n              variant=\"contained\"\n              onClick={() => handleClickOpenYouStart()}\n              className={styles.btnStartRecording}\n            >\n              Start recording\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      \n      </div>\n  )\n};\n","/home/ubuntu/environment/jobslab-web/src/components/application/InterviewVideo.js",["3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183"],"import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Widget from \"components/Widget\";\nimport Recorder from 'components/Recorder';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\n\nclass InterviewVideo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {activeIndex: 0, competitiveness: 70};\n  }\n  \n  finishedSubmission = () => {\n    window.location.reload();\n  }\n  \n  render() {\n    const {userType, title, timeLimit, videoUrl, inVideoId, isUploaded, isProcessed, isValid} = this.props;\n    const {getInVideo} = this.props;\n    return (\n      <div className=\"jr-entry-sec\">\n        <Widget styleName=\"jr-card-profile\">\n          <div className=\"d-flex\">\n            <h3 className=\"card-title\">{title || \"Interview Video\"}</h3>\n          </div>\n          <div>\n            {\n              ((userType!=\"candidate\" && isUploaded != true) ||  (userType ==\"candidate\" && isValid == false && isUploaded == false)) && \n               <div className=\"recording-video-img-container\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"candidate/interview/video_interview.png\")} />\n               </div>\n            }\n            <div style={{'text-align':'center'}}>\n              {\n                (isUploaded == true && isProcessed != true) && \n                <div className=\"recording-video-img-container\">\n                  <img src={encodeURI(WEB_IMAGE_URL+\"candidate/interview/video_process.png\")} />\n                  <p>We are processing the video.</p>\n                  <p>Please come back and check later.</p>\n                </div>\n              }\n              {\n                (isUploaded == true && isProcessed == true && videoUrl != null) && \n                <video className=\"recording-video\" controls controlsList=\"nodownload\" src={videoUrl}/>\n              }\n              \n              {\n                (userType==\"candidate\" && isUploaded == false && isValid == true) && \n                 <Recorder getVideo={getInVideo} \n                           finishedSubmission={getInVideo}\n                           videoId={inVideoId} \n                           timeLimitSec={Number.isInteger(timeLimit) ? timeLimit * 60 : null}\n                           videoUploadUrl={'/api/candidates/interview/video/getUrl'}\n                           processRequestUrl={'/api/candidates/interview/video/process'}\n                           buttonClass={\"jr-btn recording-video-btn\"} />\n              }\n            </div>\n          </div>\n        </Widget>\n      </div>\n    )\n  }\n};\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(InterviewVideo));","/home/ubuntu/environment/jobslab-web/src/components/CountdownTimer/index.js",["3184","3185","3186","3187","3188","3189","3190","3191"],"import React, {useState, useEffect} from \"react\";\nimport Timer from 'react-compound-timer';\n\nexport default function CountdownTimer(props) {\n  \n  //in 1000 = 1s\n  const [countdownTime, setCountdownTime] = useState(Number.isInteger(props.timeLimitSec) ? props.timeLimitSec * 1000 + 999 : 10 * 1000 + 999); //180\n  const [isStarted, setIsStarted] = useState(false);\n  const [isStopped, setIsStopped] = useState(false);\n  const [isReseted, setIsReseted] = useState(false);\n  const [direction, setDirection] = useState(\"backward\");\n\n  useEffect(() => {\n    updateTimer(props.timerState);\n  }, [props]);\n\n  var updateTimer = (timerState) => {\n    if(timerState == \"START\") {\n      startTimer();\n    } else if (timerState == \"RESET\") {\n      resetTimer();\n    }\n  }\n  \n  var finishedRecording = () => {\n    console.log(\"Finished!\");\n    props.callbackFunc();\n  }\n  \n  var startTimer = () => {\n    console.log(\"startTimer\");   \n    setIsReseted(false);\n    setIsStopped(false);\n    setIsStarted(true);\n  }\n  \n  var resetTimer = () => {\n    console.log(\"resetTimer\");    \n    setIsStopped(true);\n    setIsStarted(false);\n    setIsReseted(true);\n  }\n  \n  return (\n    <div class=\"countdown-timer-container\">\n      <h1 id=\"countdown-timer-headline\"><font size=\"4\"><i className=\"fas fa-clock mr-2\"/></font>Time Remaining:</h1>\n      <div id=\"countdown-timer-countdown\">\n        <Timer\n            formatValue={(value) => `${(value < 10 ? `0${value}` : value)} `}\n            initialTime={countdownTime}\n            lastUnit=\"m\"\n            direction={direction}\n            startImmediately={false}\n            checkpoints={[\n                {\n                    time: 0,\n                    callback: () => finishedRecording(),\n                }\n            ]}\n        >\n            {({ start, resume, pause, stop, reset, getTimerState }) => (\n                <React.Fragment>\n                    <br />\n                    <div>\n                        {isStarted == true ? start() : null}\n                        {isStopped == true ? stop() : null }\n                        {isReseted == true ? reset() : null}\n                        {/*\n                          <button onClick={startTimer}>start Timer</button>\n                          <button onClick={resetTimer}>reset Timer</button>\n                          <button onClick={start}>Start</button>\n                          <button onClick={pause}>Pause</button>\n                          <button onClick={resume}>Resume</button>\n                          <button onClick={stop}>Stop</button>\n                          <button onClick={reset}>Reset</button>\n                          <div>{getTimerState()}</div>\n                        */}\n                    </div>\n                    <li><span id=\"hours\"><Timer.Hours /></span>Hours</li>\n                    <li><span id=\"minutes\"><Timer.Minutes /></span>Minutes</li>\n                    <li><span id=\"seconds\"><Timer.Seconds /></span>Seconds</li>\n                   \n                    \n                </React.Fragment>\n            )}\n        </Timer>\n      </div>\n    </div>\n  )\n};\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateListCard/index.js",["3192","3193","3194","3195","3196","3197","3198","3199"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport CandidateListItem from \"./CandidateListItem\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\r\n\r\nimport { arraySortByDate } from 'actions/Function.js';\r\n\r\nclass CandidateListCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: '0'\r\n    }\r\n  };\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const recommendedCandidateList = this.props.recommendedCandidateList;\r\n    const videoRequestedList = this.props.videoRequestedList;\r\n    const interviewRequestedList = this.props.interviewRequestedList;\r\n    \r\n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\r\n    \r\n    var recommendedCandidateItems = [];\r\n    recommendedCandidateList.map((obj, i) => {\r\n          console.log(obj);\r\n      recommendedCandidateItems.push(\r\n          <CandidateListItem key={obj._id} data={obj} tab={this.state.activeTab}/>\r\n      )\r\n    });\r\n    \r\n    var videoItems = [];\r\n    videoRequestedList.map((sim, i) => {\r\n      videoItems.push(\r\n          <CandidateListItem key={sim._id} data={sim} tab={this.state.activeTab} />\r\n      )\r\n    });\r\n    \r\n    var interviewItems = [];\r\n    interviewRequestedList.map((app, i) => {\r\n      interviewItems.push(\r\n          <CandidateListItem key={app._id} data={app} tab={this.state.activeTab} />\r\n      )\r\n    });\r\n    \r\n    \r\n    return (\r\n      <Widget>\r\n        <div className=\"d-flex flex-row justify-content-between mb-2\">\r\n          <h3 className=\"mr-2\">Candidates</h3>\r\n\r\n          {/*<span className=\"ml-2 pointer\"><i className=\"zmdi zmdi-search text-primary jr-fs-xl\"/></span>*/}\r\n        </div>\r\n        <div className=\"jr-news-action jr-tabs-classic jr-tabs-classic-no-border\">\r\n          <div className=\"jr-tabs-up jr-tabs-up-no-border\">\r\n            <Nav className=\"jr-tabs-pills-ctr\" pills>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({active: this.state.activeTab === '0'})}\r\n                  onClick={() => {\r\n                    this.toggle('0');\r\n                  }}\r\n                >\r\n                  Recommended\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({active: this.state.activeTab === '1'})}\r\n                  onClick={() => {\r\n                    this.toggle('1');\r\n                  }}\r\n                >\r\n                  Video Requested\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({active: this.state.activeTab === '2'})}\r\n                  onClick={() => {\r\n                    this.toggle('2');\r\n                  }}\r\n                >\r\n                 Interview Requested\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n          <CustomScrollbars className=\"scrollbar\" style={{height: 350}}>\r\n          {/*<TabContent className=\"jr-tabs-content recommeded-jd-scroll\" activeTab={this.state.activeTab}>*/}\r\n            <TabContent className=\"jr-tabs-content\" activeTab={this.state.activeTab}>\r\n              <TabPane id=\"inif-container-candidateListCard-tab0\" tabId=\"0\">\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.props.loadAllMore}\r\n                    hasMore={this.props.hasMore.get(\"allRecommendedJob\") ? true : false}\r\n                    loader={loaderComponent}\r\n                    useWindow={false}\r\n                    getScrollParent={() => document.getElementById('inif-container-candidateListCard-tab0')}\r\n                  >\r\n                    {recommendedCandidateItems}\r\n                </InfiniteScroll>\r\n                {\r\n                  recommendedCandidateItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; New candidates are recommended daily - check back soon.\r\n                        </span> \r\n                      </div>\r\n                    : \"\"\r\n                }\r\n                {/* arraySortByDate(videoRequestedList.concat(interviewRequestedList),false).map((obj) =>//allProperties.map((data, index) =>\r\n                    <RecommendedJobItem key={obj._id} data={obj.job} isAI={obj.score ? true : false} />\r\n                  )\r\n                */}\r\n              </TabPane>\r\n              \r\n              <TabPane id=\"inif-container-candidateListCard-tab1\" tabId=\"1\">\r\n                {\r\n                  videoItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; No candidates found.\r\n                        </span> \r\n                      </div>\r\n                    : \r\n                      <InfiniteScroll\r\n                          pageStart={0}\r\n                          loadMore={this.props.loadMatchedMore}\r\n                          hasMore={this.props.hasMore.get(\"matchedRecommendedJob\") ? true : false }\r\n                          loader={loaderComponent}\r\n                          useWindow={false}\r\n                          getScrollParent={() => document.getElementById('inif-container-candidateListCard-tab1')}\r\n                        >\r\n                          {videoItems}\r\n                      </InfiniteScroll>\r\n                }\r\n                {/*videoRequestedList.map((sim) =>//allProperties.map((data, index) =>\r\n                  <RecommendedJobItem key={sim._id} data={sim.job} isAI={true} />\r\n                )*/}\r\n              </TabPane>\r\n  \r\n              {<TabPane id=\"inif-container-candidateListCard-tab2\" tabId=\"2\">\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.props.loadRecommendedMore}\r\n                    hasMore={this.props.hasMore.get(\"hhRecommendedJob\") ? true : false}\r\n                    loader={loaderComponent}\r\n                    useWindow={false}\r\n                    getScrollParent={() => document.getElementById('inif-container-candidateListCard-tab2')}\r\n                  >\r\n                    {interviewItems}\r\n                </InfiniteScroll>\r\n                {\r\n                  interviewItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; No candidates found.\r\n                        </span> \r\n                      </div>\r\n                    : \"\"\r\n                }\r\n                {/*interviewRequestedList.map((app) =>//allProperties.map((data, index) =>\r\n                  <RecommendedJobItem key={app._id} data={app.job} isAI={false} />\r\n                )*/}\r\n              </TabPane>}\r\n            </TabContent>\r\n          </CustomScrollbars>\r\n        </div>\r\n      </Widget>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CandidateListCard;\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateListCard/CandidateListItem.js",["3200","3201","3202","3203","3204","3205"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { numberWithCommas } from 'actions/Function.js';\r\nimport { INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\r\n\r\n\r\nfunction CandidateListItem({data, tab}) {\r\n  //const { _id , image, name , salary , year , jobTitle , company , industry , location } = data;\r\n  const { candidate, jobInfo } = data;\r\n  const { _id , salary , experience , jobTitle , company , industry } = candidate ? candidate : {};\r\n  \r\n  return (\r\n    <div className=\"media jr-featured-item\">\r\n      {/*isFeatured === true ? <span color=\"orange\"><span className=\"text-uppercase\">featured</span></span> : null*/}\r\n      <div className=\"unlock-margin-resp jr-featured-thumb \" style={{maxWidth: '80px'}}>\r\n        <img className=\"rounded-lg\" src={_id ? _id.pictureUrl : \"\"} alt=\"...\" />\r\n      </div>\r\n      <div className=\"media-body jr-featured-content unlock-center-resp margin-top-resp\">\r\n        <div className=\"jr-featured-content-left\">\r\n        { (tab == 0) ? <span className=\"jr-tag text-uppercase bg-danger d-inline-block\" color=\"#06BB8A\">Recommended by HeadHunter</span>\r\n        : (tab == 1) ? <span className=\"jr-tag text-uppercase bg-info d-inline-block\" color=\"#06BB8A\">Requested for Video</span>\r\n        : <span className=\"jr-tag text-uppercase bg-warning d-inline-block\" color=\"#06BB8A\">Requested for Interview</span>\r\n        }\r\n          {/*company==null && <span className=\"jr-tag text-uppercase bg-warning d-inline-block locked\" color=\"#ff9800\" >Locked</span>*/}\r\n          \r\n          <Link to={\"/job/\"+ (jobInfo && jobInfo._id ? jobInfo._id : \"\")}><h3 className=\"mb-1\">Applied Job: {jobInfo ? jobInfo.jobTitle : \"N/A\"}</h3></Link>\r\n          \r\n          <Link to={\"/application/\"+data._id}><h3 className=\"mb-1\">{_id && _id.name ? _id.name.firstName + \" \" + _id.name.lastName : \"No Name Provided\"}</h3></Link>\r\n\r\n          <p className=\"text-grey mb-1\">{jobTitle ? jobTitle : \"N/A\"} at {company ? company : \"N/A\"}</p>\r\n\r\n          <div className=\"d-flex flex-wrap mb-2 dashboard-center-resp\" style={{\"max-width\":\"550px\"}}>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Industry:</span> {industry ? industry.name : \"N/A\"}</p>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Monthly Salary:</span> {salary}</p>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Year of Experience:</span> {experience}</p>\r\n            {/*<p className=\"mr-3 mb-1\"><span className=\"text-grey\">Reward:</span> ${numberWithCommas(Math.round(salaryMax*0.2/1000)*1000 + 10000)}</p>*/}\r\n            {/*<a className=\"text-grey text-underline\" href=\"#/\"> + {more} more</a>*/}\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            {/*<p className=\"text-grey mb-1\">\r\n              <i className={`zmdi zmdi-account jr-fs-lg mr-2 d-inline-block align-middle`}/>{name}\r\n            </p>\r\n            <p className=\"text-grey ml-4 mb-1\">\r\n            <p className=\"text-grey mb-1\">\r\n              <i className={`zmdi zmdi-calendar-alt jr-fs-lg mr-2 d-inline-block align-middle`}/>{moment(createdAt).format(\"YYYY/MM/DD\")}\r\n            </p>*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"jr-featured-content-right\">\r\n          <div className=\"unlock-center-resp pt-5\">\r\n          <Link to={\"/application/\"+data._id}><span>Application Detail</span> <i\r\n            className={`zmdi zmdi-long-arrow-right jr-fs-xxl ml-2 d-inline-block align-middle`}/></Link>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateListItem;\r\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/JobPostListCard/index.js",["3206","3207","3208","3209","3210"],"import React, {Component} from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Link } from 'react-router-dom';\nimport CustomScrollbars from 'util/CustomScrollbars';\nimport JobPostListItem from './JobPostListItem';\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\n\nimport ClientCandidateList from 'components/popup/ClientCandidateList';\n\nimport {Badge} from 'reactstrap';\n//import { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\n//import 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\n//import \"@patternfly/react-core/dist/styles/base.css\";\n/*\nimport {\n  DataToolbar,\n  DataToolbarItem,\n  DataToolbarContent,\n  DataToolbarFilter,\n  DataToolbarToggleGroup,\n  DataToolbarGroup\n} from \"@patternfly/react-core/dist/esm/experimental\";\nimport {\n  Title,\n  Select,\n  SelectOption,\n  SelectVariant,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Bullseye,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  InputGroup,\n  TextInput,\n  Button,\n  ButtonVariant\n} from \"@patternfly/react-core\";\n\nimport { SearchIcon, FilterIcon } from \"@patternfly/react-icons\";\nimport { Table, TableHeader, TableBody, TableVariant } from \"@patternfly/react-table\";\n*/\nclass JobPostListCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n  \t  activeJob: '',\n    }; \n  }\n  \n  openModal = (e, popUp) => {\n    e.preventDefault();\n    this.setState({ [popUp]: true});\n    //this.setState({showFilterPopup: true});\n  }\n  \n  closeModal = (name) => {\n    if(name == \"candidateListOpen\")\n      this.setState({activeJob: null})\n      \n    this.setState({ [name]: false});\n  }\n  \n  setSelectedJob = (jId) => {\n    this.setState({activeJob: jId});\n  }\n  \n  render() {\n    const jobList = this.props.jobList;\n    return (\n      <div className=\"jr-card\">\n        <div className=\"jr-card-header mb-3 d-flex\">\n          <h3 className=\"mb-0 mr-auto\">Job Posted</h3>\n        </div>\n        <CustomScrollbars className=\"client-scrollbar scrollbar\" style={{height: 340}}>\n            <table className=\"client-joblist project-list-table table remove-table-border mb-0\">\n            <thead className=\"client-joblist__head\">\n            <tr>\n              <th scope=\"col\">Post Date</th>\n              <th scope=\"col\">Job Title</th>\n              <th scope=\"col\">Salary (Max)</th>\n              <th scope=\"col\">Year (Min)</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Views</th>\n              <th scope=\"col\">Applicants</th>\n              {/*<th scope=\"col\"></th>*/}\n            </tr>\n            </thead>\n            <tbody className=\"client-joblist__body\">\n              {jobList.map(data => {\n                return (\n                  <JobPostListItem key={data._id} data={data} setSelectedJob={this.setSelectedJob} openModal={this.openModal} />\n                );\n              })}\n              <tr>\n                  <td colspan=\"7\">\n                      {\n                        jobList.length <= 0 ?\n                            <div className=\"recordNotFound notfound\" style={{height:'200px'}}>\n                            <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/notfound.png\")}/>\n                              <span>\n                                  <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n                                  &nbsp; No Record Found.\n                              </span> \n                            </div>\n                          : \"\"\n                      }\n                  </td>\n              </tr>\n            </tbody>\n          </table>\n        </CustomScrollbars>\n        <ClientCandidateList jobId={this.state.activeJob} isOpen={this.state.candidateListOpen} \n                             closeModal={() => this.closeModal('candidateListOpen')} />\n      </div>\n    );\n  }\n};\n\nexport default JobPostListCard;","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/JobPostListCard/JobPostListItem.js",["3211","3212","3213","3214","3215","3216","3217"],"import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n//import IconButton from '@material-ui/core/IconButton';\nimport {Badge} from 'reactstrap';\nimport moment from \"moment\";\nimport { COMPANY_ICON_URL, INDUSTRY_ICON_URL } from 'constants/PictureUrl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from \"@material-ui/core/es/Avatar/Avatar\";\n\n\nclass ApplicationItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n      //const {_id, date, jobTitle, salary, year, status, views, applicants, number} = data;\n      const {_id, createdAt, jobTitle, salaryMax, yearMin, isPublic, viewCount, applications} = this.props.data;\n      const candThreshold = 5;\n      \n      return (\n        <tr className=\"client-joblist__item\"\n          tabIndex={-1}\n          key={_id}>\n    \n          <td className=\"client-joblist__date text-nowrap\">{createdAt ?  moment(createdAt).format(\"YYYY/MM/DD\") :\"\"}</td>\n          <td className=\"client-joblist__jobtitle text-nowrap\">\n            <Link target=\"_blank\" to={\"/job/\"+_id}><p className=\"text-truncate mb-0\">{jobTitle}</p></Link>\n          </td>\n          <td className=\"client-joblist__salary text-nowrap\">{salaryMax}</td>\n          <td className=\"client-joblist__year text-nowrap\">{yearMin}</td>\n          <td className=\"client-joblist__status text-nowrap\">\n          {\n            isPublic == true\n            ? <div className=\"badge badge-success\">Public</div>\n            : <div className=\"badge badge-warning\">Private</div>\n          }\n          </td>\n          <td className=\"client-joblist__views text-nowrap\">{viewCount}</td>\n          <td className=\"client-joblist__team-list\">\n          {applications.length == 0 ? \"No Applications\" : \n            <ul className=\"team-list\">\n              {applications.map((app, index) =>\n                index >= candThreshold ? \"\" : \n                <li key={app.id}>\n                  <Avatar className=\"user-avatar\" src={app.userInfo && app.userInfo.pictureUrl} \n                          onClick={ (e) => {this.props.setSelectedJob(_id); this.props.openModal(e, \"candidateListOpen\")} }/>\n                </li>\n              )}\n              {applications.length <= candThreshold ? \"\" : \n                <li className=\"user-avatar badge badge-info pl-1 pr-0 rounded-circle\" style={{\"width\": \"25px\",\"height\": \"25px\"}}\n                    onClick={ (e) => {this.props.setSelectedJob(_id); this.props.openModal(e, \"candidateListOpen\")} }>{applications.length - candThreshold}+</li>\n              }\n              \n            </ul>\n          }\n          </td>\n          {/*\n          <td>\n            <IconButton className=\"text-light icon-btn p-1\">\n              <i class=\"fas fa-chevron-down\"></i>\n            </IconButton>\n          </td>\n          */}\n        </tr>\n      );\n      \n  }\n};\n\nexport default ApplicationItem;\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/WelcomeCard.js",["3218","3219","3220"],"import React from \"react\";\nimport Widget from \"components/Widget/index\";\n\nconst WelComeCard = () => {\n\n  return (\n    <Widget>\n      <div className=\"jr-wel-ema pt-xl-2\">\n        <h4 className=\"mb-3 text-uppercase\">You Have</h4>\n        <ul className=\"list-unstyled\">\n          <li className=\"mb-1\">\n            <a href=\"\">\n              <i className=\"fas fa-reply zmdi-hc-fw zmdi-hc-lg mr-2 text-info\"/>\n              <span className=\"text-dark\">54 Waiting Applicants</span>\n            </a>\n          </li>\n          <li className=\"mb-1\">\n            <a href=\"\">\n              <i className=\"fas fa-video zmdi-hc-fw zmdi-hc-lg mr-2 text-info\"/>\n              <span className=\"text-dark\">16 Submitted Videos</span>\n              </a>\n          </li>\n          <li className=\"mb-1\">\n            <a href =\"\">\n              <i className=\"fas fa-envelope-open-text zmdi-hc-fw zmdi-hc-lg mr-2 text-info\"/>\n              <span className=\"text-dark\">8 Pending Offers</span>\n              </a>\n          </li>\n        </ul>\n      </div>\n    </Widget>\n  );\n};\n\nexport default WelComeCard;\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/ClientProfile.js",["3221"],"import React, {Component} from \"react\";\nimport Auxiliary from \"util/Auxiliary\";\nimport { AVATAR_DEFAULT_URL } from 'constants/PictureUrl';\n\nclass ClientProfile extends Component {\n  render() {\n    return (\n      <Auxiliary>\n        <div className=\"jr-profileon\">\n          <div className=\"jr-profileon-thumb jr-profileon-thumb-htctrcrop dashboard-cutting\">\n            <img src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/others/WhatsApp+Image+2021-05-10+at+12.47.15+AM.jpeg\" alt='' />\n          </div>\n          <div className=\"jr-profileon-content\">\n            <p className=\"jr-profileon-title\">John Smith</p>\n            <span className=\"jr-fs-sm\">HR Manager at Goldman Sachs</span>\n          </div>\n        </div>\n      </Auxiliary>\n    );\n  }\n};\n\nexport default ClientProfile;\n","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/ChartCard.js",[],"/home/ubuntu/environment/jobslab-web/src/app/client/data.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateStatus/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/CandidateStatus/LineIndicator.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/YearlyStatus/index.js",["3222"],"import React, { Component } from \"react\";\n//import { applicantData, jobData } from \"app/client/data\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\nimport classnames from 'classnames';\nimport Widget from \"components/Widget/index\";\nimport StatusChart from './StatusChart';\n\nclass CandidateListCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '0'\n    }\n  };\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    var {jobYearlyChartData, applicantYearlyChartData} = this.props;\n    console.log(\"console.log(jobYearlyChartData);\");\n    console.log(jobYearlyChartData);\n    return (\n        <div className=\"jr-news-action jr-tabs-classic jr-tabs-classic-no-border\">\n          <div className=\"pl-4 pt-2\">\n            <Nav pills>\n              <NavItem>\n                <NavLink\n                  className={classnames({active: this.state.activeTab === '0'})}\n                  onClick={() => {\n                    this.toggle('0');\n                  }}\n                >\n                  Applicants\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({active: this.state.activeTab === '1'})}\n                  onClick={() => {\n                    this.toggle('1');\n                  }}\n                >\n                  Job Posted\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n            <TabContent className=\"jr-tabs-content pt-2\" activeTab={this.state.activeTab}>\n              <TabPane id=\"inif-container-candidateListCard-tab0\" tabId=\"0\">\n               <StatusChart chartData={applicantYearlyChartData} tabId={0} />\n              </TabPane>\n              \n              <TabPane id=\"inif-container-candidateListCard-tab1\" tabId=\"1\">\n                <StatusChart chartData={jobYearlyChartData} tabId={1} />\n              </TabPane>\n  \n            </TabContent>\n        </div>\n    );\n  }\n}\n\nexport default CandidateListCard;","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Client/YearlyStatus/StatusChart.js",["3223"],"import React from 'react';\nimport {Area, AreaChart, Legend, ResponsiveContainer, Tooltip} from 'recharts';\n\nconst StatusChart = ({chartData, tabId}) => (\n  <ResponsiveContainer width=\"100%\" height={213}>\n    { (tabId == 0) ? \n    <AreaChart data={chartData} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\n      <Legend\n        layout='vertical'\n        verticalAlign=\"top\"\n        margin={{left: 10}}\n        wrapperStyle={{\n          top: 0,\n          left: 24,\n          lineHeight: '24px'\n        }}\n      />\n      <Tooltip labelFormatter={ index => chartData[index].name }/>\n      <defs>\n        <linearGradient id=\"applicants\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n          <stop offset=\"5%\" stopColor=\"#c3e3ff\" stopOpacity={1}/>\n          <stop offset=\"95%\" stopColor=\"#c3e3ff\" stopOpacity={1}/>\n        </linearGradient>\n        <linearGradient id=\"recommended\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n          <stop offset=\"5%\" stopColor=\"#3E54B7\" stopOpacity={1}/>\n          <stop offset=\"95%\" stopColor=\"#569DF9\" stopOpacity={1}/>\n        </linearGradient>\n      </defs>\n      <Area type=\"monotone\" dataKey=\"Applicants\" strokeWidth={0} stroke=\"#39CBDD\" fillOpacity={0.7} fill=\"url(#applicants)\"/>\n      <Area type=\"monotone\" dataKey=\"Recommended\" strokeWidth={0}  stroke=\"#3F50B4\" fillOpacity={1} fill=\"url(#recommended)\"/>\n    </AreaChart>\n    : \n    <AreaChart data={chartData} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\n      <Legend\n        layout='vertical'\n        verticalAlign=\"top\"\n        margin={{left: 10}}\n        wrapperStyle={{\n          top: 0,\n          left: 24,\n          lineHeight: '24px'\n        }}\n      />\n      <Tooltip labelFormatter={ index => chartData[index].name }/>\n      <defs>\n        <linearGradient id=\"postedjob\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n          <stop offset=\"5%\" stopColor=\"#ffc107\" stopOpacity={1}/>\n          <stop offset=\"95%\" stopColor=\"#ff8400\" stopOpacity={1}/>\n        </linearGradient>\n      </defs>\n      <Area type=\"monotone\" dataKey=\"Jobs\" strokeWidth={0}  stroke=\"#a05300\" fillOpacity={0.7} fill=\"url(#postedjob)\"/>\n    </AreaChart>  \n      \n    }\n  </ResponsiveContainer>\n);\n\nexport default StatusChart;","/home/ubuntu/environment/jobslab-web/src/components/register/UploadCV.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/Competitiveness/CompetitivenessGauge.js",[],"/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/Competitiveness/Gauge.js",["3224","3225","3226","3227","3228","3229","3230","3231"],"import React, {Component, useLayoutEffect, useState } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {ResponsiveContainer} from 'recharts';\nimport Widget from \"components/Widget\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport CountUp from 'react-countup';\nimport ProgressBar from 'react-customizable-progressbar'\n\n\n\n\nclass Gauge extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 100,\n      percentage: 0,\n    }\n  }\n  \n  updateDimensions = () => {\n    var getWidth = document.getElementById('gauge_container').offsetWidth / 4;\n    console.log(\"working --- \", getWidth)\n    this.setState({ width: getWidth });\n  };\n  \n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n    setTimeout(() => {\n      this.setState({ percentage: this.props.profileScore });\n    }, 100);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n  \n  render() {\n    const radius = this.state.width;\n    const percent = this.state.percentage;\n    \n    const strokeWidth = radius * 0.2;\n    const innerRadius = radius - strokeWidth / 2;\n    \n    const circumference = innerRadius * 2 * Math.PI;\n    const arc = circumference * (360 / 360);\n    const dashArray = `${arc} ${circumference}`;\n    const transform = `rotate(270, ${radius}, ${radius})`;\n    \n    const percentNormalized = Math.min(Math.max(percent, 0), 100);\n    const offset = arc - (percentNormalized / 100) * arc;\n    \n    return (\n      <div>\n        <div className=\"d-flex\">\n            <h3 className=\"card-title mr-auto mb-1 mb-md-3\">Profile Completeness</h3>\n          </div>\n          <ResponsiveContainer id=\"gauge_container\" width=\"100%\" height=\"auto\" className=\"text-center ml-auto mr-auto my-3\">\n            {/*<CircularProgressbar value={percent} text={`${percent}%`} \n              styles={buildStyles({\n                rotation: 0,\n                strokeLinecap: 'round',\n                textSize: '13px',\n                pathTransition: 'stroke-dashoffset 1.5s ease 0s',\n                //pathTransitionDuration: 3.5,\n                // pathTransition: 'none',\n                pathColor: `#00bcd4`,\n                textColor: 'rgb(97 97 97)',\n                trailColor: '#00000014',\n                backgroundColor: '#000000',\n              })}\n            />*/}\n            <Box className=\"w-auto\" position=\"relative\" display=\"inline-flex\">\n            {/*<ProgressBar\n                progress={percent}\n                radius={100}\n                strokeColor=\"#00bcd4\"\n                transition=\"stroke-dashoffset 1.5s\"\n            />*/}\n            <svg width={radius * 2} height={radius * 2}>\n              <circle \n                class=\"gauge_base\"\n                cx={radius}\n                cy={radius}\n                fill=\"transparent\"\n                r={innerRadius}\n                stroke=\"#00000014\"\n                strokeWidth={strokeWidth}\n                strokeDasharray={dashArray}\n                transform={transform}\n                strokeLinecap=\"round\"\n              />‍\n              <circle \n                class=\"gauge_bar\"\n                cx={radius}\n                cy={radius}\n                fill=\"transparent\"\n                r={innerRadius}\n                stroke=\"#00bcd4\"\n                strokeWidth={strokeWidth}\n                strokeDasharray={dashArray}\n                strokeDashoffset={offset}\n                transform={transform}\n                strokeLinecap=\"round\"\n                style={{\n                  transition: \"stroke-dashoffset 1.5s\",\n                }}\n              />‍\n            </svg>\n            <Box\n                width={radius * 2}\n                height={radius * 2}\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <CountUp className=\"h1\" end={percent} delay={0.3} duration={2.5} suffix=\"%\"/>\n              </Box>\n              {/*<Box\n                top={radius * 0.04}\n                left={radius * 0.02}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n              >\n                <h5 variant=\"caption\" component=\"div\" color=\"textSecondary\">Competitiveness</h5>\n              </Box>*/}\n            </Box>\n          </ResponsiveContainer>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {profileScore } = state.auth;\n  return { profileScore }\n};\n\nexport default withRouter(connect(mapStateToProps)(Gauge));","/home/ubuntu/environment/jobslab-web/src/components/profile/Goal/index.js",["3232","3233","3234","3235"],"import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport Widget from \"components/Widget\";\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport GoalEdit from './GoalEdit';\r\n\r\nclass Goal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.isEdit)\r\n      this.setState({ isEdit: this.props.isEdit });\r\n  }\r\n  \r\n  editCancel = () => {\r\n    this.setState({ isEdit: false })\r\n  }\r\n  \r\n  render() {\r\n    const userRole = this.props.userRole;\r\n    const { goals } = this.props.candidateData;\r\n    const { getUserData } = this.props;\r\n    const { isEdit } = this.state;\r\n    \r\n    return (\r\n      <Widget styleName=\"jr-card-profile\">\r\n        <div className=\"d-flex\">\r\n          <h3 className=\"card-title mr-auto mb-1 mb-md-3\">Motivations</h3>\r\n          { (userRole==\"candidate\" || userRole==\"admin\") && !isEdit && \r\n            <IconButton className=\"icon-btn text-dark mt-n2 mr-n2\" onClick={() => this.setState({ isEdit: true })}>\r\n              <i class=\"zmdi zmdi-edit\"/>\r\n            </IconButton>\r\n          }\r\n        </div>\r\n        \r\n        { (userRole==\"candidate\" || userRole==\"admin\") && isEdit \r\n          ?\r\n          <GoalEdit candidateData={this.props.candidateData} cancel={this.editCancel} refresh={getUserData} />\r\n          :\r\n          <div>\r\n            <ul className=\"list-inline list-inline-3\">\r\n              {goals && goals.map((goal, index) =>\r\n                <li key={index} className=\"list-inline-item mr-0 mb-2\">\r\n                  <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\">{goal}</Button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        }\r\n      </Widget>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  requestInitUser,\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Goal));\r\n","/home/ubuntu/environment/jobslab-web/src/components/profile/Goal/GoalEdit.js",["3236"],"import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { requestInitUser } from 'actions/Auth';  \r\nimport * as notification from 'actions/Notification';\r\nimport {SPECIALITY_LENGTH} from 'constants/AutoSuggest';\r\n\r\nclass GoalEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      goals: [],\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.candidateData)\r\n      this.setState({\r\n        goals: this.props.candidateData.goals==null ? [] : this.props.candidateData.goals,\r\n      });\r\n  }\r\n  \r\n  autocompleteChange = (e, value, name) => {\r\n    //var name = e.target.id.split('-')[0];\r\n    this.setState({ [name]: value });\r\n  }\r\n  \r\n  editSave = () => {\r\n    const data = {\r\n      candId: this.props.candidateData && this.props.candidateData._id,//this.props.match.params.Id,\r\n      goals: this.state.goals.map(obj => obj.value),\r\n    };\r\n    axios.post('/api/candidates/set/profile/goal/update', data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        this.props.refresh();\r\n        //this.props.requestInitUser();\r\n        notification.success(\"Your Profile has been updated successfully.\");\r\n        this.props.cancel(); \r\n      }\r\n      else {\r\n        notification.error(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { goals } = this.state;\r\n    const { goalList } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <ul className=\"list-inline list-inline-3\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"goals\"\r\n            options={goalList}\r\n            getOptionLabel={option => option.label}\r\n            //value={language}\r\n            value={goalList.filter(item => (goals ? goals : []).find(i => i.value === item.value))}\r\n            autoHighlight={true}\r\n            blurOnSelect={'touch'}\r\n            filterSelectedOptions={true}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Career Goals\"\r\n                placeholder=\"\"\r\n                fullWidth\r\n              />\r\n            )}\r\n            onChange={(e, value) => this.autocompleteChange(e, value, 'goals')}\r\n          />  \r\n        </ul>\r\n        \r\n        <Button variant=\"contained\" className=\"mt-2 mr-2\" color=\"primary\" onClick={this.editSave}>Save</Button>\r\n        <Button className=\"mt-2 mr-2\" onClick={this.props.cancel}>Cancel</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { goalList } = state.list;\r\n  return { goalList };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  requestInitUser,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GoalEdit));\r\n","/home/ubuntu/environment/jobslab-web/src/app/candidate/CandidateJobAlert.js",["3237","3238","3239","3240","3241","3242","3243","3244"],"import React, {useState, useEffect, useCallback, useRef} from \"react\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Button, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\nimport axios from \"axios\";\nimport * as notification from 'actions/Notification';\n\nimport AlertTable from './AlertTable';\nimport DataTable from './DataTable';\n\nimport { VERTICAL_NAVIGATION } from 'constants/ActionTypes'\n\nexport default function CandidateJobAlert(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [state, setState] = useState({ jobAlertName: \"\", keyword: \"\", errorJobAlertName: false, errorKeyword: false, \n                                       errorIndustries: false, industriesSelected: [], isFormLoading: false, alertType: \"1\" });\n  const [jobAlertList, setJobAlertList] = useState([]);\n  const { updateHeaderStyle } = props;\n\n  //redux\n  const listLoading = useSelector(state => state.list.listLoading);\n  const industryList = useSelector(state => state.list && state.list.industryList ? state.list.industryList : []);\n  \n  \n  useEffect(() => {\n    updateHeaderStyle(VERTICAL_NAVIGATION, true);\n    initJobAlertData();\n  }, [updateHeaderStyle, listLoading]);\n  \n  var textboxBlur = (field) => {\n    setState(prevState => ({ ...prevState, [field]: true }));\n  }\n  \n  var textboxChange = (e) => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  }\n  \n  var autocompleteChange = (e, value, name) => {\n    setState(prevState => ({ ...prevState, [name]: value }));\n  }\n  var initJobAlertData = () => {\n    if(!listLoading && isLoading) \n    {\n      getJobAlertData();\n      setIsLoading(false);\n    }\n  }\n  \n  var getJobAlertData = () => {\n    axios.get('/api/candidates/get/jobalert')\n      .then(res => {\n        if (res.data.isSuccess) {\n          setJobAlertList(res.data.jobAlert);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n        //e.preventDefault();\n      });\n  }\n  \n  var clearForm = () => {\n    setState({ jobAlertName: \"\", keyword: \"\", errorJobAlertName: false, errorKeyword: false, \n               errorIndustries: false, industriesSelected: [], isFormLoading: false, alertType: \"1\" });\n  }\n  \n  var formSubmit = (e) => {\n    setState(prevState => ({ ...prevState, isFormLoading: true }));\n    //e.preventDefault();\n    var data = {\n      alertName : state.jobAlertName,\n      keywords : state.keyword,\n      industry : state.industriesSelected.map(obj => obj.value),\n      alertType : state.alertType\n    };\n    axios.post('/api/candidates/set/jobalert', data)\n      .then(resp => {\n        if(resp.data.isSuccess)\n        {\n          getJobAlertData();\n          notification.success(\"You have created job alert successfully.\");\n        }\n        else {\n          var msg = \"The action cannot be performed at the moment. Please try again later.\";\n          if(resp.data.msg) {\n            msg = resp.data.msg;\n          }\n          notification.error(msg);\n        }\n        setState(prevState => ({ ...prevState, isFormLoading: false }));\n      })\n  }\n  \n  return (\n    <div className=\"app-wrapper reactour-scroll\">\n\n      { isLoading ?\n        <div className=\"loader-view\"\n             style={{height: props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n          <CircularProgress/>\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n        </div> : \n        <div className=\"row\" style={{'justify-content': 'center'}}>\n          <Helmet>\n              <title>Job Alert | JobsLab</title>\n          </Helmet>\n         \n          \n          <div className=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12 mb-md-6 mb-4\">\n            <div className=\"row\">\n                <div className=\"col-12 mb-md-6 mb-4\">\n                    <TextField\n                      name=\"jobAlertName\"\n                      label=\"Job Alert Name\"\n                      fullWidth\n                      value={state.jobAlertName}\n                      onChange={textboxChange}\n                      onBlur={() => textboxBlur(\"errorJobAlertName\")}\n                      error={state.errorJobAlertName && state.jobAlertName==\"\"}\n                      helperText={!state.jobAlertName && \"Required\"}\n                    />\n                </div>\n                <div className=\"col-md-6 mb-md-6 mb-4\">\n                <Autocomplete\n                  multiple\n                  autoHighlight\n                  id=\"industryList\"\n                  options={industryList}\n                  getOptionLabel={option => option.label}\n                  value={state.industriesSelected}\n                  renderInput={params => (\n                    <TextField \n                      {...params} \n                      //variant=\"outlined\"\n                      label=\"Industries\" \n                      placeholder=\"\" \n                      fullWidth \n                      error={state.industriesSelected.length == 0 && state.errorIndustries}\n                      //error={!state.industriesSelected.length>0}\n                      helperText={!state.industriesSelected.length>0 && \"Requried\"}\n                    />\n                  )}\n                  onBlur={() => textboxBlur(\"errorIndustries\")}\n                  onChange={(e, value) => autocompleteChange(e, value, 'industriesSelected')}\n                />  \n              </div>\n              <div className=\"col-md-6 mb-md-6 mb-4\">\n                <FormControl component=\"fieldset\" >\n                  <FormLabel component=\"legend\">Alert Type</FormLabel>\n                  <RadioGroup row aria-label=\"alertType\" value={state.alertType} onChange={textboxChange} name=\"alertType\">\n                    <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"Daily\" />\n                    <FormControlLabel value=\"2\" control={<Radio color=\"primary\" />} label=\"Weekly\" />\n                    <FormControlLabel value=\"3\" control={<Radio color=\"primary\" />} label=\"Monthly\" />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n              <div className=\"col-12\">\n                    <TextField\n                      name=\"keyword\"\n                      label=\"Alert Keyword\"\n                      fullWidth\n                      value={state.keyword}\n                      onChange={textboxChange}\n                      onBlur={() => textboxBlur(\"errorKeyword\")}\n                      error={state.errorKeyword && state.keyword==\"\"}\n                      helperText={!state.keyword && \"Required\"}\n                    />\n              </div>\n              <div className=\"col-12\">\n                <Button variant=\"contained\" className=\"mt-1 mr-3 ml-auto\" color=\"primary\" onClick={clearForm} disabled={state.isFormLoading}>Clear</Button>\n                <Button variant=\"contained\" className=\"mt-1 mr-3 ml-auto\" color=\"primary\" onClick={formSubmit} disabled={state.isFormLoading}> {state.isFormLoading && <i className='fa fa-spinner fa-spin' />}Save</Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12 mb-md-6 mb-4\">\n            <DataTable jobAlertList={jobAlertList} />\n          </div>\n        </div>\n      }\n      </div>\n  );\n};","/home/ubuntu/environment/jobslab-web/src/app/candidate/AlertTable.js",["3245","3246","3247","3248","3249","3250"],"import React, {useState, useEffect, useCallback, useRef} from \"react\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(alertName, alertType, industries, keyword) {\n  return { alertName, alertType, industries, keyword };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst headCells = [\n  { id: 'alertName', numeric: false, disablePadding: true, label: 'Alert Name' },\n  { id: 'alertType', numeric: true, disablePadding: false, label: 'Alert Type' },\n  { id: 'industries', numeric: true, disablePadding: false, label: 'Industries' },\n  { id: 'keyword', numeric: true, disablePadding: false, label: 'Keyword' }\n ]\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Job Alert\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\n\nexport default function AlertTable(props) {\n  const { jobAlertList } = props;\n  \n  var createTableData = (data) =>{\n    if(data != null) {\n      var alertData = [];\n      data.forEach(jobAlert => {\n        alertData.push(createData(jobAlert.alertName, jobAlert.alertType||1, jobAlert.industry[0] && (jobAlert.industry[0].name || \"\"), jobAlert.keywords||\"\"))\n      })\n      setRows(alertData);\n    }\n  }\n\n  useEffect(() => {\n    if(jobAlertList.length > 0) {\n      createTableData(jobAlertList);\n    }\n  }, [jobAlertList]);\n  \n/*  var rows = [\n  //createData('Alert 1', 'Daily', 'Information Technology', 'CEO'),\n  //createData('Alert 2', 'Daily', 'Information Technology', 'Engineer'),\n  ];*/\n  \n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('alertName');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.alertName);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  \n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {console.log(rows)}\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  console.log(row);\n                  console.log(index);\n                  const isItemSelected = isSelected(row.alertName);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.alertName)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.alertName}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.alertName}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.alertType}</TableCell>\n                      <TableCell align=\"right\">{row.industries}</TableCell>\n                      <TableCell align=\"right\">{row.keyword}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}","/home/ubuntu/environment/jobslab-web/src/app/candidate/DataTable.js",["3251","3252","3253","3254","3255"],"import React, {useState, useEffect, useCallback, useRef} from \"react\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as notification from 'actions/Notification';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction createData(id, alertName, alertType, industries, keyword) {\n  return { id, alertName, alertType, industries, keyword };\n}\n\n\nexport default function DataTable(props) {\n  const { jobAlertList } = props;\n  const [rows, setRows] = useState([]);\n  const [deletedRows, setDeletedRows] = useState([]);\n  \n  const columns = [\n    //{ field: 'id', headerName: 'ID', width: 90 },\n    {\n      field: 'alertName',\n      headerName: 'Job Alert Name',\n      minWidth: 300,\n      editable: false,\n      hide: false,\n    },\n    {\n      field: 'alertType',\n      headerName: 'Job Alert Type',\n      minWidth: 300,\n      editable: false,\n      hide: false,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        if(params.value == 1) {\n          return \"Daily\";\n        } else if (params.value == 2) {\n          return \"Weekly\";\n        } else if (params.value == 3) {\n          return \"Monthly\";\n        } else {\n          return params.value;\n        }\n      }\n    },\n    {\n      field: 'industries',\n      headerName: 'Industries',\n      minWidth: 300,\n      editable: false,\n      hide: false,\n      renderCell: (params: GridValueFormatterParams) => {\n        return <div>{params.value.map(v => <Typography>{v.name}</Typography>)}</div>;\n        //var data = params.value.map(v => <div style={dis}>{v.name}</div>)\n        //return data;\n      }\n    },\n    {\n      field: 'keyword',\n      headerName: 'Keyword',\n      minWidth: 300,\n      editable: false,\n      hide: false,\n    },\n    {\n      field: 'btn',\n      width: 100,\n      editable: false,\n      hide: false,\n      sortable: false,\n      renderHeader: (params: GridColumnHeaderParams) => (\n        <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\" onClick={handleDelete}>\n              <DeleteIcon />\n            </IconButton>\n        </Tooltip>\n      ),\n    }\n  ];\n\n  var createTableData = (data) =>{\n    if(data != null) {\n      var alertData = [];\n      data.forEach(jobAlert => {\n        alertData.push(createData(jobAlert._id, jobAlert.alertName, jobAlert.alertType||1, jobAlert.industry, jobAlert.keywords||\"\"))\n      })\n      setRows(alertData);\n    }\n  }\n\n  var handleRowSelection = (items) => {\n    setDeletedRows([...deletedRows, ...rows.filter((r) => items.includes(r.id))]);\n  };\n  \n  var handleDelete = () => {\n    var data = {\n      jobAlerts : deletedRows.map(row => row.id)\n    };\n    axios.post('/api/candidates/delete/jobalert', data)\n      .then(resp => {\n        if(resp.data.isSuccess)\n        {\n          notification.success(\"You have deleted job alert successfully.\");\n          setRows(rows.filter((r) => deletedRows.filter((sr) => sr.id === r.id).length < 1));   \n        }\n        else {\n          notification.error(\"The action cannot be performed at the moment. Please try again later.\");\n        }\n      })\n  };\n  \n  \n  useEffect(() => {\n    if(jobAlertList.length > 0) {\n      createTableData(jobAlertList);\n    }\n  }, [jobAlertList]);\n  \n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        checkboxSelection\n        onSelectionModelChange={handleRowSelection}\n        disableColumnMenu\n      />\n    </div>\n    \n  );\n}","/home/ubuntu/environment/jobslab-web/src/components/dashboard/Candidate/JobAlertCard.js",[],"/home/ubuntu/environment/jobslab-web/src/components/Drift/index.js",[],"/home/ubuntu/environment/jobslab-web/src/app/general/HomeRemake.js",["3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport config from 'react-reveal/globals';\nimport PropTypes from \"prop-types\";\nimport { Helmet } from 'react-helmet';\nimport { detailCards, recentActivity } from \"./data\";\nimport IconWithTextCard from \"./IconWithTextCard\";\nimport Drift from \"components/Drift\";\n\nimport Button from '@material-ui/core/Button';\nimport { HORIZONTAL_NAVIGATION } from 'constants/ActionTypes'\nimport { WEB_IMAGE_URL, WEB_VIDEO_URL } from 'constants/PictureUrl';\n\nimport Beta from 'components/popup/Beta';\n\nconfig({ ssrFadeout: true });\n\nvar loop = [];\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeAnimation: false,\n      betaModalIsOpen: false,\n      activeSlide1: 1,\n      activeSlide2: 1,\n      carouselFade1: true,\n      carouselFade2: true,\n    }\n  }\n  componentDidMount() {\n    this.props.updateHeaderStyle(HORIZONTAL_NAVIGATION, true);\n\n    setTimeout(() => {\n      this.setState({ fadeAnimation: true });\n    }, 1000);\n    \n    loop[1] = setInterval(() => {this.carouselLoop(1)}, 5000);\n    loop[2] = setInterval(() => {this.carouselLoop(2)}, 5000);\n  }\n\n  componentWillUnmount() {\n  }\n\n  closeModal = (name) => {\n    this.setState({\n      [name]: false\n    });\n  }\n  \n  handleClick = (carousel, slide) => {\n    this.setState({ [\"carouselFade\"+carousel]: false });\n    setTimeout(() => {\n      if (loop[carousel]) clearInterval(loop[carousel]);\n      this.setState({ [\"activeSlide\"+carousel]: slide });\n      this.setState({ [\"carouselFade\"+carousel]: true });\n    }, 300);\n  };\n  \n  carouselLoop = (carousel) => {\n    this.setState({ [\"carouselFade\"+carousel]: false });\n    setTimeout(() => {\n    if (this.state[\"activeSlide\"+carousel] === 3) {\n     this.setState({...this.state,[\"activeSlide\"+carousel]:1});\n    } else {\n      this.setState((prev)=>({\n        [\"activeSlide\"+carousel]:prev[\"activeSlide\"+carousel]+1\n      }));\n    }\n      this.setState({ [\"carouselFade\"+carousel]: true });\n    }, 300);\n  }\n  \n\n  render() {\n    return (\n      <div className=\"home-wrapper\">\n          <Helmet>\n              <title>JobsLab</title>\n          </Helmet>\n          <div className=\"home-intro\">\n            \n            <Fade duration={2000}>\n              <div className=\"home-intro__textbox\">\n                <div className=\"container\">\n                  <h3 className=\"home-intro__title\">Experienced Hires Made Simple.</h3>\n                  <div className=\"button-sec responsive\">\n                    <Button variant=\"contained\" color=\"primary\" className=\"jr-btn jr-btn-slg home-blue-btn\" onClick={(e) => this.props.history.push(\"/joblist\")}>\n                      <font size=\"+1\">Find Jobs</font>\n                    </Button>\n                    <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-success text-white home-green-btn\" onClick={(e) => this.props.history.push(\"/employer\")}>\n                      <font size=\"+1\">Find Talent</font>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Fade>\n            \n            <div className=\"home-intro__bg\">\n              <img className=\"d-none d-lg-block\" src={encodeURI(WEB_IMAGE_URL+\"home/homepage-01.png\")}/>\n            </div>\n            \n            <div className=\"home-intro__sponsor\">\n              <p className=\"home-intro__text\">Powered by:</p>\n              <div className=\"home-intro__logo\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/cyberport.png\")}/>\n              </div>\n            </div>\n            \n          </div>\n          \n        <div className=\"home-carousel\">  \n          <div className=\"parallax-bg parallax-bg--macbook\"></div>\n            <div className=\"inner-wrapper\">\n              <Fade duration={1500} bottom>\n              <div className=\"home-carousel__section\">\n                <Fade duration={300} left distance=\"10px\" when={this.state.carouselFade1}>\n                {\n                this.state.activeSlide1 === 1 ? <img src={encodeURI(WEB_IMAGE_URL+\"home/banner01.png\")}/> :\n                this.state.activeSlide1 === 2 ? <img src={encodeURI(WEB_IMAGE_URL+\"home/banner01_carousel2.png\")}/> :\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/banner01_carousel3.png\")}/>\n                }\n                </Fade>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"home-carousel__section\">\n              \n                  <h3 className=\"home-carousel__slogan\">Get Matched, Get Hired</h3>\n                  <h3 className=\"home-carousel__slogan\">Finding A New Job Has Never Been Easier</h3>\n                  \n                  <button className={`home-carousel__item ${this.state.activeSlide1 === 1 ? \"active\" : \"\"}`} onClick={() => this.handleClick(1,1)}>\n                    <i className={`home-carousel__icon fas ${this.state.activeSlide1 === 1 ? \"fa-check-circle\" : \"fa-plus-circle\"}`}></i>\n                    <div className=\"home-carousel__content\">\n                      <p className=\"home-carousel__title\">Create your profile in seconds</p>\n                      <p className=\"home-carousel__desc\">Register on Jobslab in 20 seconds by uploading your CV on the system</p>\n                      <p className=\"home-carousel__desc d-none\">Complete your profile with a few simple click and out AI will generate the rest for you</p>\n                    </div>\n                  </button>\n                  \n                  <button className={`home-carousel__item ${this.state.activeSlide1 === 2 ? \"active\" : \"\"}`} onClick={() => this.handleClick(1,2)}>\n                    <i className={`home-carousel__icon fas ${this.state.activeSlide1 === 2 ? \"fa-check-circle\" : \"fa-plus-circle\"}`}></i>\n                    <div className=\"home-carousel__content\">\n                      <p className=\"home-carousel__title\">Automatically get matched with jobs</p>\n                      <p className=\"home-carousel__desc\">Once your profile is complete, our AI will recommend jobs for you so there is no need to keep searching for jobs</p>\n                      <p className=\"home-carousel__desc d-none\">Get notified about jobs that match your profile right away and apply with a simply click</p>\n                    </div>\n                  </button>\n                  \n                  <button className={`home-carousel__item ${this.state.activeSlide1 === 3 ? \"active\" : \"\"}`} onClick={() => this.handleClick(1,3)}>\n                    <i className={`home-carousel__icon fas ${this.state.activeSlide1 === 3 ? \"fa-check-circle\" : \"fa-plus-circle\"}`}></i>\n                    <div className=\"home-carousel__content\">\n                      <p className=\"home-carousel__title\">Get real-time updates & feedbacks</p>\n                      <p className=\"home-carousel__desc\">Get immediate updates from employers at every stage of the application process</p>\n                      <p className=\"home-carousel__desc d-none\">JobsLab keeps you continously informed about your application and the trends in the job market</p>\n                    </div>\n                  </button>\n                  \n              </div>\n              </Fade>\n            </div>\n          </div>\n          \n        <div className=\"home-carousel home-carousel--blue\">  \n          <div className=\"parallax-bg parallax-bg--team\"></div>\n            <div className=\"inner-wrapper\">\n              <Fade duration={1500} bottom>\n              <div className=\"home-carousel__section home-carousel__section--reversed\">\n                <h3 className=\"home-carousel__slogan\">Unlock a Great Job</h3>\n                <p className=\"home-carousel__title\">Reveal leading company names within your industry</p>\n                <div className=\"home-carousel__btn\">\n                  <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-white text-black\" onClick={(e) => this.props.history.push(\"/joblist\")}>\n                    <font size=\"+1\">Find Jobs</font>\n                  </Button>\n                </div>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"home-carousel__section\">\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/banner02-mobile.png\")} alt=\"\" />\n              </div>\n              </Fade>\n            </div>\n          </div>\n          \n          <div className=\"home-usage\">\n            <div className=\"parallax-bg parallax-bg--macbook\"></div>\n            <div className=\"inner-wrapper\">\n              <div className=\"home-usage__left\">\n              <Fade duration={1500} bottom>\n                <div className=\"home-usage__item\">\n                  <i className=\"fas fa-address-card mb-2\"></i>\n                  <h3 className=\"home-usage__head\">Generate a Winning Profile</h3>\n                  <p className=\"home-usage__desc\">Our system generates your profile in 20 seconds from your existing resume. Customize to suit or keep as is. Either way, you've got a great profile to land your next job.</p>\n                </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n                <div className=\"home-usage__item\">\n                  <i className=\"fas fa-user-tie mb-2\"></i>\n                  <h3 className=\"home-usage__head\">Your Personal Recruiter</h3>\n                  <p className=\"home-usage__desc\">Our AI works 24/7 to find the right job for you. Get notified about new jobs that are a good match right away. Receive recommendations from both our AI and our Career Experts.</p>\n                </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n                <div className=\"home-usage__item\">\n                  <i className=\"fas fa-clock mb-2\"></i>\n                  <h3 className=\"home-usage__head\">Real-Time Updates</h3>\n                  <p className=\"home-usage__desc\">No more waiting for updates. Get real-time updates from employers at every stage of the application process. Manage the process from your own personal career dashboard.</p>\n                </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n                <div className=\"home-usage__item\">\n                  <i className=\"fas fa-plane-departure mb-2\"></i>\n                  <h3 className=\"home-usage__head\">Get Rewarded</h3>\n                  <p className=\"home-usage__desc\">Take a Holiday on Us. Enjoy unique and exciting travel experiences via our partnership with Klook. Get rewarded for finding your next job with JobsLab.</p>\n                </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n                <div className=\"home-usage__item\">\n                  <i className=\"fas fa-user-friends mb-2\"></i>\n                  <h3 className=\"home-usage__head\">Refer a Friend</h3>\n                  <p className=\"home-usage__desc\">Share a great job and get rewarded for referring your friends and peers. Get rewarded automatically when your referrals land their new job.</p>\n                </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n                <div className=\"home-usage__item\">\n                  <i className=\"fas fa-chess mb-2\"></i>\n                  <h3 className=\"home-usage__head\">Jump Start Your Career</h3>\n                  <p className=\"home-usage__desc\">Benefit from exclusive articles, videos, interviews & more from our career experts and leading industry experts. Visit the JobsLab <a target=\"_blank\" href=\"https://blog.jobslab.io\">blog</a> today.</p>\n                </div>\n              </Fade>\n              </div>\n              <div className=\"home-usage__right\">\n              <Fade duration={1500} bottom>\n                <img className=\"home-usage__img\" src={encodeURI(WEB_IMAGE_URL+\"home/mockup3.png\")} alt=\"\" />\n                <h3 className=\"home-usage__slogan\">Beyond just jobs.</h3>\n                <p className=\"home-usage__desc\">We see beyond the profile to the individual.</p>\n              </Fade>\n              </div>\n            </div>\n          </div>\n        \n        <div className=\"home-carousel home-carousel--blue\">  \n          <div className=\"parallax-bg parallax-bg--successman\"></div>\n            <div className=\"inner-wrapper\">\n              <Fade duration={1500} bottom>\n              <div className=\"home-carousel__section\">\n                <Fade duration={300} left distance=\"10px\" when={this.state.carouselFade2}>\n                {\n                this.state.activeSlide2 === 1 ?\n                <div className=\"klook-button-sec\">\n                  <a target=\"_blank\" href=\"https://www.klook.com/zh-HK/?aid=14770&utm_medium=affiliate-alwayson&utm_source=non-network&utm_campaign=14770&utm_term=&utm_content=\">\n                    <div className=\"klook-photo\">\n                      <img src={encodeURI(WEB_IMAGE_URL+\"home/home-klook-white.png\")}/>\n                    </div>\n                    <div className=\"home-carousel__btn\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-slg bg-warning text-white\">\n                        <font size=\"+1\">See Our Latest Promotion</font>\n                      </Button>\n                    </div>\n                  </a>\n                </div> :\n                this.state.activeSlide2 === 2 ? <img src={encodeURI(WEB_IMAGE_URL+\"home/insurance-icon-white.png\")}/> :\n                <img src={encodeURI(WEB_IMAGE_URL+\"home/home-fps-white.png\")}/>\n                }\n                </Fade>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"home-carousel__section\">\n              \n                  <h3 className=\"home-carousel__slogan\">Get Rewarded, Get Paid</h3>\n                  <h3 className=\"home-carousel__slogan\">It Is Not Only About Finding Jobs</h3>\n                  \n                  <button className={`home-carousel__item ${this.state.activeSlide2 === 1 ? \"active\" : \"\"}`} onClick={() => this.handleClick(2,1)}>\n                    <i className={`home-carousel__icon fas ${this.state.activeSlide2 === 1 ? \"fa-check-circle\" : \"fa-plus-circle\"}`}></i>\n                    <div className=\"home-carousel__content\">\n                      <p className=\"home-carousel__title\">Get Access to Exclusive Rewards</p>\n                      <p className=\"home-carousel__desc d-none\">JobsLab partnered with Klook to offer you free holiday experiences when you successfully get your new job on JobsLab</p>\n                    </div>\n                  </button>\n                  \n                  <button className={`home-carousel__item ${this.state.activeSlide2 === 2 ? \"active\" : \"\"}`} onClick={() => this.handleClick(2,2)}>\n                    <i className={`home-carousel__icon fas ${this.state.activeSlide2 === 2 ? \"fa-check-circle\" : \"fa-plus-circle\"}`}></i>\n                    <div className=\"home-carousel__content\">\n                      <p className=\"home-carousel__title\">Get Exclusive Discount to Insurance</p>\n                      <p className=\"home-carousel__desc d-none\">JobsLab is partnering with a leading Virtual Insurance Company to offer discounted rates for our members to purchase insurance</p>\n                    </div>\n                  </button>\n                  \n                  <button className={`home-carousel__item ${this.state.activeSlide2 === 3 ? \"active\" : \"\"}`} onClick={() => this.handleClick(2,3)}>\n                    <i className={`home-carousel__icon fas ${this.state.activeSlide2 === 3 ? \"fa-check-circle\" : \"fa-plus-circle\"}`}></i>\n                    <div className=\"home-carousel__content\">\n                      <p className=\"home-carousel__title\">Refer Peers to Jobs & Receive Cash Rewards</p>\n                      <p className=\"home-carousel__desc d-none\">Receive cash rewards when you refer your peers to jobs on JobsLab and they successfully get hired</p>\n                    </div>\n                  </button>\n                  \n              </div>\n              </Fade>\n            </div>\n          </div>\n        \n        <div className=\"icon-list\">\n          <div className=\"parallax-bg parallax-bg--successman\"></div>\n          <div className=\"inner-wrapper\">\n            <div className=\"icon-list__head\">How It Works</div>\n            <div className=\"icon-list__side\">\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--lhs\">\n                <i className=\"la la-gift\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Get Rewarded</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Get your dream job and also get rewarded with a dream holiday when you get hired</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--lhs\">\n                <i className=\"la la-stack-exchange\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Confidentiality Guaranteed</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">We are fully GDPR compliant and your profile remains completely confidential and only shared with an employer when you apply for a role</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--lhs\">\n                <i className=\"la la-envelope\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Full Transparency</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Our easy to use dashboard is automatically updated with the latest status of your job application</p>\n      \t\t\t\t\t</div>\n              </div>\n              <div className=\"icon-list__item icon-list__item--lhs\">\n                <i className=\"la la-phone\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Talk to Professionals</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Our easy to use dashboard is automatically updated with the latest status of your job application</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n            </div>\n            <Fade duration={1500} bottom>\n            <div className=\"icon-list__middle\">\n              <img src={encodeURI(WEB_IMAGE_URL+\"home/how-iphone.png\")} alt=\"\" />\n            </div>\n            </Fade>\n            <div className=\"icon-list__side\">\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--rhs\">\n                <i className=\"la la-hand-pointer-o\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Apply Easily</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Create your profile in seconds and instantly get matched with great jobs by our AI</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--rhs\">\n                <i className=\"la la-clock-o\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Save Time</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Our AI works 24/7 to automatically match you with all relevant jobs so no need to waste time with reading hundreds of JDs and talking to headhunters</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--rhs\">\n                <i className=\"la la-lightbulb-o\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Salary Surveys</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Want to know if you are underpaid? Check our real-time salary surveys to see how you stack up in your industry</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n              <Fade duration={1500} bottom>\n              <div className=\"icon-list__item icon-list__item--rhs\">\n                <i className=\"la la-users\"></i>\n                <div className=\"icon-list__text\">\n                  <h3 className=\"icon-list__title\">Refer Your Contacts</h3>\n    \t\t\t\t\t\t\t<p className=\"icon-list__desc\">Have you ever seen a job posting that would be perfect for a friend? Simply refer them and get rewarded with up to HK$40,000 with they get hired</p>\n      \t\t\t\t\t</div>\n              </div>\n              </Fade>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"home-video\">\n          <div className=\"parallax-bg parallax-bg--desk\"></div>\n          <div className=\"inner-wrapper\">\n            <Fade duration={1500} cascade>\n            <h3 className=\"home-video__title\">Introducing JobsLab</h3>\n            <p className=\"home-video__desc\">Matching exceptional people with amazing jobs. Watch our brand video.</p>\n            <div className=\"home-video__video\">\n              <div className=\"placeholder placeholder--landscape\">\n                <div className=\"placeholder__item\">\n                  <iframe src=\"https://www.youtube.com/embed/XLkDYdppMOA\"></iframe>\n                </div>\n              </div>\n            </div>\n            </Fade>\n          </div>\n        </div>\n        \n        <div className=\"company-logo\">\n          <div className=\"parallax-bg parallax-bg--desk\"></div>\n          <div className=\"inner-wrapper\">\n            <Fade duration={1500} cascade>\n            <div className=\"company-logo__list\">\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/AWS_logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Google_logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/KLOOK_LOGO.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/LinkedIn_Logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Microsoft_logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Zoom-Logo.png\")}/></div>\n              <div className=\"company-logo__title\"><p className=\"text-uppercase\">Career Expert Insights from Top Companies</p></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/Citi_Logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/GS_Logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/hsbc-logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/ICBC_logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/morgan-stanley-logo.png\")}/></div>\n              <div className=\"company-logo__item\"><img src={encodeURI(WEB_IMAGE_URL+\"logo/ubs-logo.png\")}/></div>\n            </div>\n            </Fade>\n          </div>\n        </div>\n  \n\n        <Drift appId=\"7wn228ik2p99\" />\n        <Beta isOpen={this.state.betaModalIsOpen} closeModal={() => this.closeModal('betaModalIsOpen')}/>\n        \n      </div>\n    )\n  }\n}\nexport default withRouter(Home);\n","/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/index.js",["3285","3286","3287","3288","3289"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CmtCard from '../@coremat/CmtCard';\r\nimport CmtCardHeader from '../@coremat/CmtCard/CmtCardHeader';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CmtCardContent from '../@coremat/CmtCard/CmtCardContent';\r\nimport ClientApplicantTable from './ClientApplicantTable';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nconst useStyles = theme => ({\r\n  cardRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      '& .Cmt-header-root': {\r\n        flexDirection: 'column',\r\n      },\r\n      '& .Cmt-action-default-menu': {\r\n        marginLeft: 0,\r\n        marginTop: 10,\r\n      },\r\n    },\r\n  },\r\n  cardContentRoot: {\r\n    padding: 0,\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n  },\r\n});\r\n\r\nclass ClientApplicantList extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n      }\r\n  }\r\n  \r\n  componentDidMount() {\r\n  }\r\n  \r\n  render() {\r\n    const classes = this.props;\r\n    return(\r\n      <CmtCard className={classes.cardRoot}>\r\n     {/*      <CmtCardHeader\r\n          className=\"pt-4\"\r\n          title=\"Recent Payments\"\r\n          titleProps={{\r\n            variant: 'h4',\r\n            component: 'div',\r\n          }}>\r\n          <Box clone>\r\n            <Button color=\"primary\">\r\n              <AddIcon />\r\n              <Box component=\"span\" ml={2}>\r\n                Add New\r\n              </Box>\r\n            </Button>\r\n          </Box>\r\n        </CmtCardHeader>*/}\r\n        <CmtCardContent className={classes.cardContentRoot}>\r\n          <PerfectScrollbar className={classes.scrollbarRoot}>\r\n            <ClientApplicantTable applicantList={this.props.applicantList} />\r\n          </PerfectScrollbar>\r\n        </CmtCardContent>\r\n      </CmtCard>\r\n    )\r\n }\r\n  \r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(ClientApplicantList);","/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/TableHeading.js",[],"/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/TableItem.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/CmtCardHeader.js",["3290","3291"],"import React, { useEffect, useImperativeHandle, useLayoutEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, IconButton } from '@material-ui/core';\r\n\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport useStyles from './CmtCardHeader.style';\r\nimport clsx from 'clsx';\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst ActionsMenu = ({ actions, actionHandler, icon }) => {\r\n  return (\r\n    <CmtDropdownMenu\r\n      TriggerComponent={<IconButton size=\"small\">{icon || <MoreVertIcon />}</IconButton>}\r\n      items={actions}\r\n      onItemClick={actionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nconst CmtCardHeader = React.forwardRef(function CmtCardHeader(props, ref) {\r\n  const {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n    actions,\r\n    actionMenuClassName,\r\n    actionHandleIcon,\r\n    actionHandler,\r\n    actionsPos,\r\n    actionsShowOnHover,\r\n    backgroundColor,\r\n    gradientDirection,\r\n    separator,\r\n    alignCenter,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator);\r\n  const contentRef = React.createRef();\r\n  const [showActions, setActionsVisibility] = useState(false);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const contentHeadProps = {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n  };\r\n\r\n  const classes = useStyles({ separatorStyles, contentWidth });\r\n  let showHideActionClass = showActions ? classes.showActionMenu : classes.hideActionMenu;\r\n  if (actionsPos === 'default') {\r\n    showHideActionClass = showActions ? classes.showActionDefaultMenu : classes.hideActionDefaultMenu;\r\n  }\r\n\r\n  const headerRootClasses = alignCenter\r\n    ? clsx(className, classes.headerRoot, classes.headerAlignCenter, separator.color ? 'Cmt-separator' : '')\r\n    : clsx(className, classes.headerRoot, separator.color ? 'Cmt-separator' : '');\r\n\r\n  const menuRootClasses = actionsShowOnHover\r\n    ? clsx(classes.actionMenu, classes.actionMenuHover, 'Cmt-action-menu-hover', showHideActionClass, actionMenuClassName)\r\n    : clsx(classes.actionMenu, 'Cmt-action-menu', actionMenuClassName);\r\n  const menuRootActionsClasses = actionsShowOnHover\r\n    ? actionsPos === 'default'\r\n      ? classes.actionMenuDefault\r\n      : ''\r\n    : classes.actionMenuDefault;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onHeaderMouseEntered: () => {\r\n      setActionsVisibility(true);\r\n    },\r\n    onHeaderMouseLeft: () => {\r\n      setActionsVisibility(false);\r\n    },\r\n  }));\r\n\r\n  const windowSized = () => {\r\n    if (contentRef.current) setContentWidth(contentRef.current.clientWidth);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('resize', windowSized);\r\n    windowSized();\r\n    return () => window.removeEventListener('resize', windowSized);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    windowSized();\r\n  }, [actionsPos, actionsShowOnHover]);\r\n\r\n  return (\r\n    <Box className={clsx(headerRootClasses, 'Cmt-header-root')} style={backgroundStyles} {...rest}>\r\n      <React.Fragment>\r\n        {(icon || avatar || title || subTitle) && (\r\n          <CmtContentHead titleStyle={classes.titleStyle} subTitleStyle={classes.subTitleStyle} {...contentHeadProps} />\r\n        )}\r\n      </React.Fragment>\r\n\r\n      {(actions.length > 0 || children) && (\r\n        <Box ref={contentRef} className={clsx(menuRootActionsClasses, 'Cmt-action-default-menu')}>\r\n          {children}\r\n          {actions.length > 0 && (\r\n            <Box ml={2} className={menuRootClasses}>\r\n              <ActionsMenu actions={actions} actionHandler={actionHandler} icon={actionHandleIcon} />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n});\r\n\r\nCmtCardHeader.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actions: PropTypes.array, //example: [{label: \"Close\", icon: \"icon-slug\", onClick: (func optional), ...}, ...]\r\n  actionMenuClassName: PropTypes.string,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionsPos: PropTypes.oneOf(['default', 'top-corner']),\r\n  actionsShowOnHover: PropTypes.bool,\r\n  actionHandler: PropTypes.func,\r\n  alignCenter: PropTypes.bool,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtCardHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  actions: [],\r\n  actionsPos: 'default',\r\n  actionsShowOnHover: false,\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n  alignCenter: false,\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n  className: '',\r\n};\r\n\r\nexport default CmtCardHeader;\r\n","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/CmtCardContent.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtCard/CmtCardHeader.style.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtHelpers/JssHelper.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtDropdownMenu/index.js",["3292"],"import React, { useState } from 'react';\r\nimport { Box, Menu, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CmtDropdownMenu = ({ TriggerComponent, items, onItemClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuItems, setMenuItems] = useState(items);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const openMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (item, selectedIndex) => {\r\n    let updatedItem = { ...item };\r\n\r\n    if (item.onClick && typeof item.onClick === 'function') {\r\n      updatedItem = item.onClick(item);\r\n    } else if (onItemClick && typeof onItemClick === 'function') {\r\n      updatedItem = onItemClick(item);\r\n    }\r\n\r\n    setMenuItems(\r\n      menuItems.map((item, index) => {\r\n        if (updatedItem && selectedIndex === index) {\r\n          item = updatedItem;\r\n        }\r\n        return item;\r\n      }),\r\n    );\r\n\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box className=\"pointer\">\r\n        <TriggerComponent.type {...TriggerComponent.props} onClick={openMenu} />\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n        {menuItems.map((item, index) => {\r\n          return (\r\n            <MenuItem key={index} disabled={item.disabled} onClick={() => handleMenuItemClick({ ...item }, index)}>\r\n              {item.icon}\r\n              <Box ml={2}>{item.label}</Box>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCmtDropdownMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  TriggerComponent: PropTypes.element.isRequired,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nexport default CmtDropdownMenu;\r\n","/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/CmtContentHead/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/CmtTitle/index.js",[],["3293","3294"],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtTypography/CmtSubTitle/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtObjectSummary/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtAvatar/index.js",[],"/home/ubuntu/environment/jobslab-web/src/components/@coremat/CmtAvatar/index.style.js",[],"/home/ubuntu/environment/jobslab-web/src/components/ClientApplicantList/ClientApplicantTable.js",[],"/home/ubuntu/environment/jobslab-web/src/components/popup/ClientCandidateList/index.js",["3295","3296","3297","3298","3299","3300","3301","3302","3303","3304","3305","3306","3307","3308","3309","3310"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport modalStyle from 'styles/modalStyle';\nimport Widget from \"components/Widget\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport axios from \"axios\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport { numberWithCommas } from 'util/functions.js';\n\nimport moment from \"moment\";\n\nimport ClientApplicantList from 'components/ClientApplicantList';\n\nimport CandidateListCard from 'components/popup/Client/CandidateListCard';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\n\nclass ClientCandidateList extends Component {\n     constructor(props) {\n      super(props);\n      this.state = {\n        application_list: [],\n        loader: true,\n        \n        hasMore: true,\n        noRecordFound: false,\n    \t  pageSize: 20,\n    \t  pageNum: 1,\n    \t  pageReady: false,\n    \t  activeCandidate: null,\n    \t  activeJob: this.props.jobId,\n    \t  //for filter\n    \t  similarity: { min: 0, max: 100 },\n    \t  experience: { min: 0, max: 50 },\n        recommendedCandidate: false,\n        appStateList: [],\n        searchText: \"\",\n        //checkedItemsAppStat: new Map(),\n        appStateSelected : [],\n      }\n  }\n  \n  componentDidMount() {\n    this.state.pageReady = true;\n    this.getMoreCandidate();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeJob !== this.state.activeJob) {\n      this.setState({\n        activeJob : this.state.activeJob\n      });\n      if(this.state.activeJob) {\n        this.getMoreCandidate(); \n      }\n    }\n  }\n  \n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.jobId!==prevState.activeJob){\n      return {activeJob : nextProps.jobId};\n    }\n    else return null;\n  }\n\n  getMoreCandidate = () => {\n    if(this.state.pageReady && this.props.jobId && this.state.hasMore)\n    {\n       var appStat = \"\"\n      this.state.appStateSelected.forEach(function(object) {\n        if(object.value)\n          appStat += object.value + \",\";\n      });\n      \n      if(appStat.length>0)\n        appStat = appStat.substr(0, appStat.length-1); \n        \n      axios.post('/api/clients/get/application/list',{\n        jobId: this.props.jobId,\n        pageNum: 0,//this.state.pageNum,\n        recordNum: 99999,//this.state.recordNum,\n        //new\n        //searchData: this.state.searchText,\n        //minSimilarity: this.state.similarity.min,\n        //maxSimilarity: this.state.similarity.max,\n        //minExperience: this.state.experience.min,\n        //maxExperience: this.state.experience.max,\n        //appStat: appStat,\n        //recommendedCandidate: this.state.recommendedCandidate,\n      }) \n        .then(res => {\n          if (res.data.isSuccess) {\n            this.setState({\n                application_list:  this.state.application_list.concat(res.data.app_list),\n                hasMore: (res.data.hasMore == true)? true : false,\n                pageNum: this.state.pageNum + 1\n            });\n \n            //if records are not returned\n            if(!this.state.lastUserId)\n            {\n                 this.setState({ noRecordFound:true });\n            }\n          } \n          else {\n            this.setState({\n                hasMore: false,\n            });\n          }\n          this.setState({ loader: false });\n        })\n        .catch(function (err) {\n          //console.log(err);\n        });   \n      \n    }\n  }\n  closeForm = () => {\n    this.props.closeModal('applicationListOpen');\n    this.resetForm();\n  }\n  \n  resetForm = () => {\n    this.setState({\n      application_list: [],\n      activeCandidate: \"\",\n      hasMore: true,\n      noRecordFound: false,\n  \t  pageNum : 1,\n  \t  loader: true\n    })\n  }\n  \n  viewApplcation = (application) => {\n    var applicationId = (application != null) ? application : \"\";\n    if(applicationId)\n      window.open(\"/application/\"+applicationId, \"_blank\");\n    else\n      alert(\"Application data error!\");\n  }\n  \n  viewProfile = (application) => {\n    if (this.props.userType==\"admin\") {\n      window.open(\"/resume/\"+application.candidate._id._id, \"_blank\");\n    }\n    else {\n      var applicationId = (application != null) ? application : \"\";\n      if(applicationId)\n        window.open(\"/resume/\"+applicationId, \"_blank\");\n      else\n        alert(\"Candidate data error!\");\n    }\n  }\n  \n  updateCheckList = (list, key) => {\n   var gotList = this.state[list];\n   if(gotList)\n   {\n      if(gotList.has(key))\n        gotList.set(key,!gotList.get(key));\n      else\n         gotList.set(key,true);\n         \n      this.setState({\n         [list] : gotList\n      })\n   }\n }\n \n \n searchApplication = (e) => {\n   this.resetForm();\n   this.closeModal('showFilterPopup');\n   this.getMoreCandidate();\n\n  }\n  \n  handlePropChange = (key) => {\n   var prop = this.state[key];\n    this.setState({\n       [key] : !prop\n    })\n }\n \n inputRangeChanged = (name, value) => {\n    this.setState({\n      [name]: value\n    });\n  }\n  \n  clearFilter = () => {\n  \n    this.setState({\n      //checkedItemsAppStat: new Map(),\n      industrySelected : [],\n      appStateSelected : [],\n      similarity: { min: 0, max: 100 },\n      experience: { min: 0, max: 50 },\n      searchText : \"\",\n      recommendedCandidate: false\n    });\n  }\n  \n  selectSearchText(text, name){\n     this.setState({\n      [name]: text,\n    });\n  }\n  \n  updateSearchText(e) {\n    this.setState({\n      searchText: e.target.value,\n    });\n  }\n  \n  autocompleteChange = (e, value, name) => {\n    this.setState({ [name]: value });\n  }\n  \n  openModal = (e) => {\n    e.preventDefault();\n    this.setState({showFilterPopup: true});\n  }\n  \n  closeModal = (name) => {\n    this.setState({ [name]: false });\n  }\n \n  render() {\n    const { userType, isOpen } = this.props;\n    const { loader } = this.state;\n\n    /*var items = [];\n    this.state.application_list.map((application, i) => {\n      items.push(\n                  <StyledTableRow key='1'>\n                    <StyledTableCell align=\"center\">{application && application.updatedAt ?  moment(application.updatedAt).format(\"YYYY/MM/DD\") :\"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\"><a target='_blank' href={\"/resume/\"+ (userType==\"admin\" ? application.candidate._id._id : application._id)}>{application && application.candidate && application.candidate._id && application.candidate._id.name ? \n                      application.candidate._id.name.firstName + \" \" + application.candidate._id.name.lastName\n                     :\"\"}</a>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {application && application.candidate && application.candidate.salary ? \"$\"+numberWithCommas(application.candidate.salary) :\"\"}<br/>\n                      {application && application.candidate && application.candidate.experience ? application.candidate.experience+\" Yr\" :\"\"}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {application.sim && application.sim.score ? Math.round(application.sim.score*100)+'%' : '0%'}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && application.state ? application.state : \"\"}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && <TrueFalseIcon checker={application.referral} /> }</StyledTableCell>\n                    <StyledTableCell align=\"center\">{application && <TrueFalseIcon checker={application.isCvSent} /> }\n                    </StyledTableCell>\n                    {/*<StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewProfile(application && application._id ? application._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>*\n                    <StyledTableCell align=\"center\">\n                      <Button variant=\"contained\" className=\"jr-btn jr-btn-lg bg-white\"\n                        onClick={() => this.viewApplcation(application && application._id ? application._id : \"\")}>\n                          View\n                      </Button>\n                    </StyledTableCell>\n                  </StyledTableRow>\n      )\n    });*/\n    \n    return (\n        <Dialog open={isOpen} onClose={()=>this.closeForm()} scroll={'body'} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n          <DialogContent className=\"candidate-popup-content\" id=\"application-list\">  \n            <div className=\"mb-3\">\n              <h3 className=\"card-title mb-2 mb-md-3 font-weight-bold\">Candidate List <span className=\"close-popup\" onClick={()=>this.closeForm()}><i className=\"la la-close\"></i></span></h3>\n            </div>\n            {/*<div className=\"col-xl-4 col-lg-4 col-md-4 col-4 mb-4\">\n                  <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\"\n                        onClick={(e) => this.openModal(e)}>\n                    <font size=\"+1\">Filter</font>\n                  </Button>\n            </div>  */}\n            \n            {loader ?\n              <div className=\"loader-view\"\n                   style={{height: 'calc(20vh)', width: 'calc(35vw)'}}>\n                <CircularProgress/>\n              </div> : \n                <CandidateListCard\n                  hasMore={this.state.hasMore}  \n                  loadAllMore={this.getMoreCandidate.bind(this)}  \n                  applicantList={this.state.application_list} />\n              //another view\n              /*<ClientApplicantList applicantList={this.state.application_list} />*/\n            }\n          </DialogContent>\n        </Dialog>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { userType } = state.auth;\n  return { userType };\n}\n\nexport default connect(mapStateToProps, null)(ClientCandidateList);","/home/ubuntu/environment/jobslab-web/src/components/popup/Client/CandidateListCard/index.js",["3311","3312","3313","3314","3315","3316","3317","3318"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport CandidateListItem from \"./CandidateListItem\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { WEB_IMAGE_URL } from 'constants/PictureUrl';\r\n\r\nimport { arraySortByDate } from 'actions/Function.js';\r\n\r\nclass CandidateListCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: '0'\r\n    }\r\n  };\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const applicantList = this.props.applicantList;\r\n    \r\n    const loaderComponent = <div className=\"loader\" key={0} style={{padding: \"30px 0px\"}}>Loading ...</div>;\r\n    \r\n    var candidateItems = [];\r\n    applicantList.map((obj, i) => {\r\n      candidateItems.push(\r\n          <CandidateListItem key={obj._id} data={obj} tab={this.state.activeTab}/>\r\n      )\r\n    });\r\n    \r\n    return (\r\n      <Widget>\r\n        <div className=\"jr-news-action jr-tabs-classic jr-tabs-classic-no-border\">\r\n          <CustomScrollbars className=\"scrollbar\" style={{height: 350}}>\r\n            <TabContent style={{'width': '95%'}} className=\"jr-tabs-content\" activeTab={this.state.activeTab}>\r\n              <TabPane id=\"inif-container-candidateListCard-tab0\" tabId=\"0\">\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.props.loadAllMore}\r\n                    hasMore={this.props.hasMore ? true : false}\r\n                    loader={loaderComponent}\r\n                    useWindow={false}\r\n                    getScrollParent={() => document.getElementById('inif-container-candidateListCard-tab0')}\r\n                  >\r\n                    {candidateItems}\r\n                </InfiniteScroll>\r\n                {\r\n                  candidateItems.length <= 0 ?\r\n                      <div className=\"recordNotFound\" style={{height:'270px'}}>\r\n                      <img src={encodeURI(WEB_IMAGE_URL+\"candidate/dashboard/recommended_job.png\")}/>\r\n                        <span>\r\n                            <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            &nbsp; New candidates are found - check back soon.\r\n                        </span> \r\n                      </div>\r\n                    : \"\"\r\n                }\r\n              </TabPane>\r\n            </TabContent>\r\n          </CustomScrollbars>\r\n        </div>\r\n      </Widget>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CandidateListCard;\r\n","/home/ubuntu/environment/jobslab-web/src/components/popup/Client/CandidateListCard/CandidateListItem.js",["3319","3320","3321","3322"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { numberWithCommas } from 'actions/Function.js';\r\nimport { INDUSTRY_ICON_URL, COMPANY_ICON_URL } from 'constants/PictureUrl';\r\n\r\n\r\nfunction CandidateListItem({data, tab}) {\r\n  //const { _id , image, name , salary , year , jobTitle , company , industry , location } = data;\r\n  const { candidate, state, updatedAt, jobInfo } = data;\r\n  const { _id , salary , experience , jobTitle , company , industry} = candidate ? candidate : {};\r\n  \r\n  return (\r\n    <div className=\"media jr-featured-item\">\r\n      {/*isFeatured === true ? <span color=\"orange\"><span className=\"text-uppercase\">featured</span></span> : null*/}\r\n      <div className=\"unlock-margin-resp jr-featured-thumb \" style={{maxWidth: '80px'}}>\r\n        <img className=\"rounded-lg\" src={_id ? _id.pictureUrl : \"\"} alt=\"...\" />\r\n      </div>\r\n      <div className=\"media-body jr-featured-content unlock-center-resp margin-top-resp\">\r\n        <div className=\"jr-featured-content-left\">\r\n          {\r\n            state && state[0] && state[0].toLowerCase().includes(\"reject\") ?\r\n              <span className=\"jr-tag text-uppercase bg-danger d-inline-block\" color=\"#f44336\">{state && state[0]}</span>\r\n            : <span className=\"jr-tag text-uppercase bg-blue-popup-status d-inline-block\" color=\"#3f51b5\">{state && state[0]}</span>\r\n          }\r\n          <Link to={\"/application/\"+data._id}><h3 className=\"mb-1\">{_id && _id.name ? _id.name.firstName + \" \" + _id.name.lastName : \"No Name Provided\"}</h3></Link>\r\n  \r\n          <p className=\"text-grey mb-1\">{jobTitle ? jobTitle : \"N/A\"} at {company ? company : \"N/A\"}</p>\r\n  \r\n          <div className=\"d-flex flex-wrap dashboard-center-resp\" style={{\"max-width\":\"550px\"}}>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Industry:</span> {industry ? industry.name : \"N/A\"}</p>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Monthly Salary:</span> {salary}</p>\r\n            <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Year of Experience:</span> {experience}</p>\r\n          </div>\r\n          <p className=\"mr-3 mb-1\"><span className=\"text-grey\">Last Updated:</span> {updatedAt && moment(updatedAt).format(\"YYYY/MM/DD\")}</p>\r\n          <div className=\"d-flex flex-row\">\r\n            {/*<p className=\"text-grey mb-1\">\r\n              <i className={`zmdi zmdi-account jr-fs-lg mr-2 d-inline-block align-middle`}/>{name}\r\n            </p>\r\n            <p className=\"text-grey ml-4 mb-1\">\r\n            <p className=\"text-grey mb-1\">\r\n              <i className={`zmdi zmdi-calendar-alt jr-fs-lg mr-2 d-inline-block align-middle`}/>{moment(createdAt).format(\"YYYY/MM/DD\")}\r\n            </p>*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"jr-featured-content-right\">\r\n          <div className=\"unlock-center-resp pt-5\">\r\n          <Link to={\"/application/\"+data._id}><span>Application Detail</span> <i\r\n            className={`zmdi zmdi-long-arrow-right jr-fs-xxl ml-2 d-inline-block align-middle`}/></Link>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateListItem;\r\n","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/index.tsx",[],["3323","3324"],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/ultis.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/Header/index.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/Header/index.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSearch/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionWithholding/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSummary/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionCompareAverageTax/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTaxPerIncome/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionEurope/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNorthAmerica/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAsiaPacific/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionLatinAmerica/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAfrica/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionMiddleEast/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNote/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTheTaxberg/index.tsx",["3325"],"import React from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { useHistory } from \"react-router-dom\";\nimport { FIND_COUNTRY } from \"../constants\";\nimport useStyles from \"./styles\";\n\nconst SectionTheTaxberg = (props: any) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const queryString = require(\"query-string\");\n  const parsed = queryString.parse(history.location.search);\n  const { dataRender, paramsSearch, currencyUnit } = props;\n  const real_tax_rate =\n    ((Number(dataRender?.total_tax) + Number(dataRender?.mpf)) /\n      Number(dataRender?.salary)) *\n    100;\n\n  const real_tax_rate_is_actually =\n    Math.abs(real_tax_rate - Number(dataRender.average_tax_rate)) < 0.01\n      ? 0\n      : Math.abs(real_tax_rate - Number(dataRender.average_tax_rate));\n\n  return (\n    <section className={styles.sectionTheTaxberg}>\n      <div className={styles.titleSection}>The Taxberg</div>\n      <div className={styles.taxBergHolder}>\n        <div className={styles.taxBergCloudLeft}>\n          <img src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/taxCalculator/cloud_left.png\" alt=\"\" />\n        </div>\n        <div className={styles.taxBergCloudRight}>\n          <img src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/taxCalculator/cloud_right.png\" alt=\"\" />\n        </div>\n\n        <div className={styles.taxBergFrame}>\n          {!!dataRender?.net_pay && (\n            <div\n              className={styles.taxBergDash}\n              style={{\n                bottom: `calc(24% - ${Number(\n                  dataRender.average_tax_rate <= 100\n                    ? dataRender.average_tax_rate\n                    : 100\n                )}px + 230px)`,\n              }}\n            >\n              <div className={styles.taxBergDotsContainer}>\n                <div className={styles.taxBergDots}></div>\n              </div>\n            </div>\n          )}\n\n          {!!dataRender?.net_pay && (\n            <div\n              className={\n                styles.taxBergTextHolder + \" \" + styles.taxBergTaxTextDark\n              }\n              style={{\n                bottom: `calc(24% - ${Number(\n                  dataRender.average_tax_rate <= 100\n                    ? dataRender.average_tax_rate\n                    : 100\n                )}px - 30px  + 230px)`,\n                right: 30,\n              }}\n            >\n              <NumberFormat\n                className={styles.taxBergTaxText}\n                value={dataRender?.net_pay}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={currencyUnit}\n                decimalScale={0}\n              />\n              <div className={styles.taxBergSubTitle}>Net pay</div>\n            </div>\n          )}\n\n          {dataRender?.total_tax > 0 && (\n            <div\n              className={styles.taxBergDash}\n              style={{\n                bottom: `calc(24% - ${Number(\n                  dataRender.average_tax_rate <= 100\n                    ? dataRender.average_tax_rate\n                    : 100\n                )}px + 130px)`,\n              }}\n            >\n              <div className={styles.taxBergDotsContainer}>\n                <div className={styles.taxBergDots}></div>\n              </div>\n            </div>\n          )}\n\n          {dataRender && (\n            <div\n              className={styles.taxBergTextHolder}\n              style={{\n                bottom: `calc(24% - ${Number(\n                  dataRender.average_tax_rate <= 100\n                    ? dataRender.average_tax_rate\n                    : 100\n                )}px - 30px  + 130px)`,\n                right: 30,\n              }}\n            >\n              <NumberFormat\n                className={styles.taxBergTaxText}\n                value={dataRender?.total_tax}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={currencyUnit}\n                decimalScale={0}\n              />\n              <div className={styles.taxBergSubTitle}>Tax you pay</div>\n            </div>\n          )}\n\n          {dataRender?.mpf > 0 && (\n            <div\n              className={styles.taxBergDash}\n              style={{\n                bottom: `calc(24% - ${Number(\n                  dataRender.average_tax_rate <= 100\n                    ? dataRender.average_tax_rate\n                    : 100\n                )}px + 30px)`,\n                right: \"auto\",\n                left: \"38%\",\n                transform: \"translate(-38%, 0)\",\n              }}\n            >\n              <div\n                className={styles.taxBergDotsContainer}\n                style={{\n                  left: \"auto\",\n                  right: -10,\n                  float: \"right\",\n                }}\n              >\n                <div className={styles.taxBergDots}></div>\n              </div>\n            </div>\n          )}\n\n          {dataRender?.mpf > 0 && (\n            <div\n              className={styles.taxBergTextHolder + \" \" + styles.empPayText}\n              style={{\n                bottom: `calc(24% - ${Number(\n                  dataRender.average_tax_rate <= 100\n                    ? dataRender.average_tax_rate\n                    : 100\n                )}px)`,\n                left: 30,\n              }}\n            >\n              <NumberFormat\n                className={styles.taxBergTaxText}\n                value={dataRender?.mpf}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={currencyUnit}\n                decimalScale={0}\n              />\n              {currencyUnit === \"HK$\" && (\n                <div className={styles.taxBergSubTitle}>\n                  MPF the employer pays\n                </div>\n              )}\n            </div>\n          )}\n\n          <div\n            className={styles.taxBergIceImg}\n            style={{\n              bottom: `${\n                dataRender.average_tax_rate\n                  ? `calc(24% - ${Number(dataRender.average_tax_rate)}px)`\n                  : \"calc(30%)\"\n              }`,\n            }}\n          >\n            <div className={styles.taxBergBoat}>\n              <img\n                className={styles.taxBergFlag}\n                src={`https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/taxCalculator/flags_16/${\n                  FIND_COUNTRY.find(\n                    (i) => i.name === (parsed.country || \"Hong Kong\")\n                  )?.acronym\n                }.png`}\n                alt=\"\"\n              />\n              <img src=\"https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/taxCalculator/iceberg3.png\" alt=\"\" />\n            </div>\n          </div>\n\n          <div className={styles.taxBergWaterTop}></div>\n          <div\n            className={styles.taxBergWaterMiddle}\n            style={{ bottom: `0` }}\n          ></div>\n        </div>\n        <div className={styles.taxBergWaterBottom}></div>\n\n        <div className={styles.totalTax}>\n          <div className={styles.totalTaxTex}>\n            <div className={styles.totalTaxTitle}>Total tax paid</div>\n            <div className={styles.totalTaxNumber}>\n              <NumberFormat\n                className={styles.totalTaxNumber}\n                value={Number(dataRender?.total_tax) + Number(dataRender?.mpf)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={currencyUnit}\n                decimalScale={0}\n              />\n            </div>\n            <div className={styles.totalTaxInfo}>\n              Did you know your employer also pays tax on your salary? It costs\n              the employer{\" \"}\n              {currencyUnit === \"HK$\" ? (\n                <>\n                  <NumberFormat\n                    value={dataRender?.mpf}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    prefix={currencyUnit}\n                    decimalScale={2}\n                  />{\" \"}\n                  to pay you{\" \"}\n                  <NumberFormat\n                    value={dataRender?.salary}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    prefix={currencyUnit}\n                    decimalScale={2}\n                  />\n                </>\n              ) : (\n                <>\n                  an extra 5% to 25% in taxes to pay you {\" \"}\n                  <NumberFormat\n                    value={dataRender?.salary}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    prefix={currencyUnit}\n                    decimalScale={2}\n                  />\n                </>\n              )}\n              . In other words, every time you spend {currencyUnit}10 of your\n              hard-earned money, {currencyUnit}\n              {Number(dataRender.margin_tax_rate) / 10} goes to the government.\n            </div>\n          </div>\n          <div className={styles.totalTaxTex}>\n            <div className={styles.totalTaxTitle}>Real tax rate</div>\n            <NumberFormat\n              className={styles.totalTaxNumber}\n              value={real_tax_rate}\n              displayType={\"text\"}\n              thousandSeparator={true}\n              suffix={\"%\"}\n              decimalScale={2}\n            />\n            <div className={styles.totalTaxInfo}>\n              So, with you and the employer both paying tax, what used to be a{\" \"}\n              <NumberFormat\n                value={dataRender.average_tax_rate}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                suffix={\"%\"}\n                decimalScale={2}\n              />{\" \"}\n              tax rate now rises to{\" \"}\n              <NumberFormat\n                value={real_tax_rate}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                suffix={\"%\"}\n                decimalScale={2}\n              />\n              , meaning your real tax rate is actually{\" \"}\n              <NumberFormat\n                value={real_tax_rate_is_actually}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                suffix={\"%\"}\n                decimalScale={2}\n              />{\" \"}\n              higher than what it seemed at first.\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionTheTaxberg;\n","/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionConvert/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionGetPaidMore/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/Header/Header.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/constants.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSearch/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionWithholding/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionSummary/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionCompareAverageTax/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTaxPerIncome/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionEurope/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNorthAmerica/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAsiaPacific/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionLatinAmerica/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionAfrica/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionMiddleEast/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionNote/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/SectionTheTaxberg/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/Header/Header.tsx",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionConvert/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/SectionGetPaidMore/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/Header/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/ConvertPage/Header/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/TableCountries/index.tsx",["3326"],"import { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./styles\";\n\ntype Props = {\n  dataCountries: Array<{\n    id: number;\n    country: string;\n    net_pay: number;\n    average_tax: number;\n    rank: number;\n    acronym: string;\n  }>;\n};\n\nconst TableCountries: React.FC<Props> = ({ dataCountries }: Props) => {\n  const styles = useStyles();\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <>\n      <table className={styles.tableCountries}>\n        <thead>\n          <tr>\n            <th>Country</th>\n            <th>Net Pay</th>\n            <th>Average Tax</th>\n            <th>Rank</th>\n          </tr>\n        </thead>\n        <tbody>\n          {dataCountries?.map((item, index) => {\n            if (showMore) {\n              return (\n                <tr key={item.id}>\n                  <td>\n                    <div className={styles.groupImage}>\n                      <img\n                        className={styles.iconAcronym}\n                        src={`https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/taxCalculator/flags_16/${item.acronym}.png`}\n                        alt=\"\"\n                      />\n                      {item.country}\n                    </div>\n                  </td>\n                  <td>{item.net_pay}</td>\n                  <td>{item.average_tax}%</td>\n                  <td>\n                    <span\n                      className={`${\n                        index === dataCountries?.length - 1\n                          ? styles.leastRank\n                          : \"\"\n                      } ${index === 0 ? styles.bestRank : \"\"}`}\n                    >\n                      {item.rank}\n                    </span>\n                  </td>\n                </tr>\n              );\n            } else {\n              if (index >= dataCountries?.length - 3 || index < 3) {\n                return (\n                  <tr key={item.id}>\n                    <td>\n                      <div className={styles.groupImage}>\n                        <img\n                          className={styles.iconAcronym}\n                          src={`https://jobslab-media.s3.ap-east-1.amazonaws.com/web/picture/taxCalculator/flags_16/${item.acronym}.png`}\n                          alt=\"\"\n                        />\n                        {item.country}\n                      </div>\n                    </td>\n                    <td>HKD {item.net_pay}</td>\n                    <td>{item.average_tax}%</td>\n                    <td>\n                      <span\n                        className={`${\n                          index === dataCountries?.length - 1\n                            ? styles.leastRank\n                            : \"\"\n                        } ${index === 0 ? styles.bestRank : \"\"}`}\n                      >\n                        {item.rank}\n                      </span>\n                    </td>\n                  </tr>\n                );\n              }\n            }\n          })}\n        </tbody>\n      </table>\n      {!showMore && dataCountries?.length > 6 && (\n        <div className={styles.tableShowMore}>\n          <Button\n            onClick={() => setShowMore(true)}\n            className={styles.btnShowMore}\n          >\n            Show more\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TableCountries;\n","/home/ubuntu/environment/jobslab-web/src/app/general/TaxCalculator/TableCountries/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/index.tsx",["3327","3328"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Dialog, DialogContent } from \"@material-ui/core\";\nimport CountdownStart from \"../CountdownStart\";\nimport useStyles from \"./styles\";\nimport ComponentVideo from \"../ComponentVideo/index.js\";\nimport { WEB_IMAGE_URL, WEB_VIDEO_URL } from 'constants/PictureUrl';\n\nconst timeLeftCountDown = 3;\nconst instructionsDef = [\n  \"Dress the way you would for an interview.\",\n  \"Record in front of a plain background.\",\n  \"Choose a quiet place to avoid background noise.\",\n  \"Speak slowly and clearly.\",\n  \"Ensure your recording is less than 3 minutes long.\",\n];\n\nconst ModalBeforeYouStart = (props: any) => {\n  const styles = useStyles();\n  const { handleClickCloseYouStart, openYouStart, handleClose } = props;\n  const [instructions] = useState(instructionsDef);\n  const [secondsCountDown, setSecondsCountDown] = useState(timeLeftCountDown);\n  const [stepRecording, setStepRecording] = useState(0);\n\n  useEffect(() => {\n    if (stepRecording === 1) {\n      if (secondsCountDown > 0) {\n        setTimeout(() => setSecondsCountDown(secondsCountDown - 1), 1000);\n      } else {\n        setSecondsCountDown(0);\n        setTimeout(() => setStepRecording(2), 1000);\n      }\n    } else if (stepRecording === 2) {\n      \n    }\n  }, [secondsCountDown, stepRecording]);\n\n  useEffect(() => {\n    if (openYouStart) {\n      setStepRecording(0);\n    }\n  }, [openYouStart]);\n\n  const onStartRecording = () => {\n    setStepRecording(1);\n    setSecondsCountDown(timeLeftCountDown);\n  };\n\n  return (\n    <Dialog\n      fullWidth={true}\n      maxWidth={\"xl\"}\n      aria-labelledby=\"max-width-dialog-title\"\n      open={openYouStart}\n      className={styles.modalBeforeYouStart}\n    >\n      <div className={styles.closeModal} onClick={handleClickCloseYouStart}>\n        <div className={styles.iconClose}>\n          <img src={encodeURI(WEB_IMAGE_URL+\"candidate/profile/icon-close.svg\")} alt=\"\" />\n        </div>\n        <span>Quit</span>\n      </div>\n\n      <DialogContent dividers className={styles.dialogContentBeforeYouStart}>\n        {stepRecording === 0 && (\n          <>\n            <div className={styles.instructionHeader}>\n              <div className={styles.instructionIconHolder}>\n                <img src={encodeURI(WEB_IMAGE_URL+\"candidate/profile/41_active.svg\")} alt=\"\" />\n              </div>\n              <div className={styles.instructionTextHeader}>\n                Before You Start\n              </div>\n            </div>\n            <div className={styles.instructionInformationHolder}>\n              <div className={styles.listInstructions}>\n                {instructions?.map((item, index) => {\n                  return (\n                    <div\n                      className={styles.instructionInformationText}\n                      key={index}\n                    >\n                      {item}\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div className={styles.videoFunctionalityHolder}>\n                <Button className={styles.btnStart} onClick={onStartRecording}>\n                  <div className={styles.startRecordButtonIcon}></div>Start\n                </Button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {stepRecording === 1 && (\n          <div className={styles.stepRecording2}>\n            <CountdownStart\n              timeLeft={timeLeftCountDown}\n              timeLeftDown={secondsCountDown}\n            />\n\n            <img src={encodeURI(WEB_IMAGE_URL+\"candidate/profile/Mask.svg\")} alt=\"\" />\n          </div>\n        )}\n\n        {(stepRecording === 1 || stepRecording === 2) && (\n          <>\n           /* <ComponentVideo onRecordAgain={() => setStepRecording(0)} \n            closeVideoPopup={() => handleClickCloseYouStart()}\n            onUploadFinish={() => handleClose()}\n            videoId={''} \n            videoUploadUrl={'/api/users/profile/video/getUrl'} \n            processRequestUrl={'/api/users/profile/video/process'}/>*/\n            <ComponentVideo stepRecording={stepRecording} onRecordAgain={() => setStepRecording(0)}/>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ModalBeforeYouStart;\n","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/index.js",["3329","3330","3331","3332","3333","3334","3335","3336","3337","3338"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport RecordRTC, { invokeSaveAsDialog } from \"recordrtc\";\nimport { ToastContainer, toast } from 'material-react-toastify';\nimport 'material-react-toastify/dist/ReactToastify.css';\nimport useStyles from \"./styles\";\nimport { WEB_IMAGE_URL, WEB_VIDEO_URL } from 'constants/PictureUrl';\nimport { stopCaptureUserMedia } from 'util/MediaUtil';\nimport axios from 'axios';\nimport * as notification from 'actions/Notification';\nconst ComponentVideo = (props) => {\n  const styles = useStyles();\n  const { videoId, videoUploadUrl, processRequestUrl, onRecordAgain, stepRecording, closeVideoPopup, onUploadFinish } = props;\n  const [showButtonStop, setShowButtonStop] = useState(false);\n  const [blob, setBlob] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [stream, setStream] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadFailed, setUploadFailed] = useState(false);\n  const refVideo = useRef(null);\n  const recorderRef = useRef(null);\n\n  useEffect(() => {\n    handleRecording();\n  }, [stepRecording]);\n\n  const handleRecording = async () => {\n    /*const mediaStream = await navigator?.mediaDevices?.getDisplayMedia({\n      video: {\n        width: 568,\n        height: 420,\n        frameRate: 30,\n      },\n      audio: true,\n    });*/\n    \n    try {\n        /*const mediaStream = await navigator?.mediaDevices?.getUserMedia({\n          video: {\n            width: 568,\n            height: 420,\n            frameRate: 30,\n          },\n          audio: true,\n        });\n        setStream(mediaStream);\n        recorderRef.current = new RecordRTC(mediaStream, { type: \"video\" });*/\n        const cameraStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        setStream(cameraStream);\n        recorderRef.current = new RecordRTC(cameraStream, { type: \"video\" });\n        recorderRef.current.startRecording();\n    } catch (e) {\n        notification.error(\"Please enable your webcam/ microphone for recording video.\");\n        closeVideoPopup();\n    }\n  };\n\n  const handleStop = () => {\n    setShowButtonStop(false);\n    refVideo.current.srcObject = null;\n    recorderRef.current.stopRecording(() => {\n      setBlob(recorderRef.current.getBlob());\n      stopCaptureUserMedia(stream);\n    });\n  };\n\n  const handleSave = () => {\n    // download video to local\n    //invokeSaveAsDialog(blob); \n    // Here is the action call API to send data\n    toast.success(\"Your video is uploaded and under process. We will inform you once the video processing job is completed\");\n    console.log('Call API')\n    getUploadLocation(blob);    \n\n  };\n\n  \n  var getUploadLocation = (blob) => {\n      var data = {videoId : videoId};\n      axios.post(videoUploadUrl, data, {\n         onUploadProgress: data => {\n           //Set the progress value to show the progress bar\n           console.log(Math.round((100 * data.loaded) / data.total))\n         },\n       })\n        .then(res => {\n          if (res && res.status == 200 && res.data.isSuccess) {\n            uploadVideo(res.data.url, res.data.fileName, blob);\n          }\n          else {\n            markUploadFailed();\n          }\n        })\n        .catch(error => {\n          markUploadFailed();\n        });\n  }\n    \n  var uploadVideo = (requestUrl, requestFileName, fileBlob) => {\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(fileBlob);\n      reader.onloadend = (event) => {\n         axios({\n          method: 'put',\n          url: requestUrl,\n          data: reader.result\n          })\n          .then(res => {\n            if (res && res.status == 200) {\n              processRequest();\n            }\n            else {\n              markUploadFailed();\n            }\n          })\n          .catch(error => {\n            console.log(error);\n            markUploadFailed();\n          });\n      }\n  }\n  \n  var processRequest = () => {\n     var data = {videoId : videoId};\n     axios.post(processRequestUrl, data, {\n       onUploadProgress: data => {\n         //Set the progress value to show the progress bar\n         console.log(Math.round((100 * data.loaded) / data.total))\n       },\n     })\n      .then(res => {\n        if (res && res.status == 200 && res.data.isSuccess) {\n          markUploadSuccess();\n          /*this.setState({ \n            isUploadSuccess: true, \n            uploadingVideo: false \n          });*/\n        }\n        else {\n          markUploadFailed();\n        }\n      })\n      .catch(error => {\n        markUploadFailed();\n      });\n  }\n  \n  var markUploadSuccess = () => {\n    notification.success(\"Successfully submitted the video.\");\n    closeVideoPopup();\n    onUploadFinish();\n  }\n  \n  var markUploadFailed = () => {\n    notification.error(\"Failed to submit the video. Please try again.\");\n  }\n  \n  useEffect(() => {\n    /*if (!refVideo.current) {\n      return;\n    }*/\n    refVideo.current.srcObject = stream;\n  }, [stream, refVideo]);\n\n  useEffect(() => {\n    if (!!stream) {\n      setShowButtonStop(true);\n    } else {\n      setShowButtonStop(false);\n    }\n  }, [stream]);\n\n  useEffect(() => {\n    if (!!showButtonStop) {\n      setTimeout(() => setTimer(timer + 1), 1000);\n    } else {\n      setTimer(0);\n    }\n  }, [showButtonStop, timer]);\n\n  const secondsToMinute = (value) => {\n    const sec = parseInt(value, 10); // convert value to number if it's string\n    let hours = Math.floor(sec / 3600); // get hours\n    let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n    let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    return hours + \":\" + minutes + \":\" + seconds; // Return is HH : MM : SS\n  };\n\n  return (\n    <div className={styles.boxVideo}>\n      <div className={styles.video}>\n        {/*blob && (\n          <>\n            <video\n              src={URL.createObjectURL(blob)}\n              controls\n              autoPlay\n              ref={refVideo}\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </>\n        )*/}\n        {blob ? \n          <video\n            src={URL.createObjectURL(blob)}\n            controls\n            autoPlay\n            ref={refVideo}\n            style={{ width: \"100%\", maxWidth: '100%', height: \"100%\" }}\n          />\n          :\n          <video\n            controls\n            autoPlay\n            ref={refVideo}\n            style={{ width: \"100%\", maxWidth: '100%', height: \"100%\" }}\n          />\n        }\n      </div>\n\n      {!!showButtonStop && (\n        <div className={styles.groupBtnDone}>\n          <div className={styles.timer}>\n            <div className={styles.timerIndicatorHolder}>\n              <img src={encodeURI(WEB_IMAGE_URL+\"candidate/profile/videoBlue.svg\")} alt=\"\" />\n            </div>\n            <div className={styles.timerTimeShow}>{secondsToMinute(timer)}</div>\n          </div>\n          <Button onClick={handleStop} className={styles.endRecordButton}>\n            <div className={styles.endRecordButtonIcon}></div>\n            Done\n          </Button>\n        </div>\n      )}\n\n      {blob && \n        <div className={styles.groupBtnDone}>\n          <Button onClick={onRecordAgain} className={styles.btnRecordAgain}>Record Again</Button>\n          <Button onClick={handleSave} className={styles.btnSave}>save</Button>\n        </div>\n      }\n\n      {!!showButtonStop && (\n        <ul className={styles.questions}>\n           <li>Questions 1</li> \n           <li>Questions 2</li> \n           <li>Questions 3</li>\n        </ul>\n      )}\n      \n      <ToastContainer \n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n};\n\nexport default ComponentVideo;\n","/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/index.tsx",[],"/home/ubuntu/environment/jobslab-web/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/styles.ts",[],"/home/ubuntu/environment/jobslab-web/src/util/MediaUtil.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/index.js",[],["3339","3340"],"/home/ubuntu/environment/jobslab-web_extract/src/Routes.js",["3341","3342","3343","3344","3345","3346","3347","3348","3349","3350","3351","3352","3353","3354","3355"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n//import {MuiPickersUtilsProvider} from 'material-ui-pickers';\nimport MomentUtils from '@date-io/moment';\nimport cyanTheme from 'styles/themes/cyanTheme';\nimport asyncComponent from 'util/asyncComponent';\nimport ScrollToTop from 'util/ScrollToTop';\nimport {IntlProvider} from 'react-intl'\nimport AppLocale from 'lngProvider';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport Sidebar from 'components/sideBar/SideNav/index';\n\nimport Home from './app/general/Home';\nimport HomeRemake from './app/general/HomeRemake';\nimport Employer from './app/general/Employer';\nimport TermsOfUse from './app/general/TermsOfUse';\nimport PrivacyPolicy from './app/general/PrivacyPolicy';\nimport FAQ from './app/general/FAQ';\nimport ContactUs from './app/general/ContactUs';\nimport JobList from './app/job/JobList';\nimport Job from './app/job/Job';\nimport Resume from './app/resume/Resume';\n\nimport TaxCalculator from './app/general/TaxCalculator';\nimport SalaryConverter from './app/general/ConvertPage';\n\nimport CandidateDashboard from './app/candidate/CandidateDashboard';\nimport CandidateJobAlert from './app/candidate/CandidateJobAlert';\nimport UserSettings from './app/user/UserSettings';\nimport Login from './app/user/Login';\nimport Verification from './app/user/Verification';\nimport PasswordReset from './app/user/PasswordReset';\n//import CandidateApplication from './app/candidate/CandidateApplication';\n//import CandidateApplicationList from './app/candidate/CandidateApplicationList';\nimport CandidateRegister from './app/candidate/CandidateRegister';\n\nimport Application from './app/application/Application';\nimport VideoInterview from './app/application/VideoInterview';\n\nimport NotFound from './app/general/NotFound';\n\nimport Test from './app/test/Test';\nimport TestRecorder from './app/test/TestRecorder';\nimport TestHome from './app/general/TestHome';\n\nimport ComingSoon from './app/general/ComingSoon';\n\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nimport { changeNavigationStyle } from 'actions/index';\n\nimport {\n  ABOVE_THE_HEADER,\n  BELOW_THE_HEADER,\n  COLLAPSED_DRAWER,\n  FIXED_DRAWER,\n  HORIZONTAL_NAVIGATION,\n  VERTICAL_NAVIGATION,\n} from 'constants/ActionTypes';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownSearchBar : true,\n      headerWidth : '100%',\n    }\n  }\n  \n  componentDidMount() {\n  }\n  \n  \n  updateHeaderStyle = (style, isShownSearch) => {\n    var headerType = (style == VERTICAL_NAVIGATION) ? VERTICAL_NAVIGATION : \n    (style == HORIZONTAL_NAVIGATION  ? HORIZONTAL_NAVIGATION : \"\");\n    if(headerType)\n      this.props.changeNavigationStyle(headerType);\n      \n    if(isShownSearch)\n      this.setState({\n        isShownSearchBar : true\n      })\n    else\n      this.setState({\n        isShownSearchBar : false\n      })\n  }\n  \n  render() {\n    const {navigationStyle} = this.props;\n    const {locale} = this.props;\n    //const Home = () => <Redirect to='/' />\n    let applyTheme = createMuiTheme(cyanTheme);\n    const currentAppLocale = AppLocale[locale.locale];\n    console.log(this.props.match);\n    return (\n      <div>\n       <ThemeProvider theme={applyTheme}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <IntlProvider\n            locale={currentAppLocale.locale}\n            messages={currentAppLocale.messages}>\n            <div className=\"app-main\">\n              <div className=\"app-main-container\">\n                <Sidebar />\n                <div className={`app-header ${navigationStyle === HORIZONTAL_NAVIGATION ? 'app-header-horizontal' : ''}`}>\n                  <Header enableSearchBar={this.state.isShownSearchBar} />\n                </div>\n                <main className={`app-main-content-wrapper ${navigationStyle === HORIZONTAL_NAVIGATION ? 'transparent-header' : ''} ${ window.location.pathname === \"/joblist\" ? 'joblist' : ''}`}>\n                  <div className=\"app-main-content\">\n                  <ScrollUpButton ToggledStyle={{bottom: 100, right: 40}} />\n                    <Switch>\n                        <Route exact path='/terms-of-use' render={props => <TermsOfUse updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/privacy-policy' render={props => <PrivacyPolicy updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/faq' render={props => <FAQ updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/contact' render={props => <ContactUs updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route exact path='/login' render={props => <Login updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/password/reset/:token' render={props => <PasswordReset {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route path=\"/joblist*\" render={props => <JobList {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path='/job/:jobId/:refId?' render={props => <Job {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route exact path='/employer' render={props => <Employer updateHeaderStyle={this.updateHeaderStyle}  /> } />\n\n                        <Route exact path=\"/applicant/:token\" render={props => <Resume {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path=\"/applicant/interview/video/:token\" render={props => <VideoInterview {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <Route excat path=\"/tax/calculator\" render={props => <TaxCalculator {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        <Route exact path=\"/salary/converter\" render={props => <SalaryConverter {...props} updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        \n                        <PrivateRoute exact path=\"/resume/:Id\" component={Resume} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"admin,client\"} />\n                        <PrivateRoute exact path=\"/settings\" component={UserSettings} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        <PrivateRoute exact path=\"/application/:appId\" component={Application} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        <PrivateRoute exact path=\"/application/interview/video/:inVideoId\" component={VideoInterview} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        <PrivateRoute exact path=\"/candidate/dashboard\" component={CandidateDashboard} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"candidate\"} />\n                        <PrivateRoute exact path=\"/candidate/jobalert\" component={CandidateJobAlert} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"candidate\"} />\n                        \n                        <PrivateRoute exact path=\"/candidate/profile\" component={Resume} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"candidate\"} />\n                        <PrivateRoute exact path=\"/candidate/register\" component={CandidateRegister} updateHeaderStyle={this.updateHeaderStyle} isRedirect={\"Register\"} pageRole={\"candidate\"} />\n                        \n                        <PrivateRoute exact path=\"/verification\" component={Verification} isRedirect={\"Verification\"} updateHeaderStyle={this.updateHeaderStyle} pageRole={\"all\"} />\n                        \n                        {/*<Route exact path='/comingsoon' render={props => <ComingSoon updateHeaderStyle={this.updateHeaderStyle}  /> } />*/}\n                        {/*<Route exact path='/testhome' render={props => <TestHome updateHeaderStyle={this.updateHeaderStyle}  /> } />*/}\n                        {/*<Route exact path='/test' component={Test} />\n                        <Route exact path='/testrec' component={TestRecorder} />*/}\n                        <Route exact path='/' render={props => <HomeRemake updateHeaderStyle={this.updateHeaderStyle}  /> } />\n\n                        <Route render={props => <HomeRemake updateHeaderStyle={this.updateHeaderStyle}  /> } />\n                        {/*<Route path=\"*\"><NotFound updateHeaderStyle={this.updateHeaderStyle} /></Route>*/}\n                    </Switch>\n                  </div>\n                  <Footer/>                \n               </main>\n              </div>\n            </div>\n           </IntlProvider>\n         </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {locale, navigationStyle} = state.settings;\n  return { locale, navigationStyle}\n};\n\nexport default withRouter(connect(mapStateToProps, { changeNavigationStyle })(Routes));\n","/home/ubuntu/environment/jobslab-web_extract/src/PrivateRoute.js",["3356","3357","3358","3359","3360","3361","3362","3363"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/NotFound.js",["3364"],"/home/ubuntu/environment/jobslab-web_extract/src/app/job/JobList.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/job/Job.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ComingSoon.js",["3365","3366","3367","3368","3369"],"/home/ubuntu/environment/jobslab-web_extract/src/app/user/UserSettings.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/user/Login.js",["3370","3371","3372","3373","3374"],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/CandidateJobAlert.js",["3375","3376","3377","3378","3379","3380","3381","3382"],"/home/ubuntu/environment/jobslab-web_extract/src/app/user/PasswordReset.js",["3383","3384","3385"],"/home/ubuntu/environment/jobslab-web_extract/src/app/application/VideoInterview.js",["3386","3387","3388","3389","3390","3391","3392","3393","3394","3395","3396","3397"],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/CandidateRegister.js",["3398"],"/home/ubuntu/environment/jobslab-web_extract/src/app/user/Verification.js",["3399","3400"],"/home/ubuntu/environment/jobslab-web_extract/src/app/test/Test.js",["3401","3402","3403"],"/home/ubuntu/environment/jobslab-web_extract/src/app/test/TestRecorder.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/Employer.js",["3404","3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/FAQ.js",["3418","3419","3420"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ContactUs.js",["3421","3422","3423","3424","3425"],"/home/ubuntu/environment/jobslab-web_extract/src/app/resume/Resume.js",["3426","3427","3428","3429","3430","3431","3432"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TestHome.js",["3433","3434","3435","3436","3437","3438"],"/home/ubuntu/environment/jobslab-web_extract/src/app/application/Application.js",["3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450","3451","3452","3453","3454","3455","3456","3457","3458","3459","3460"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/HomeRemake.js",["3461","3462","3463","3464","3465","3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478","3479","3480","3481","3482","3483","3484","3485","3486","3487","3488","3489"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TermsOfUse.js",["3490","3491","3492","3493","3494"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/PrivacyPolicy.js",["3495","3496","3497","3498"],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/CandidateDashboard.js",["3499","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512"],"/home/ubuntu/environment/jobslab-web_extract/src/actions/Auth.js",["3513"],"/home/ubuntu/environment/jobslab-web_extract/src/actions/List.js",["3514"],"/home/ubuntu/environment/jobslab-web_extract/src/styles/style.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/redux_store/index.js",["3515"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/Home.js",["3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552"],"/home/ubuntu/environment/jobslab-web_extract/src/actions/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/styles/themes/cyanTheme.js",["3553"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/IconWithTextCard.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/constants/ActionTypes.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/util/asyncComponent.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/util/ScrollToTop.js",["3554"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/index.tsx",[],["3555","3556"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/sideBar/SideNav/index.js",["3557"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/data.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/util/functions.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/actions/UploadCV.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/constants/PictureUrl.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/actions/Notification.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/constants/ApplicationState.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/Footer/index.js",["3558","3559","3560","3561","3562"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Header/index.js",["3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/Beta.js",["3577"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ApplicationListForm.js",["3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588"],"/home/ubuntu/environment/jobslab-web_extract/src/components/auth/SignupContent.js",["3589","3590","3591","3592","3593","3594"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/ultis.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/sideBar/SideNav/SidenavContent.js",["3595","3596","3597","3598","3599"],"/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/Saga.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/reducers/index.js",["3600"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Widget/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/Recorder/index.js",["3601","3602","3603","3604","3605"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListFilter/AdminJobListFilter.js",["3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Drift/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/JobLeftList/index.js",["3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638"],"/home/ubuntu/environment/jobslab-web_extract/src/components/JobContent/index.js",["3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652"],"/home/ubuntu/environment/jobslab-web_extract/src/components/CircularProgress/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/actions/Setting.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/Header/index.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionGetPaidMore/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionConvert/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNote/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionMiddleEast/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAfrica/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionLatinAmerica/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAsiaPacific/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNorthAmerica/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionEurope/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTaxPerIncome/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionCompareAverageTax/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSummary/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/Header/index.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionWithholding/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSearch/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTheTaxberg/index.tsx",["3653"],"/home/ubuntu/environment/jobslab-web_extract/src/util/CustomScrollbars.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/util/IntlMessages.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionEurope/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/Header/Header.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/CountdownTimer/index.js",["3654","3655","3656","3657","3658","3659","3660","3661"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSummary/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionPeopleAlsoAsk/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionCompareAverageTax/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTaxPerIncome/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionWithholding/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionTheTaxberg/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/constants.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/Header/Header.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionSearch/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/TrueFalseIcon/index.js",["3662","3663"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListApplicationFilter/AdminJobListApplicationFilter.js",["3664","3665","3666","3667","3668","3669","3670","3671","3672"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ReferralForm.js",["3673","3674","3675","3676","3677"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/SignupForm.js",["3678","3679"],"/home/ubuntu/environment/jobslab-web_extract/src/components/UploadButton/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/LoginForm.js",["3680","3681","3682","3683","3684","3685","3686","3687","3688"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ReferCandidateForm.js",["3689","3690","3691","3692","3693","3694","3695"],"/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/SkillTag/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/LinkedinFollow/index.js",["3696","3697"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListApplicationFilter/App.styles.js",["3698","3699"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/Header/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/UserInfo/index.js",["3700","3701","3702","3703"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/TableCountries/index.tsx",["3704"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/Header/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/TableCountries/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/auth/LoginContent.js",["3705","3706","3707","3708","3709","3710"],"/home/ubuntu/environment/jobslab-web_extract/src/styles/modalStyle.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/SearchBox/index.js",["3711","3712","3713","3714"],"/home/ubuntu/environment/jobslab-web_extract/src/components/SearchBox/functions.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/AdminJobListFilter/App.styles.js",["3715","3716"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNorthAmerica/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAsiaPacific/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionLatinAmerica/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionAfrica/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionMiddleEast/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/TaxCalculator/SectionNote/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionConvert/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ConvertPage/SectionGetPaidMore/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/Recorder/WebCam.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/Recorder/MediaUtil.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/ChartCard/ChartCard.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/ReportBox/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/Filter/Filter.js",["3717","3718","3719","3720","3721","3722","3723","3724","3725","3726"],"/home/ubuntu/environment/jobslab-web_extract/src/components/JobList/Filter/App.styles.js",["3727","3728"],"/home/ubuntu/environment/jobslab-web_extract/src/reducers/UploadCV.js",["3729"],"/home/ubuntu/environment/jobslab-web_extract/src/reducers/Status.js",["3730"],"/home/ubuntu/environment/jobslab-web_extract/src/reducers/List.js",["3731","3732"],"/home/ubuntu/environment/jobslab-web_extract/src/reducers/Auth.js",["3733","3734"],"/home/ubuntu/environment/jobslab-web_extract/src/reducers/Settings.js",["3735","3736","3737"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Header/CardHeader/index.js",["3738","3739","3740","3741","3742"],"/home/ubuntu/environment/jobslab-web_extract/src/constants/Status.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/constants/ThemeColors.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/UploadCV.js",["3743"],"/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/List.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/redux_saga/Auth.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/UserInfo/UserInfoPopup.js",["3744","3745","3746","3747"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Header/AppNotification/index.js",["3748"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Header/CardHeader/CardMenu.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/fr_FR.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/es_ES.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/it_IT.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/ar_SA.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/zh-Hans-CN.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/lngProvider/entries/en-US.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/actions/Status.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/actions/Function.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/Header/AppNotification/NotificationItem.js",["3749"],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/data.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/mdata.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ItemSecond.js",["3750"],"/home/ubuntu/environment/jobslab-web_extract/src/app/general/ItemFirst.js",["3751"],"/home/ubuntu/environment/jobslab-web_extract/src/components/Chart/SimpleRadarChart.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/JobAlertCard.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/RewardCard.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/Competitiveness/CompetitivenessGauge.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/Competitiveness/Gauge.js",["3752","3753","3754","3755","3756","3757","3758","3759"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Common/ChartCard.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/OfferForm.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/util/Auxiliary.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/ClientList.js",["3760","3761","3762"],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/JobDescription.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/CandidateHeader.js",["3763","3764","3765","3766"],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/TimeLine.js",["3767","3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783","3784","3785","3786","3787","3788","3789","3790","3791","3792"],"/home/ubuntu/environment/jobslab-web_extract/src/components/ContainerHeader/index.js",["3793","3794","3795","3796"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/SkillTag/index.js",["3797","3798","3799","3800","3801","3802"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Contact/index.js",["3803","3804","3805","3806"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Goal/index.js",["3807","3808","3809","3810"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Biography/index.js",["3811","3812","3813","3814","3815","3816","3817"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/About/index.js",["3818","3819","3820","3821","3822","3823"],"/home/ubuntu/environment/jobslab-web_extract/src/components/register/RegisterConfirm.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/register/ProfilePicture.js",["3824","3825"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/ProfileHeader/index.js",["3826","3827","3828","3829","3830","3831","3832","3833","3834","3835","3836","3837","3838"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/index.js",["3839","3840","3841","3842","3843","3844","3845","3846","3847","3848","3849","3850"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ReferralCard/index.js",["3851","3852","3853","3854"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/RecommendedJobCard/index.js",["3855","3856","3857","3858","3859","3860","3861","3862"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ApplicationCard/index.js",["3863","3864","3865","3866","3867","3868"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/InterestedJobCard/index.js",["3869","3870","3871","3872","3873","3874"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/SalarySurvey/index.js",["3875","3876","3877","3878"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Common/ExpertList/index.js",["3879","3880"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Common/Profile/index.js",["3881","3882"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/index.js",["3883","3884","3885","3886","3887","3888"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/index.js",["3889","3890","3891","3892","3893","3894"],"/home/ubuntu/environment/jobslab-web_extract/src/components/register/DetailInfo.js",["3895","3896","3897","3898","3899","3900"],"/home/ubuntu/environment/jobslab-web_extract/src/components/register/BasicInfo.js",["3901","3902","3903","3904","3905","3906"],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/InterviewVideo.js",["3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3920"],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/InterviewQuestion.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/SalarySurvey/SalarySurveyChart.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/InterestedJobCard/InterestedJobItem.js",["3921","3922","3923"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ApplicationCard/ApplicationItem.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/RecommendedJobCard/RecommendedJobItem.js",["3924","3925","3926"],"/home/ubuntu/environment/jobslab-web_extract/src/components/dashboard/Candidate/ReferralCard/ReferralItem.js",["3927"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/About/AboutItem.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Goal/GoalEdit.js",["3928"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Contact/ContactEdit.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/SkillTag/SkillEdit.js",["3929"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/About/AboutEdit.js",["3930","3931"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/CareerItem.js",["3932","3933","3934","3935","3936","3937"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/EducationEdit.js",["3938","3939","3940"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/CareerEdit.js",["3941","3942","3943","3944","3945","3946","3947"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/EducationItem.js",["3948","3949","3950","3951","3952","3953"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/DataTable.js",["3954","3955","3956","3957","3958"],"/home/ubuntu/environment/jobslab-web_extract/src/components/WidgetHeader/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/app/candidate/AlertTable.js",["3959","3960","3961","3962","3963","3964"],"/home/ubuntu/environment/jobslab-web_extract/src/components/CardBox/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/InputNumber/InputSalary.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/InterviewVideoRequestForm.js",["3965","3966"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/UserContactForm.js",["3967","3968","3969","3970","3971"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/InterviewScheduleForm.js",["3972"],"/home/ubuntu/environment/jobslab-web_extract/src/components/application/TimeLineItem.js",["3973","3974","3975","3976","3977","3978","3979","3980","3981","3982","3983","3984","3985","3986","3987","3988","3989","3990","3991","3992","3993","3994","3995","3996","3997","3998","3999","4000","4001","4002","4003","4004","4005","4006","4007","4008","4009","4010","4011","4012","4013","4014","4015","4016"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/Detail.js",["4017","4018","4019","4020"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ProfilePictureEdit.js",["4021","4022","4023"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/Detail.js",["4024","4025","4026","4027"],"/home/ubuntu/environment/jobslab-web_extract/src/components/register/UploadCV.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/index.tsx",["4028","4029"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/constants/AutoSuggest.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Education/Detail.styles.js",["4030","4031"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/Career/Detail.styles.js",["4032","4033"],"/home/ubuntu/environment/jobslab-web_extract/src/constants/List.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/index.js",["4034","4035","4036","4037","4038","4039","4040","4041","4042","4043"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/GroupInput/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ModalBeforeYouStart/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/ClientCandidateList/index.js",["4044","4045","4046","4047","4048","4049","4050","4051","4052","4053","4054","4055","4056","4057","4058","4059"],"/home/ubuntu/environment/jobslab-web_extract/src/components/common/ExpandDetailBox/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/common/ExpandDetailBox/Detail.js",["4060","4061","4062","4063"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/index.tsx",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/common/ExpandDetailBox/Detail.styles.js",["4064","4065"],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/CountdownStart/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/Client/CandidateListCard/index.js",["4066","4067","4068","4069","4070","4071","4072","4073"],"/home/ubuntu/environment/jobslab-web_extract/src/components/popup/Client/CandidateListCard/CandidateListItem.js",["4074","4075","4076","4077"],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/CmtCardContent.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/CmtCardHeader.js",["4078","4079"],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/CmtCardHeader.style.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtCard/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtHelpers/JssHelper.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtDropdownMenu/index.js",["4080"],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/CmtContentHead/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtAvatar/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtObjectSummary/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtAvatar/index.style.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/CmtSubTitle/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/@coremat/CmtTypography/CmtTitle/index.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/profile/IntroductionVideo/CandidateVideoSummary/ComponentVideo/styles.ts",[],"/home/ubuntu/environment/jobslab-web_extract/src/util/MediaUtil.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/settings/PhoneChange.js",[],"/home/ubuntu/environment/jobslab-web_extract/src/components/settings/PasswordChange.js",["4081","4082","4083"],"/home/ubuntu/environment/jobslab-web_extract/src/components/settings/NameChange.js",["4084","4085"],"/home/ubuntu/environment/jobslab-web_extract/src/components/settings/ProfilePictureChange.js",["4086","4087","4088","4089"],{"ruleId":"4090","replacedBy":"4091"},{"ruleId":"4092","replacedBy":"4093"},{"ruleId":"4094","severity":1,"message":"4095","line":3,"column":37,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4098","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4099","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4100","line":48,"column":8,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4101","line":55,"column":3,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4102","line":56,"column":3,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4103","line":57,"column":3,"nodeType":"4096","messageId":"4097","endLine":57,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4104","line":58,"column":3,"nodeType":"4096","messageId":"4097","endLine":58,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":77,"column":29,"nodeType":"4107","messageId":"4108","endLine":77,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4106","line":78,"column":12,"nodeType":"4107","messageId":"4108","endLine":78,"endColumn":14},{"ruleId":"4090","replacedBy":"4109"},{"ruleId":"4092","replacedBy":"4110"},{"ruleId":"4094","severity":1,"message":"4111","line":12,"column":7,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4112","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4113","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4105","severity":1,"message":"4106","line":69,"column":39,"nodeType":"4107","messageId":"4108","endLine":69,"endColumn":41},{"ruleId":"4105","severity":1,"message":"4106","line":69,"column":73,"nodeType":"4107","messageId":"4108","endLine":69,"endColumn":75},{"ruleId":"4105","severity":1,"message":"4106","line":70,"column":56,"nodeType":"4107","messageId":"4108","endLine":70,"endColumn":58},{"ruleId":"4105","severity":1,"message":"4106","line":71,"column":27,"nodeType":"4107","messageId":"4108","endLine":71,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":73,"column":33,"nodeType":"4107","messageId":"4108","endLine":73,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":74,"column":51,"nodeType":"4107","messageId":"4108","endLine":74,"endColumn":53},{"ruleId":"4105","severity":1,"message":"4106","line":79,"column":35,"nodeType":"4107","messageId":"4108","endLine":79,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":80,"column":51,"nodeType":"4107","messageId":"4108","endLine":80,"endColumn":53},{"ruleId":"4114","severity":1,"message":"4115","line":23,"column":11,"nodeType":"4116","endLine":23,"endColumn":82},{"ruleId":"4094","severity":1,"message":"4117","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4118","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4106","line":18,"column":28,"nodeType":"4107","messageId":"4108","endLine":18,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4120","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":13,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":15},{"ruleId":"4121","severity":1,"message":"4122","line":136,"column":43,"nodeType":"4123","messageId":"4124","endLine":136,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4120","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":14},{"ruleId":"4121","severity":1,"message":"4122","line":134,"column":45,"nodeType":"4123","messageId":"4124","endLine":134,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4125","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4126","line":20,"column":10,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4113","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4118","line":10,"column":10,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4127","line":11,"column":10,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4126","line":14,"column":10,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":25},{"ruleId":"4128","severity":1,"message":"4129","line":128,"column":25,"nodeType":"4116","endLine":128,"endColumn":63},{"ruleId":"4094","severity":1,"message":"4130","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":85,"column":18,"nodeType":"4107","messageId":"4108","endLine":85,"endColumn":20},{"ruleId":"4128","severity":1,"message":"4129","line":111,"column":17,"nodeType":"4116","endLine":111,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4132","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":23},{"ruleId":"4114","severity":1,"message":"4115","line":29,"column":11,"nodeType":"4116","endLine":29,"endColumn":82},{"ruleId":"4133","severity":1,"message":"4134","line":73,"column":7,"nodeType":"4135","messageId":"4136","endLine":92,"endColumn":8},{"ruleId":"4137","severity":1,"message":"4138","line":108,"column":62,"nodeType":"4139","messageId":"4140","endLine":108,"endColumn":63},{"ruleId":"4141","severity":1,"message":"4142","line":310,"column":67,"nodeType":"4143","endLine":310,"endColumn":82},{"ruleId":"4141","severity":1,"message":"4142","line":314,"column":72,"nodeType":"4143","endLine":314,"endColumn":87},{"ruleId":"4141","severity":1,"message":"4142","line":318,"column":63,"nodeType":"4143","endLine":318,"endColumn":78},{"ruleId":"4094","severity":1,"message":"4144","line":18,"column":9,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4145","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":45,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":47},{"ruleId":"4146","severity":1,"message":"4147","line":195,"column":5,"nodeType":"4148","messageId":"4149","endLine":197,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4150","line":223,"column":11,"nodeType":"4096","messageId":"4097","endLine":223,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":239,"column":28,"nodeType":"4107","messageId":"4108","endLine":239,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":274,"column":29,"nodeType":"4107","messageId":"4108","endLine":274,"endColumn":31},{"ruleId":"4133","severity":1,"message":"4134","line":126,"column":5,"nodeType":"4135","messageId":"4136","endLine":132,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4151","line":150,"column":45,"nodeType":"4096","messageId":"4097","endLine":150,"endColumn":58},{"ruleId":"4105","severity":1,"message":"4152","line":164,"column":21,"nodeType":"4107","messageId":"4108","endLine":164,"endColumn":23},{"ruleId":"4105","severity":1,"message":"4106","line":165,"column":22,"nodeType":"4107","messageId":"4108","endLine":165,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":172,"column":22,"nodeType":"4107","messageId":"4108","endLine":172,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":172,"column":44,"nodeType":"4107","messageId":"4108","endLine":172,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":191,"column":33,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":191,"column":55,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":57},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":25,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":42,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":74,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":76},{"ruleId":"4105","severity":1,"message":"4106","line":204,"column":25,"nodeType":"4107","messageId":"4108","endLine":204,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4154","line":204,"column":36,"nodeType":"4155","messageId":"4156","endLine":204,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":204,"column":47,"nodeType":"4107","messageId":"4108","endLine":204,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4154","line":204,"column":57,"nodeType":"4155","messageId":"4156","endLine":204,"endColumn":59},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":44,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":75,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":77},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":103,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":105},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":128,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":130},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":160,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":162},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":192,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":194},{"ruleId":"4105","severity":1,"message":"4106","line":216,"column":44,"nodeType":"4107","messageId":"4108","endLine":216,"endColumn":46},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4132","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4157","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":29},{"ruleId":"4114","severity":1,"message":"4115","line":29,"column":11,"nodeType":"4116","endLine":29,"endColumn":87},{"ruleId":"4128","severity":1,"message":"4129","line":71,"column":11,"nodeType":"4116","endLine":71,"endColumn":74},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4132","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4157","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":29},{"ruleId":"4114","severity":1,"message":"4115","line":29,"column":11,"nodeType":"4116","endLine":29,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4119","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4158","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4159","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4145","line":24,"column":8,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":132,"column":94,"nodeType":"4107","messageId":"4108","endLine":132,"endColumn":96},{"ruleId":"4105","severity":1,"message":"4106","line":145,"column":93,"nodeType":"4107","messageId":"4108","endLine":145,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":235,"column":42,"nodeType":"4107","messageId":"4108","endLine":235,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":355,"column":13,"nodeType":"4107","messageId":"4108","endLine":355,"endColumn":15},{"ruleId":"4121","severity":1,"message":"4122","line":439,"column":37,"nodeType":"4123","messageId":"4124","endLine":439,"endColumn":39},{"ruleId":"4141","severity":1,"message":"4142","line":444,"column":49,"nodeType":"4143","endLine":444,"endColumn":64},{"ruleId":"4105","severity":1,"message":"4106","line":445,"column":37,"nodeType":"4107","messageId":"4108","endLine":445,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4158","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4145","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4120","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4160","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":110,"column":40,"nodeType":"4107","messageId":"4108","endLine":110,"endColumn":42},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":45,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":47,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":113,"column":64,"nodeType":"4107","messageId":"4108","endLine":113,"endColumn":66},{"ruleId":"4105","severity":1,"message":"4106","line":128,"column":94,"nodeType":"4107","messageId":"4108","endLine":128,"endColumn":96},{"ruleId":"4105","severity":1,"message":"4106","line":142,"column":93,"nodeType":"4107","messageId":"4108","endLine":142,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":213,"column":42,"nodeType":"4107","messageId":"4108","endLine":213,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":234,"column":13,"nodeType":"4107","messageId":"4108","endLine":234,"endColumn":15},{"ruleId":"4121","severity":1,"message":"4122","line":375,"column":49,"nodeType":"4123","messageId":"4124","endLine":375,"endColumn":51},{"ruleId":"4141","severity":1,"message":"4142","line":380,"column":92,"nodeType":"4143","endLine":380,"endColumn":107},{"ruleId":"4105","severity":1,"message":"4106","line":148,"column":13,"nodeType":"4107","messageId":"4108","endLine":148,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":249,"column":15,"nodeType":"4107","messageId":"4108","endLine":249,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4161","line":261,"column":53,"nodeType":"4096","messageId":"4097","endLine":261,"endColumn":70},{"ruleId":"4094","severity":1,"message":"4158","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4119","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4145","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4159","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4162","line":25,"column":10,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":124,"column":80,"nodeType":"4107","messageId":"4108","endLine":124,"endColumn":82},{"ruleId":"4105","severity":1,"message":"4106","line":129,"column":44,"nodeType":"4107","messageId":"4108","endLine":129,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":130,"column":39,"nodeType":"4107","messageId":"4108","endLine":130,"endColumn":41},{"ruleId":"4105","severity":1,"message":"4106","line":148,"column":99,"nodeType":"4107","messageId":"4108","endLine":148,"endColumn":101},{"ruleId":"4105","severity":1,"message":"4106","line":167,"column":92,"nodeType":"4107","messageId":"4108","endLine":167,"endColumn":94},{"ruleId":"4105","severity":1,"message":"4106","line":256,"column":44,"nodeType":"4107","messageId":"4108","endLine":256,"endColumn":46},{"ruleId":"4121","severity":1,"message":"4122","line":464,"column":53,"nodeType":"4123","messageId":"4124","endLine":464,"endColumn":55},{"ruleId":"4141","severity":1,"message":"4142","line":468,"column":99,"nodeType":"4143","endLine":468,"endColumn":114},{"ruleId":"4141","severity":1,"message":"4142","line":476,"column":65,"nodeType":"4143","endLine":476,"endColumn":80},{"ruleId":"4141","severity":1,"message":"4142","line":500,"column":77,"nodeType":"4143","endLine":500,"endColumn":92},{"ruleId":"4163","severity":1,"message":"4164","line":4,"column":1,"nodeType":"4165","endLine":40,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4166","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4157","line":7,"column":64,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4117","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4141","severity":1,"message":"4142","line":22,"column":57,"nodeType":"4143","endLine":22,"endColumn":72},{"ruleId":"4141","severity":1,"message":"4142","line":23,"column":62,"nodeType":"4143","endLine":23,"endColumn":77},{"ruleId":"4141","severity":1,"message":"4142","line":24,"column":53,"nodeType":"4143","endLine":24,"endColumn":68},{"ruleId":"4094","severity":1,"message":"4102","line":28,"column":3,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4157","line":32,"column":3,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4167","line":33,"column":3,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":20},{"ruleId":"4168","severity":1,"message":"4169","line":98,"column":9,"nodeType":"4170","endLine":98,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":220,"column":18,"nodeType":"4107","messageId":"4108","endLine":220,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":222,"column":23,"nodeType":"4107","messageId":"4108","endLine":222,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":248,"column":30,"nodeType":"4107","messageId":"4108","endLine":248,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":248,"column":63,"nodeType":"4107","messageId":"4108","endLine":248,"endColumn":65},{"ruleId":"4094","severity":1,"message":"4171","line":279,"column":54,"nodeType":"4096","messageId":"4097","endLine":279,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4172","line":279,"column":79,"nodeType":"4096","messageId":"4097","endLine":279,"endColumn":100},{"ruleId":"4105","severity":1,"message":"4152","line":282,"column":18,"nodeType":"4107","messageId":"4108","endLine":282,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4152","line":282,"column":42,"nodeType":"4107","messageId":"4108","endLine":282,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4152","line":282,"column":70,"nodeType":"4107","messageId":"4108","endLine":282,"endColumn":72},{"ruleId":"4094","severity":1,"message":"4173","line":286,"column":11,"nodeType":"4096","messageId":"4097","endLine":286,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4174","line":9,"column":1,"nodeType":"4165","endLine":20,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4159","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4158","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4168","severity":1,"message":"4169","line":56,"column":6,"nodeType":"4170","endLine":56,"endColumn":16},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":44,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":46},{"ruleId":"4121","severity":1,"message":"4122","line":123,"column":54,"nodeType":"4123","messageId":"4124","endLine":123,"endColumn":56},{"ruleId":"4141","severity":1,"message":"4142","line":128,"column":26,"nodeType":"4143","endLine":128,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4117","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4176","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":122,"column":35,"nodeType":"4107","messageId":"4108","endLine":122,"endColumn":37},{"ruleId":"4141","severity":1,"message":"4142","line":177,"column":47,"nodeType":"4143","endLine":177,"endColumn":62},{"ruleId":"4105","severity":1,"message":"4106","line":59,"column":22,"nodeType":"4107","messageId":"4108","endLine":59,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":59,"column":47,"nodeType":"4107","messageId":"4108","endLine":59,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":67,"column":20,"nodeType":"4107","messageId":"4108","endLine":67,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":67,"column":45,"nodeType":"4107","messageId":"4108","endLine":67,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":76,"column":20,"nodeType":"4107","messageId":"4108","endLine":76,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":76,"column":45,"nodeType":"4107","messageId":"4108","endLine":76,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":22,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":47,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":74,"column":20,"nodeType":"4107","messageId":"4108","endLine":74,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":74,"column":45,"nodeType":"4107","messageId":"4108","endLine":74,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":83,"column":20,"nodeType":"4107","messageId":"4108","endLine":83,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":83,"column":45,"nodeType":"4107","messageId":"4108","endLine":83,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4177","line":2,"column":9,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4178","line":2,"column":21,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4179","line":4,"column":7,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4180","line":13,"column":7,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":19},{"ruleId":"4163","severity":1,"message":"4174","line":14,"column":1,"nodeType":"4165","endLine":38,"endColumn":3},{"ruleId":"4163","severity":1,"message":"4174","line":11,"column":1,"nodeType":"4165","endLine":30,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4113","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4174","line":71,"column":1,"nodeType":"4165","endLine":224,"endColumn":2},{"ruleId":"4094","severity":1,"message":"4113","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4174","line":24,"column":1,"nodeType":"4165","endLine":87,"endColumn":2},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":101,"column":13,"nodeType":"4107","messageId":"4108","endLine":101,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4189","line":112,"column":11,"nodeType":"4096","messageId":"4097","endLine":112,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4104","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4157","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4190","line":17,"column":9,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4117","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4191","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4192","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4193","line":27,"column":12,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4194","line":27,"column":22,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4195","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4196","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4195","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4197","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4196","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4198","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4199","line":45,"column":13,"nodeType":"4096","messageId":"4097","endLine":45,"endColumn":23},{"ruleId":"4128","severity":1,"message":"4129","line":78,"column":17,"nodeType":"4116","endLine":78,"endColumn":20},{"ruleId":"4128","severity":1,"message":"4129","line":87,"column":17,"nodeType":"4116","endLine":87,"endColumn":20},{"ruleId":"4133","severity":1,"message":"4134","line":155,"column":7,"nodeType":"4135","messageId":"4136","endLine":159,"endColumn":8},{"ruleId":"4128","severity":1,"message":"4129","line":204,"column":17,"nodeType":"4116","endLine":204,"endColumn":41},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":20,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":45,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":126,"column":28,"nodeType":"4107","messageId":"4108","endLine":126,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":126,"column":53,"nodeType":"4107","messageId":"4108","endLine":126,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":131,"column":28,"nodeType":"4107","messageId":"4108","endLine":131,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":131,"column":53,"nodeType":"4107","messageId":"4108","endLine":131,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4200","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4201","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4152","line":55,"column":18,"nodeType":"4107","messageId":"4108","endLine":55,"endColumn":20},{"ruleId":"4202","severity":1,"message":"4203","line":72,"column":9,"nodeType":"4204","messageId":"4108","endLine":72,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":113,"column":22,"nodeType":"4107","messageId":"4108","endLine":113,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":113,"column":46,"nodeType":"4107","messageId":"4108","endLine":113,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":124,"column":93,"nodeType":"4107","messageId":"4108","endLine":124,"endColumn":95},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4207","severity":1,"message":"4208","line":8,"column":3,"nodeType":"4209","messageId":"4210","endLine":10,"endColumn":4},{"ruleId":"4105","severity":1,"message":"4152","line":42,"column":23,"nodeType":"4107","messageId":"4108","endLine":42,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":68,"column":109,"nodeType":"4107","messageId":"4108","endLine":68,"endColumn":111},{"ruleId":"4094","severity":1,"message":"4211","line":97,"column":26,"nodeType":"4096","messageId":"4097","endLine":97,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4212","line":1,"column":9,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4213","line":4,"column":23,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4214","line":4,"column":41,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":51},{"ruleId":"4094","severity":1,"message":"4113","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":13},{"ruleId":"4105","severity":1,"message":"4106","line":54,"column":21,"nodeType":"4107","messageId":"4108","endLine":54,"endColumn":23},{"ruleId":"4105","severity":1,"message":"4106","line":101,"column":20,"nodeType":"4107","messageId":"4108","endLine":101,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":101,"column":45,"nodeType":"4107","messageId":"4108","endLine":101,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":28,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":53,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":28,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":53,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4117","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4218","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4219","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4130","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":20},{"ruleId":"4207","severity":1,"message":"4208","line":13,"column":3,"nodeType":"4209","messageId":"4210","endLine":15,"endColumn":4},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4220","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4221","line":9,"column":13,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":25},{"ruleId":"4133","severity":1,"message":"4134","line":34,"column":7,"nodeType":"4135","messageId":"4136","endLine":41,"endColumn":8},{"ruleId":"4105","severity":1,"message":"4106","line":80,"column":34,"nodeType":"4107","messageId":"4108","endLine":80,"endColumn":36},{"ruleId":"4105","severity":1,"message":"4106","line":82,"column":44,"nodeType":"4107","messageId":"4108","endLine":82,"endColumn":46},{"ruleId":"4094","severity":1,"message":"4201","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4222","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":20},{"ruleId":"4133","severity":1,"message":"4134","line":73,"column":7,"nodeType":"4135","messageId":"4136","endLine":77,"endColumn":8},{"ruleId":"4105","severity":1,"message":"4106","line":186,"column":35,"nodeType":"4107","messageId":"4108","endLine":186,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":382,"column":34,"nodeType":"4107","messageId":"4108","endLine":382,"endColumn":36},{"ruleId":"4105","severity":1,"message":"4106","line":383,"column":39,"nodeType":"4107","messageId":"4108","endLine":383,"endColumn":41},{"ruleId":"4105","severity":1,"message":"4106","line":51,"column":60,"nodeType":"4107","messageId":"4108","endLine":51,"endColumn":62},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":34,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":36},{"ruleId":"4105","severity":1,"message":"4106","line":85,"column":35,"nodeType":"4107","messageId":"4108","endLine":85,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4223","line":86,"column":9,"nodeType":"4096","messageId":"4097","endLine":86,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4159","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4158","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4168","severity":1,"message":"4169","line":67,"column":5,"nodeType":"4170","endLine":67,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4224","line":78,"column":7,"nodeType":"4096","messageId":"4097","endLine":78,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":44,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":157,"column":28,"nodeType":"4107","messageId":"4108","endLine":157,"endColumn":30},{"ruleId":"4121","severity":1,"message":"4122","line":250,"column":54,"nodeType":"4123","messageId":"4124","endLine":250,"endColumn":56},{"ruleId":"4141","severity":1,"message":"4142","line":254,"column":56,"nodeType":"4143","endLine":254,"endColumn":71},{"ruleId":"4105","severity":1,"message":"4106","line":254,"column":99,"nodeType":"4107","messageId":"4108","endLine":254,"endColumn":101},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4225","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4226","line":46,"column":12,"nodeType":"4096","messageId":"4097","endLine":46,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4113","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4227","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4228","line":43,"column":11,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4229","line":47,"column":13,"nodeType":"4096","messageId":"4097","endLine":47,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4230","line":4,"column":9,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":15},{"ruleId":"4133","severity":1,"message":"4134","line":115,"column":5,"nodeType":"4135","messageId":"4136","endLine":133,"endColumn":6},{"ruleId":"4105","severity":1,"message":"4152","line":191,"column":24,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":193,"column":30,"nodeType":"4107","messageId":"4108","endLine":193,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":203,"column":24,"nodeType":"4107","messageId":"4108","endLine":203,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":205,"column":30,"nodeType":"4107","messageId":"4108","endLine":205,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":214,"column":53,"nodeType":"4107","messageId":"4108","endLine":214,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":216,"column":30,"nodeType":"4107","messageId":"4108","endLine":216,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":225,"column":24,"nodeType":"4107","messageId":"4108","endLine":225,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":227,"column":30,"nodeType":"4107","messageId":"4108","endLine":227,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":237,"column":24,"nodeType":"4107","messageId":"4108","endLine":237,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":239,"column":30,"nodeType":"4107","messageId":"4108","endLine":239,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":248,"column":24,"nodeType":"4107","messageId":"4108","endLine":248,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":250,"column":30,"nodeType":"4107","messageId":"4108","endLine":250,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":258,"column":30,"nodeType":"4107","messageId":"4108","endLine":258,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":270,"column":30,"nodeType":"4107","messageId":"4108","endLine":270,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":279,"column":30,"nodeType":"4107","messageId":"4108","endLine":279,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":291,"column":30,"nodeType":"4107","messageId":"4108","endLine":291,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":303,"column":30,"nodeType":"4107","messageId":"4108","endLine":303,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":316,"column":30,"nodeType":"4107","messageId":"4108","endLine":316,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":326,"column":30,"nodeType":"4107","messageId":"4108","endLine":326,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":338,"column":30,"nodeType":"4107","messageId":"4108","endLine":338,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":349,"column":30,"nodeType":"4107","messageId":"4108","endLine":349,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":357,"column":30,"nodeType":"4107","messageId":"4108","endLine":357,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":365,"column":30,"nodeType":"4107","messageId":"4108","endLine":365,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":382,"column":58,"nodeType":"4107","messageId":"4108","endLine":382,"endColumn":60},{"ruleId":"4105","severity":1,"message":"4106","line":38,"column":24,"nodeType":"4107","messageId":"4108","endLine":38,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":38,"column":49,"nodeType":"4107","messageId":"4108","endLine":38,"endColumn":51},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":22,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":47,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":52,"column":22,"nodeType":"4107","messageId":"4108","endLine":52,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":52,"column":47,"nodeType":"4107","messageId":"4108","endLine":52,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":28,"column":22,"nodeType":"4107","messageId":"4108","endLine":28,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":28,"column":47,"nodeType":"4107","messageId":"4108","endLine":28,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":34,"column":20,"nodeType":"4107","messageId":"4108","endLine":34,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":34,"column":45,"nodeType":"4107","messageId":"4108","endLine":34,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4200","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":22,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":47,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":94,"column":20,"nodeType":"4107","messageId":"4108","endLine":94,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":94,"column":45,"nodeType":"4107","messageId":"4108","endLine":94,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":20,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":45,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":31,"column":22,"nodeType":"4107","messageId":"4108","endLine":31,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":31,"column":47,"nodeType":"4107","messageId":"4108","endLine":31,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":39,"column":22,"nodeType":"4107","messageId":"4108","endLine":39,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":39,"column":47,"nodeType":"4107","messageId":"4108","endLine":39,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":46,"column":22,"nodeType":"4107","messageId":"4108","endLine":46,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":46,"column":47,"nodeType":"4107","messageId":"4108","endLine":46,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4131","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4191","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4231","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4232","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4126","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":184,"column":51,"nodeType":"4107","messageId":"4108","endLine":184,"endColumn":53},{"ruleId":"4105","severity":1,"message":"4106","line":188,"column":113,"nodeType":"4107","messageId":"4108","endLine":188,"endColumn":115},{"ruleId":"4105","severity":1,"message":"4106","line":191,"column":43,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":45},{"ruleId":"4105","severity":1,"message":"4106","line":292,"column":26,"nodeType":"4107","messageId":"4108","endLine":292,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4106","line":292,"column":51,"nodeType":"4107","messageId":"4108","endLine":292,"endColumn":53},{"ruleId":"4105","severity":1,"message":"4106","line":292,"column":73,"nodeType":"4107","messageId":"4108","endLine":292,"endColumn":75},{"ruleId":"4105","severity":1,"message":"4106","line":302,"column":26,"nodeType":"4107","messageId":"4108","endLine":302,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4106","line":302,"column":51,"nodeType":"4107","messageId":"4108","endLine":302,"endColumn":53},{"ruleId":"4133","severity":1,"message":"4134","line":29,"column":5,"nodeType":"4135","messageId":"4136","endLine":33,"endColumn":6},{"ruleId":"4105","severity":1,"message":"4106","line":118,"column":35,"nodeType":"4107","messageId":"4108","endLine":118,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":119,"column":40,"nodeType":"4107","messageId":"4108","endLine":119,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4233","line":56,"column":13,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4234","line":56,"column":31,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":46},{"ruleId":"4094","severity":1,"message":"4235","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4236","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4237","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4238","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4239","line":48,"column":13,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4221","line":6,"column":13,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4145","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4240","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4222","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4241","line":124,"column":13,"nodeType":"4096","messageId":"4097","endLine":124,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4242","line":125,"column":99,"nodeType":"4096","messageId":"4097","endLine":125,"endColumn":123},{"ruleId":"4094","severity":1,"message":"4243","line":126,"column":25,"nodeType":"4096","messageId":"4097","endLine":126,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4244","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4245","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4246","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":18},{"ruleId":"4247","severity":1,"message":"4248","line":61,"column":9,"nodeType":"4096","messageId":"4249","endLine":61,"endColumn":13},{"ruleId":"4105","severity":1,"message":"4106","line":77,"column":15,"nodeType":"4107","messageId":"4108","endLine":77,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4243","line":130,"column":37,"nodeType":"4096","messageId":"4097","endLine":130,"endColumn":47},{"ruleId":"4133","severity":1,"message":"4134","line":43,"column":7,"nodeType":"4135","messageId":"4136","endLine":47,"endColumn":8},{"ruleId":"4105","severity":1,"message":"4106","line":122,"column":35,"nodeType":"4107","messageId":"4108","endLine":122,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4199","line":132,"column":13,"nodeType":"4096","messageId":"4097","endLine":132,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4250","line":132,"column":25,"nodeType":"4096","messageId":"4097","endLine":132,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4243","line":132,"column":37,"nodeType":"4096","messageId":"4097","endLine":132,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":189,"column":32,"nodeType":"4107","messageId":"4108","endLine":189,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":190,"column":37,"nodeType":"4107","messageId":"4108","endLine":190,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":99,"column":13,"nodeType":"4107","messageId":"4108","endLine":99,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4189","line":110,"column":11,"nodeType":"4096","messageId":"4097","endLine":110,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4251","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":91,"column":13,"nodeType":"4107","messageId":"4108","endLine":91,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4189","line":109,"column":11,"nodeType":"4096","messageId":"4097","endLine":109,"endColumn":22},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4158","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4252","line":21,"column":7,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":21},{"ruleId":"4121","severity":1,"message":"4122","line":47,"column":41,"nodeType":"4123","messageId":"4124","endLine":47,"endColumn":43},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":51,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":53},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4253","line":74,"column":25,"nodeType":"4096","messageId":"4097","endLine":74,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":73,"column":15,"nodeType":"4107","messageId":"4108","endLine":73,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":76,"column":15,"nodeType":"4107","messageId":"4108","endLine":76,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4254","line":377,"column":56,"nodeType":"4096","messageId":"4097","endLine":377,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4255","line":418,"column":71,"nodeType":"4096","messageId":"4097","endLine":418,"endColumn":90},{"ruleId":"4105","severity":1,"message":"4106","line":427,"column":85,"nodeType":"4107","messageId":"4108","endLine":427,"endColumn":87},{"ruleId":"4114","severity":1,"message":"4115","line":450,"column":13,"nodeType":"4116","endLine":450,"endColumn":74},{"ruleId":"4105","severity":1,"message":"4106","line":506,"column":44,"nodeType":"4107","messageId":"4108","endLine":506,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":515,"column":44,"nodeType":"4107","messageId":"4108","endLine":515,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":515,"column":80,"nodeType":"4107","messageId":"4108","endLine":515,"endColumn":82},{"ruleId":"4105","severity":1,"message":"4106","line":539,"column":44,"nodeType":"4107","messageId":"4108","endLine":539,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4152","line":547,"column":46,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4152","line":547,"column":80,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":82},{"ruleId":"4105","severity":1,"message":"4106","line":547,"column":116,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":118},{"ruleId":"4105","severity":1,"message":"4106","line":547,"column":152,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":154},{"ruleId":"4114","severity":1,"message":"4115","line":757,"column":29,"nodeType":"4116","endLine":757,"endColumn":148},{"ruleId":"4105","severity":1,"message":"4106","line":771,"column":28,"nodeType":"4107","messageId":"4108","endLine":771,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4256","line":1,"column":16,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4257","line":1,"column":30,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4258","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4191","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4259","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4145","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":99,"column":42,"nodeType":"4107","messageId":"4108","endLine":99,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4152","line":105,"column":17,"nodeType":"4107","messageId":"4108","endLine":105,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":125,"column":94,"nodeType":"4107","messageId":"4108","endLine":125,"endColumn":96},{"ruleId":"4105","severity":1,"message":"4106","line":138,"column":93,"nodeType":"4107","messageId":"4108","endLine":138,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":197,"column":32,"nodeType":"4107","messageId":"4108","endLine":197,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":197,"column":62,"nodeType":"4107","messageId":"4108","endLine":197,"endColumn":64},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":36,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":70,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":72},{"ruleId":"4105","severity":1,"message":"4152","line":208,"column":26,"nodeType":"4107","messageId":"4108","endLine":208,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4152","line":210,"column":35,"nodeType":"4107","messageId":"4108","endLine":210,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":322,"column":42,"nodeType":"4107","messageId":"4108","endLine":322,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":330,"column":60,"nodeType":"4107","messageId":"4108","endLine":330,"endColumn":62},{"ruleId":"4094","severity":1,"message":"4173","line":477,"column":11,"nodeType":"4096","messageId":"4097","endLine":477,"endColumn":23},{"ruleId":"4121","severity":1,"message":"4122","line":481,"column":37,"nodeType":"4123","messageId":"4124","endLine":481,"endColumn":39},{"ruleId":"4105","severity":1,"message":"4106","line":484,"column":53,"nodeType":"4107","messageId":"4108","endLine":484,"endColumn":55},{"ruleId":"4114","severity":1,"message":"4115","line":576,"column":19,"nodeType":"4116","endLine":576,"endColumn":106},{"ruleId":"4094","severity":1,"message":"4260","line":3,"column":3,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4261","line":4,"column":3,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4262","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4263","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4264","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4113","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4265","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4266","line":25,"column":3,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":11},{"ruleId":"4105","severity":1,"message":"4106","line":61,"column":23,"nodeType":"4107","messageId":"4108","endLine":61,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":62,"column":45,"nodeType":"4107","messageId":"4108","endLine":62,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":65,"column":45,"nodeType":"4107","messageId":"4108","endLine":65,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":71,"column":23,"nodeType":"4107","messageId":"4108","endLine":71,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":46,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":71,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":73},{"ruleId":"4105","severity":1,"message":"4106","line":78,"column":23,"nodeType":"4107","messageId":"4108","endLine":78,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":79,"column":45,"nodeType":"4107","messageId":"4108","endLine":79,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":86,"column":45,"nodeType":"4107","messageId":"4108","endLine":86,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":89,"column":45,"nodeType":"4107","messageId":"4108","endLine":89,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":95,"column":23,"nodeType":"4107","messageId":"4108","endLine":95,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":95,"column":102,"nodeType":"4107","messageId":"4108","endLine":95,"endColumn":104},{"ruleId":"4105","severity":1,"message":"4106","line":96,"column":46,"nodeType":"4107","messageId":"4108","endLine":96,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":96,"column":71,"nodeType":"4107","messageId":"4108","endLine":96,"endColumn":73},{"ruleId":"4105","severity":1,"message":"4106","line":102,"column":23,"nodeType":"4107","messageId":"4108","endLine":102,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":106,"column":23,"nodeType":"4107","messageId":"4108","endLine":106,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":46,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":68,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":118,"column":27,"nodeType":"4107","messageId":"4108","endLine":118,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":130,"column":23,"nodeType":"4107","messageId":"4108","endLine":130,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":140,"column":23,"nodeType":"4107","messageId":"4108","endLine":140,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":46,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":68,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":155,"column":27,"nodeType":"4107","messageId":"4108","endLine":155,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":162,"column":23,"nodeType":"4107","messageId":"4108","endLine":162,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":163,"column":46,"nodeType":"4107","messageId":"4108","endLine":163,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":163,"column":68,"nodeType":"4107","messageId":"4108","endLine":163,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":174,"column":28,"nodeType":"4107","messageId":"4108","endLine":174,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":181,"column":23,"nodeType":"4107","messageId":"4108","endLine":181,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":189,"column":45,"nodeType":"4107","messageId":"4108","endLine":189,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":46,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":68,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":205,"column":28,"nodeType":"4107","messageId":"4108","endLine":205,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":212,"column":23,"nodeType":"4107","messageId":"4108","endLine":212,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":212,"column":107,"nodeType":"4107","messageId":"4108","endLine":212,"endColumn":109},{"ruleId":"4105","severity":1,"message":"4106","line":213,"column":45,"nodeType":"4107","messageId":"4108","endLine":213,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":227,"column":46,"nodeType":"4107","messageId":"4108","endLine":227,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":227,"column":68,"nodeType":"4107","messageId":"4108","endLine":227,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":238,"column":28,"nodeType":"4107","messageId":"4108","endLine":238,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":245,"column":23,"nodeType":"4107","messageId":"4108","endLine":245,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":249,"column":23,"nodeType":"4107","messageId":"4108","endLine":249,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4145","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4159","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":18},{"ruleId":"4105","severity":1,"message":"4106","line":102,"column":35,"nodeType":"4107","messageId":"4108","endLine":102,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":90,"column":13,"nodeType":"4107","messageId":"4108","endLine":90,"endColumn":15},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4145","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4267","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4268","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4263","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4269","line":70,"column":41,"nodeType":"4096","messageId":"4097","endLine":70,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4159","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4270","line":41,"column":7,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":13},{"ruleId":"4168","severity":1,"message":"4169","line":75,"column":6,"nodeType":"4170","endLine":75,"endColumn":16},{"ruleId":"4105","severity":1,"message":"4106","line":109,"column":44,"nodeType":"4107","messageId":"4108","endLine":109,"endColumn":46},{"ruleId":"4141","severity":1,"message":"4142","line":318,"column":59,"nodeType":"4143","endLine":318,"endColumn":74},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":98,"column":13,"nodeType":"4107","messageId":"4108","endLine":98,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4189","line":109,"column":11,"nodeType":"4096","messageId":"4097","endLine":109,"endColumn":22},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4095","line":3,"column":37,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4098","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4099","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4271","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":52,"column":8,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4272","line":54,"column":8,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4273","line":55,"column":8,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4274","line":56,"column":8,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4275","line":58,"column":8,"nodeType":"4096","messageId":"4097","endLine":58,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4101","line":65,"column":3,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4102","line":66,"column":3,"nodeType":"4096","messageId":"4097","endLine":66,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4103","line":67,"column":3,"nodeType":"4096","messageId":"4097","endLine":67,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4104","line":68,"column":3,"nodeType":"4096","messageId":"4097","endLine":68,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":29,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4106","line":88,"column":12,"nodeType":"4107","messageId":"4108","endLine":88,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4276","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4260","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4263","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4277","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4117","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4117","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4278","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4279","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4280","line":20,"column":48,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4281","line":65,"column":25,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4118","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":31},{"ruleId":"4133","severity":1,"message":"4134","line":21,"column":5,"nodeType":"4135","messageId":"4136","endLine":45,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4282","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4117","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":31,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":57,"column":24,"nodeType":"4107","messageId":"4108","endLine":57,"endColumn":26},{"ruleId":"4114","severity":1,"message":"4115","line":206,"column":51,"nodeType":"4116","endLine":206,"endColumn":108},{"ruleId":"4114","severity":1,"message":"4115","line":207,"column":51,"nodeType":"4116","endLine":207,"endColumn":111},{"ruleId":"4114","severity":1,"message":"4115","line":208,"column":51,"nodeType":"4116","endLine":208,"endColumn":110},{"ruleId":"4114","severity":1,"message":"4115","line":212,"column":51,"nodeType":"4116","endLine":212,"endColumn":113},{"ruleId":"4114","severity":1,"message":"4115","line":213,"column":51,"nodeType":"4116","endLine":213,"endColumn":114},{"ruleId":"4114","severity":1,"message":"4115","line":214,"column":51,"nodeType":"4116","endLine":214,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":221,"column":51,"nodeType":"4116","endLine":221,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":222,"column":51,"nodeType":"4116","endLine":222,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":223,"column":51,"nodeType":"4116","endLine":223,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":227,"column":51,"nodeType":"4116","endLine":227,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":228,"column":51,"nodeType":"4116","endLine":228,"endColumn":119},{"ruleId":"4114","severity":1,"message":"4115","line":229,"column":51,"nodeType":"4116","endLine":229,"endColumn":108},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4283","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4276","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4284","line":98,"column":11,"nodeType":"4096","messageId":"4097","endLine":98,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":98,"column":24,"nodeType":"4107","messageId":"4108","endLine":98,"endColumn":26},{"ruleId":"4146","severity":1,"message":"4205","line":289,"column":1,"nodeType":"4148","messageId":"4206","endLine":314,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4285","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4201","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4286","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4118","line":11,"column":10,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4287","line":19,"column":5,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4288","line":21,"column":7,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4289","line":23,"column":7,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4290","line":29,"column":7,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":193,"column":32,"nodeType":"4107","messageId":"4108","endLine":193,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":207,"column":33,"nodeType":"4107","messageId":"4108","endLine":207,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4291","line":226,"column":13,"nodeType":"4096","messageId":"4097","endLine":226,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4292","line":226,"column":22,"nodeType":"4096","messageId":"4097","endLine":226,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4293","line":227,"column":13,"nodeType":"4096","messageId":"4097","endLine":227,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4294","line":227,"column":23,"nodeType":"4096","messageId":"4097","endLine":227,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4295","line":229,"column":11,"nodeType":"4096","messageId":"4097","endLine":229,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4158","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4145","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4159","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":13},{"ruleId":"4105","severity":1,"message":"4106","line":129,"column":105,"nodeType":"4107","messageId":"4108","endLine":129,"endColumn":107},{"ruleId":"4105","severity":1,"message":"4106","line":141,"column":93,"nodeType":"4107","messageId":"4108","endLine":141,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":243,"column":42,"nodeType":"4107","messageId":"4108","endLine":243,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":355,"column":13,"nodeType":"4107","messageId":"4108","endLine":355,"endColumn":15},{"ruleId":"4121","severity":1,"message":"4122","line":386,"column":37,"nodeType":"4123","messageId":"4124","endLine":386,"endColumn":39},{"ruleId":"4105","severity":1,"message":"4106","line":394,"column":68,"nodeType":"4107","messageId":"4108","endLine":394,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":394,"column":102,"nodeType":"4107","messageId":"4108","endLine":394,"endColumn":104},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4296","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4297","line":15,"column":8,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4298","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4299","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4300","line":23,"column":10,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4301","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4302","line":28,"column":8,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4117","line":30,"column":8,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":249,"column":77,"nodeType":"4107","messageId":"4108","endLine":249,"endColumn":79},{"ruleId":"4094","severity":1,"message":"4303","line":294,"column":88,"nodeType":"4096","messageId":"4097","endLine":294,"endColumn":105},{"ruleId":"4094","severity":1,"message":"4304","line":294,"column":107,"nodeType":"4096","messageId":"4097","endLine":294,"endColumn":114},{"ruleId":"4094","severity":1,"message":"4305","line":296,"column":13,"nodeType":"4096","messageId":"4097","endLine":296,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4306","line":491,"column":7,"nodeType":"4096","messageId":"4097","endLine":491,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4276","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4307","line":10,"column":10,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4308","line":10,"column":23,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4309","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4310","line":16,"column":25,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":64,"column":47,"nodeType":"4107","messageId":"4108","endLine":64,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":208,"column":24,"nodeType":"4107","messageId":"4108","endLine":208,"endColumn":26},{"ruleId":"4114","severity":1,"message":"4115","line":234,"column":15,"nodeType":"4116","endLine":234,"endColumn":105},{"ruleId":"4114","severity":1,"message":"4115","line":240,"column":17,"nodeType":"4116","endLine":240,"endColumn":75},{"ruleId":"4114","severity":1,"message":"4115","line":253,"column":50,"nodeType":"4116","endLine":253,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":254,"column":50,"nodeType":"4116","endLine":254,"endColumn":117},{"ruleId":"4114","severity":1,"message":"4115","line":255,"column":17,"nodeType":"4116","endLine":255,"endColumn":84},{"ruleId":"4128","severity":1,"message":"4129","line":262,"column":19,"nodeType":"4116","endLine":262,"endColumn":62},{"ruleId":"4128","severity":1,"message":"4129","line":276,"column":19,"nodeType":"4116","endLine":276,"endColumn":62},{"ruleId":"4128","severity":1,"message":"4129","line":290,"column":19,"nodeType":"4116","endLine":290,"endColumn":62},{"ruleId":"4141","severity":1,"message":"4142","line":366,"column":158,"nodeType":"4143","endLine":366,"endColumn":173},{"ruleId":"4141","severity":1,"message":"4142","line":393,"column":22,"nodeType":"4143","endLine":393,"endColumn":37},{"ruleId":"4114","severity":1,"message":"4115","line":395,"column":23,"nodeType":"4116","endLine":395,"endColumn":88},{"ruleId":"4114","severity":1,"message":"4115","line":402,"column":51,"nodeType":"4116","endLine":402,"endColumn":120},{"ruleId":"4114","severity":1,"message":"4115","line":403,"column":17,"nodeType":"4116","endLine":403,"endColumn":80},{"ruleId":"4128","severity":1,"message":"4129","line":410,"column":19,"nodeType":"4116","endLine":410,"endColumn":63},{"ruleId":"4128","severity":1,"message":"4129","line":423,"column":19,"nodeType":"4116","endLine":423,"endColumn":63},{"ruleId":"4128","severity":1,"message":"4129","line":436,"column":19,"nodeType":"4116","endLine":436,"endColumn":63},{"ruleId":"4311","severity":1,"message":"4312","line":585,"column":19,"nodeType":"4116","endLine":586,"endColumn":67},{"ruleId":"4114","severity":1,"message":"4115","line":601,"column":51,"nodeType":"4116","endLine":601,"endColumn":108},{"ruleId":"4114","severity":1,"message":"4115","line":602,"column":51,"nodeType":"4116","endLine":602,"endColumn":111},{"ruleId":"4114","severity":1,"message":"4115","line":603,"column":51,"nodeType":"4116","endLine":603,"endColumn":110},{"ruleId":"4114","severity":1,"message":"4115","line":607,"column":51,"nodeType":"4116","endLine":607,"endColumn":113},{"ruleId":"4114","severity":1,"message":"4115","line":608,"column":51,"nodeType":"4116","endLine":608,"endColumn":114},{"ruleId":"4114","severity":1,"message":"4115","line":609,"column":51,"nodeType":"4116","endLine":609,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":616,"column":51,"nodeType":"4116","endLine":616,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":617,"column":51,"nodeType":"4116","endLine":617,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":618,"column":51,"nodeType":"4116","endLine":618,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":622,"column":51,"nodeType":"4116","endLine":622,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":623,"column":51,"nodeType":"4116","endLine":623,"endColumn":119},{"ruleId":"4114","severity":1,"message":"4115","line":624,"column":51,"nodeType":"4116","endLine":624,"endColumn":108},{"ruleId":"4094","severity":1,"message":"4195","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4119","line":3,"column":9,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4114","severity":1,"message":"4115","line":45,"column":19,"nodeType":"4116","endLine":45,"endColumn":91},{"ruleId":"4094","severity":1,"message":"4117","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4121","severity":1,"message":"4122","line":43,"column":40,"nodeType":"4123","messageId":"4124","endLine":43,"endColumn":42},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":81,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":83},{"ruleId":"4105","severity":1,"message":"4106","line":49,"column":91,"nodeType":"4107","messageId":"4108","endLine":49,"endColumn":93},{"ruleId":"4114","severity":1,"message":"4115","line":70,"column":19,"nodeType":"4116","endLine":70,"endColumn":91},{"ruleId":"4105","severity":1,"message":"4106","line":10,"column":70,"nodeType":"4107","messageId":"4108","endLine":10,"endColumn":72},{"ruleId":"4094","severity":1,"message":"4313","line":9,"column":55,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":62},{"ruleId":"4094","severity":1,"message":"4314","line":9,"column":64,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":73},{"ruleId":"4094","severity":1,"message":"4315","line":9,"column":75,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4130","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4130","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4301","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":25},{"ruleId":"4121","severity":1,"message":"4122","line":38,"column":40,"nodeType":"4123","messageId":"4124","endLine":38,"endColumn":42},{"ruleId":"4121","severity":1,"message":"4122","line":45,"column":33,"nodeType":"4123","messageId":"4124","endLine":45,"endColumn":35},{"ruleId":"4121","severity":1,"message":"4122","line":52,"column":37,"nodeType":"4123","messageId":"4124","endLine":52,"endColumn":39},{"ruleId":"4114","severity":1,"message":"4115","line":118,"column":23,"nodeType":"4116","endLine":118,"endColumn":102},{"ruleId":"4114","severity":1,"message":"4115","line":136,"column":23,"nodeType":"4116","endLine":136,"endColumn":102},{"ruleId":"4114","severity":1,"message":"4115","line":173,"column":23,"nodeType":"4116","endLine":173,"endColumn":102},{"ruleId":"4094","severity":1,"message":"4316","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4119","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4317","line":9,"column":9,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4318","line":72,"column":13,"nodeType":"4096","messageId":"4097","endLine":72,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4319","line":72,"column":19,"nodeType":"4096","messageId":"4097","endLine":72,"endColumn":26},{"ruleId":"4114","severity":1,"message":"4115","line":102,"column":19,"nodeType":"4116","endLine":102,"endColumn":91},{"ruleId":"4094","severity":1,"message":"4225","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":16},{"ruleId":"4320","severity":1,"message":"4321","line":71,"column":46,"nodeType":"4143","endLine":71,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4146","severity":1,"message":"4147","line":18,"column":5,"nodeType":"4148","messageId":"4149","endLine":20,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":26,"column":13,"nodeType":"4107","messageId":"4108","endLine":26,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":28,"column":18,"nodeType":"4107","messageId":"4108","endLine":28,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":18,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":35,"column":18,"nodeType":"4107","messageId":"4108","endLine":35,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4120","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4314","line":9,"column":64,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":73},{"ruleId":"4094","severity":1,"message":"4315","line":9,"column":75,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":42,"column":1,"nodeType":"4148","messageId":"4206","endLine":61,"endColumn":6},{"ruleId":"4207","severity":1,"message":"4208","line":5,"column":3,"nodeType":"4209","messageId":"4210","endLine":7,"endColumn":4},{"ruleId":"4311","severity":1,"message":"4312","line":13,"column":9,"nodeType":"4116","endLine":23,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4158","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4145","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4120","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4160","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":120,"column":40,"nodeType":"4107","messageId":"4108","endLine":120,"endColumn":42},{"ruleId":"4105","severity":1,"message":"4106","line":121,"column":45,"nodeType":"4107","messageId":"4108","endLine":121,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":122,"column":47,"nodeType":"4107","messageId":"4108","endLine":122,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":123,"column":64,"nodeType":"4107","messageId":"4108","endLine":123,"endColumn":66},{"ruleId":"4105","severity":1,"message":"4106","line":138,"column":94,"nodeType":"4107","messageId":"4108","endLine":138,"endColumn":96},{"ruleId":"4105","severity":1,"message":"4106","line":152,"column":93,"nodeType":"4107","messageId":"4108","endLine":152,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":223,"column":42,"nodeType":"4107","messageId":"4108","endLine":223,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":244,"column":13,"nodeType":"4107","messageId":"4108","endLine":244,"endColumn":15},{"ruleId":"4121","severity":1,"message":"4122","line":385,"column":49,"nodeType":"4123","messageId":"4124","endLine":385,"endColumn":51},{"ruleId":"4141","severity":1,"message":"4142","line":390,"column":92,"nodeType":"4143","endLine":390,"endColumn":107},{"ruleId":"4094","severity":1,"message":"4322","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4323","line":15,"column":7,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":149,"column":31,"nodeType":"4107","messageId":"4108","endLine":149,"endColumn":33},{"ruleId":"4105","severity":1,"message":"4106","line":172,"column":35,"nodeType":"4107","messageId":"4108","endLine":172,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":31,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4145","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4285","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4117","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4324","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4325","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4326","line":23,"column":3,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4327","line":24,"column":3,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4266","line":25,"column":3,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":11},{"ruleId":"4105","severity":1,"message":"4152","line":143,"column":31,"nodeType":"4107","messageId":"4108","endLine":143,"endColumn":33},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":32,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":151,"column":32,"nodeType":"4107","messageId":"4108","endLine":151,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":151,"column":54,"nodeType":"4107","messageId":"4108","endLine":151,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":169,"column":43,"nodeType":"4107","messageId":"4108","endLine":169,"endColumn":45},{"ruleId":"4105","severity":1,"message":"4106","line":169,"column":65,"nodeType":"4107","messageId":"4108","endLine":169,"endColumn":67},{"ruleId":"4105","severity":1,"message":"4106","line":7,"column":17,"nodeType":"4107","messageId":"4108","endLine":7,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":9,"column":23,"nodeType":"4107","messageId":"4108","endLine":9,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4328","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4329","line":2,"column":23,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4330","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4331","line":39,"column":10,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4332","line":39,"column":20,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":31},{"ruleId":"4333","severity":1,"message":"4334","line":67,"column":5,"nodeType":"4335","endLine":67,"endColumn":39,"suggestions":"4336"},{"ruleId":"4094","severity":1,"message":"4337","line":86,"column":7,"nodeType":"4096","messageId":"4097","endLine":86,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":136,"column":23,"nodeType":"4107","messageId":"4108","endLine":136,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":138,"column":35,"nodeType":"4107","messageId":"4108","endLine":138,"endColumn":37},{"ruleId":"4114","severity":1,"message":"4115","line":140,"column":23,"nodeType":"4116","endLine":140,"endColumn":103},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":37,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":39},{"ruleId":"4114","severity":1,"message":"4115","line":146,"column":25,"nodeType":"4116","endLine":146,"endColumn":103},{"ruleId":"4105","severity":1,"message":"4152","line":30,"column":25,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4152","line":30,"column":53,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":76,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":78},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":101,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":103},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":124,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":126},{"ruleId":"4114","severity":1,"message":"4115","line":32,"column":17,"nodeType":"4116","endLine":32,"endColumn":97},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":29,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4152","line":37,"column":52,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":54},{"ruleId":"4114","severity":1,"message":"4115","line":39,"column":19,"nodeType":"4116","endLine":39,"endColumn":97},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":29,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":52,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":54},{"ruleId":"4105","severity":1,"message":"4106","line":50,"column":26,"nodeType":"4107","messageId":"4108","endLine":50,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4106","line":50,"column":54,"nodeType":"4107","messageId":"4108","endLine":50,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":50,"column":74,"nodeType":"4107","messageId":"4108","endLine":50,"endColumn":76},{"ruleId":"4094","severity":1,"message":"4338","line":7,"column":25,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4339","line":11,"column":21,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":33},{"ruleId":"4333","severity":1,"message":"4340","line":15,"column":6,"nodeType":"4335","endLine":15,"endColumn":13,"suggestions":"4341"},{"ruleId":"4105","severity":1,"message":"4106","line":18,"column":19,"nodeType":"4107","messageId":"4108","endLine":18,"endColumn":21},{"ruleId":"4105","severity":1,"message":"4106","line":20,"column":27,"nodeType":"4107","messageId":"4108","endLine":20,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":65,"column":36,"nodeType":"4107","messageId":"4108","endLine":65,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":36,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":67,"column":36,"nodeType":"4107","messageId":"4108","endLine":67,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4301","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":25},{"ruleId":"4121","severity":1,"message":"4122","line":38,"column":43,"nodeType":"4123","messageId":"4124","endLine":38,"endColumn":45},{"ruleId":"4121","severity":1,"message":"4122","line":46,"column":37,"nodeType":"4123","messageId":"4124","endLine":46,"endColumn":39},{"ruleId":"4121","severity":1,"message":"4122","line":53,"column":41,"nodeType":"4123","messageId":"4124","endLine":53,"endColumn":43},{"ruleId":"4114","severity":1,"message":"4115","line":119,"column":23,"nodeType":"4116","endLine":119,"endColumn":102},{"ruleId":"4114","severity":1,"message":"4115","line":137,"column":23,"nodeType":"4116","endLine":137,"endColumn":102},{"ruleId":"4114","severity":1,"message":"4115","line":174,"column":23,"nodeType":"4116","endLine":174,"endColumn":102},{"ruleId":"4094","severity":1,"message":"4120","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4162","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4342","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4343","line":5,"column":29,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":45},{"ruleId":"4105","severity":1,"message":"4106","line":21,"column":16,"nodeType":"4107","messageId":"4108","endLine":21,"endColumn":18},{"ruleId":"4105","severity":1,"message":"4106","line":22,"column":16,"nodeType":"4107","messageId":"4108","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4316","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4119","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4317","line":10,"column":9,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":60,"column":13,"nodeType":"4107","messageId":"4108","endLine":60,"endColumn":15},{"ruleId":"4114","severity":1,"message":"4115","line":102,"column":29,"nodeType":"4116","endLine":102,"endColumn":101},{"ruleId":"4094","severity":1,"message":"4317","line":4,"column":9,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4343","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4342","line":6,"column":28,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4191","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":18},{"ruleId":"4207","severity":1,"message":"4208","line":12,"column":3,"nodeType":"4209","messageId":"4210","endLine":14,"endColumn":4},{"ruleId":"4105","severity":1,"message":"4106","line":34,"column":22,"nodeType":"4107","messageId":"4108","endLine":34,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":41,"column":32,"nodeType":"4107","messageId":"4108","endLine":41,"endColumn":34},{"ruleId":"4128","severity":1,"message":"4344","line":12,"column":13,"nodeType":"4116","endLine":12,"endColumn":24},{"ruleId":"4128","severity":1,"message":"4344","line":18,"column":13,"nodeType":"4116","endLine":18,"endColumn":24},{"ruleId":"4128","severity":1,"message":"4344","line":24,"column":13,"nodeType":"4116","endLine":24,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4345","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4145","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":6,"column":14,"nodeType":"4107","messageId":"4108","endLine":6,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4346","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4282","line":1,"column":44,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4227","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4347","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4348","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4349","line":9,"column":31,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4350","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":22,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":47,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":44,"column":20,"nodeType":"4107","messageId":"4108","endLine":44,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":44,"column":45,"nodeType":"4107","messageId":"4108","endLine":44,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4351","line":10,"column":9,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4352","line":1,"column":37,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4353","line":1,"column":50,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":56},{"ruleId":"4094","severity":1,"message":"4328","line":2,"column":9,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4354","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":18},{"ruleId":"4333","severity":1,"message":"4355","line":31,"column":6,"nodeType":"4335","endLine":31,"endColumn":38,"suggestions":"4356"},{"ruleId":"4105","severity":1,"message":"4106","line":125,"column":75,"nodeType":"4107","messageId":"4108","endLine":125,"endColumn":77},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":62,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":64},{"ruleId":"4105","severity":1,"message":"4106","line":171,"column":65,"nodeType":"4107","messageId":"4108","endLine":171,"endColumn":67},{"ruleId":"4094","severity":1,"message":"4352","line":1,"column":37,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4353","line":1,"column":50,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":56},{"ruleId":"4094","severity":1,"message":"4276","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4182","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4251","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4357","line":264,"column":9,"nodeType":"4096","messageId":"4097","endLine":264,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4352","line":1,"column":37,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4353","line":1,"column":50,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":25,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4106","line":39,"column":33,"nodeType":"4107","messageId":"4108","endLine":39,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":41,"column":33,"nodeType":"4107","messageId":"4108","endLine":41,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4276","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4307","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4308","line":8,"column":23,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4309","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4310","line":14,"column":25,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":38},{"ruleId":"4114","severity":1,"message":"4115","line":104,"column":15,"nodeType":"4116","endLine":104,"endColumn":105},{"ruleId":"4114","severity":1,"message":"4115","line":110,"column":17,"nodeType":"4116","endLine":110,"endColumn":75},{"ruleId":"4114","severity":1,"message":"4115","line":123,"column":49,"nodeType":"4116","endLine":123,"endColumn":106},{"ruleId":"4114","severity":1,"message":"4115","line":124,"column":49,"nodeType":"4116","endLine":124,"endColumn":116},{"ruleId":"4114","severity":1,"message":"4115","line":125,"column":17,"nodeType":"4116","endLine":125,"endColumn":84},{"ruleId":"4141","severity":1,"message":"4142","line":233,"column":185,"nodeType":"4143","endLine":233,"endColumn":200},{"ruleId":"4141","severity":1,"message":"4142","line":256,"column":22,"nodeType":"4143","endLine":256,"endColumn":37},{"ruleId":"4114","severity":1,"message":"4115","line":258,"column":23,"nodeType":"4116","endLine":258,"endColumn":88},{"ruleId":"4114","severity":1,"message":"4115","line":267,"column":49,"nodeType":"4116","endLine":267,"endColumn":118},{"ruleId":"4114","severity":1,"message":"4115","line":268,"column":17,"nodeType":"4116","endLine":268,"endColumn":80},{"ruleId":"4311","severity":1,"message":"4312","line":403,"column":19,"nodeType":"4116","endLine":403,"endColumn":75},{"ruleId":"4114","severity":1,"message":"4115","line":416,"column":51,"nodeType":"4116","endLine":416,"endColumn":108},{"ruleId":"4114","severity":1,"message":"4115","line":417,"column":51,"nodeType":"4116","endLine":417,"endColumn":111},{"ruleId":"4114","severity":1,"message":"4115","line":418,"column":51,"nodeType":"4116","endLine":418,"endColumn":110},{"ruleId":"4114","severity":1,"message":"4115","line":419,"column":51,"nodeType":"4116","endLine":419,"endColumn":113},{"ruleId":"4114","severity":1,"message":"4115","line":420,"column":51,"nodeType":"4116","endLine":420,"endColumn":114},{"ruleId":"4114","severity":1,"message":"4115","line":421,"column":51,"nodeType":"4116","endLine":421,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":423,"column":51,"nodeType":"4116","endLine":423,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":424,"column":51,"nodeType":"4116","endLine":424,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":425,"column":51,"nodeType":"4116","endLine":425,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":426,"column":51,"nodeType":"4116","endLine":426,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":427,"column":51,"nodeType":"4116","endLine":427,"endColumn":119},{"ruleId":"4114","severity":1,"message":"4115","line":428,"column":51,"nodeType":"4116","endLine":428,"endColumn":108},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4358","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4359","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4360","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4117","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":14},{"ruleId":"4333","severity":1,"message":"4361","line":95,"column":6,"nodeType":"4335","endLine":95,"endColumn":8,"suggestions":"4362"},{"ruleId":"4333","severity":1,"message":"4363","line":99,"column":6,"nodeType":"4335","endLine":99,"endColumn":38,"suggestions":"4364"},{"ruleId":"4365","severity":1,"message":"4366","line":42,"column":9,"nodeType":"4116","endLine":42,"endColumn":81},{"ruleId":"4090","replacedBy":"4367"},{"ruleId":"4092","replacedBy":"4368"},{"ruleId":"4094","severity":1,"message":"4159","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4117","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4369","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4158","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4370","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4162","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4120","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4371","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4372","line":27,"column":7,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4252","line":37,"column":7,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":21},{"ruleId":"4168","severity":1,"message":"4169","line":72,"column":5,"nodeType":"4170","endLine":72,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":123,"column":44,"nodeType":"4107","messageId":"4108","endLine":123,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":171,"column":28,"nodeType":"4107","messageId":"4108","endLine":171,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4229","line":258,"column":13,"nodeType":"4096","messageId":"4097","endLine":258,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4373","line":3,"column":9,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4374","line":3,"column":14,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4375","line":3,"column":23,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4376","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4301","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":25},{"ruleId":"4121","severity":1,"message":"4122","line":36,"column":32,"nodeType":"4123","messageId":"4124","endLine":36,"endColumn":34},{"ruleId":"4114","severity":1,"message":"4115","line":61,"column":23,"nodeType":"4116","endLine":61,"endColumn":102},{"ruleId":"4094","severity":1,"message":"4162","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4342","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4343","line":5,"column":29,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4377","line":10,"column":40,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":47},{"ruleId":"4090","replacedBy":"4091"},{"ruleId":"4092","replacedBy":"4093"},{"ruleId":"4378","severity":1,"message":"4379","line":12,"column":23,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":35},{"ruleId":"4121","severity":1,"message":"4380","line":32,"column":45,"nodeType":"4123","messageId":"4381","endLine":32,"endColumn":47},{"ruleId":"4378","severity":1,"message":"4310","line":6,"column":25,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":38},{"ruleId":"4382","severity":1,"message":"4383","line":109,"column":13,"nodeType":"4384","endLine":110,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4385","line":3,"column":21,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4310","line":7,"column":25,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4386","line":18,"column":10,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4387","line":18,"column":25,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4388","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4389","line":19,"column":24,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":39},{"ruleId":"4333","severity":1,"message":"4390","line":25,"column":6,"nodeType":"4335","endLine":25,"endColumn":21,"suggestions":"4391"},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":33,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":109,"column":35,"nodeType":"4107","messageId":"4108","endLine":109,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":132,"column":31,"nodeType":"4107","messageId":"4108","endLine":132,"endColumn":33},{"ruleId":"4090","replacedBy":"4392"},{"ruleId":"4092","replacedBy":"4393"},{"ruleId":"4094","severity":1,"message":"4095","line":3,"column":37,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4098","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4099","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4271","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":48,"column":8,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4272","line":50,"column":8,"nodeType":"4096","messageId":"4097","endLine":50,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4273","line":51,"column":8,"nodeType":"4096","messageId":"4097","endLine":51,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4274","line":52,"column":8,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4275","line":54,"column":8,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4101","line":61,"column":3,"nodeType":"4096","messageId":"4097","endLine":61,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4102","line":62,"column":3,"nodeType":"4096","messageId":"4097","endLine":62,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4103","line":63,"column":3,"nodeType":"4096","messageId":"4097","endLine":63,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4104","line":64,"column":3,"nodeType":"4096","messageId":"4097","endLine":64,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":83,"column":29,"nodeType":"4107","messageId":"4108","endLine":83,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4106","line":84,"column":12,"nodeType":"4107","messageId":"4108","endLine":84,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":69,"column":39,"nodeType":"4107","messageId":"4108","endLine":69,"endColumn":41},{"ruleId":"4105","severity":1,"message":"4106","line":69,"column":73,"nodeType":"4107","messageId":"4108","endLine":69,"endColumn":75},{"ruleId":"4105","severity":1,"message":"4106","line":70,"column":56,"nodeType":"4107","messageId":"4108","endLine":70,"endColumn":58},{"ruleId":"4105","severity":1,"message":"4106","line":71,"column":27,"nodeType":"4107","messageId":"4108","endLine":71,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":73,"column":33,"nodeType":"4107","messageId":"4108","endLine":73,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":74,"column":51,"nodeType":"4107","messageId":"4108","endLine":74,"endColumn":53},{"ruleId":"4105","severity":1,"message":"4106","line":79,"column":35,"nodeType":"4107","messageId":"4108","endLine":79,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":80,"column":51,"nodeType":"4107","messageId":"4108","endLine":80,"endColumn":53},{"ruleId":"4114","severity":1,"message":"4115","line":23,"column":11,"nodeType":"4116","endLine":23,"endColumn":82},{"ruleId":"4094","severity":1,"message":"4276","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4260","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4263","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4277","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4117","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4113","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4118","line":10,"column":10,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4127","line":11,"column":10,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4126","line":14,"column":10,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":25},{"ruleId":"4128","severity":1,"message":"4129","line":128,"column":25,"nodeType":"4116","endLine":128,"endColumn":63},{"ruleId":"4094","severity":1,"message":"4352","line":1,"column":37,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4353","line":1,"column":50,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":56},{"ruleId":"4094","severity":1,"message":"4328","line":2,"column":9,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4354","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":18},{"ruleId":"4333","severity":1,"message":"4355","line":31,"column":6,"nodeType":"4335","endLine":31,"endColumn":38,"suggestions":"4394"},{"ruleId":"4105","severity":1,"message":"4106","line":125,"column":75,"nodeType":"4107","messageId":"4108","endLine":125,"endColumn":77},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":62,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":64},{"ruleId":"4105","severity":1,"message":"4106","line":171,"column":65,"nodeType":"4107","messageId":"4108","endLine":171,"endColumn":67},{"ruleId":"4094","severity":1,"message":"4130","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":85,"column":18,"nodeType":"4107","messageId":"4108","endLine":85,"endColumn":20},{"ruleId":"4128","severity":1,"message":"4129","line":111,"column":17,"nodeType":"4116","endLine":111,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4117","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4324","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4325","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4326","line":23,"column":3,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4327","line":24,"column":3,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4266","line":25,"column":3,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":11},{"ruleId":"4105","severity":1,"message":"4152","line":143,"column":31,"nodeType":"4107","messageId":"4108","endLine":143,"endColumn":33},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":32,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":151,"column":32,"nodeType":"4107","messageId":"4108","endLine":151,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":151,"column":54,"nodeType":"4107","messageId":"4108","endLine":151,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":169,"column":43,"nodeType":"4107","messageId":"4108","endLine":169,"endColumn":45},{"ruleId":"4105","severity":1,"message":"4106","line":169,"column":65,"nodeType":"4107","messageId":"4108","endLine":169,"endColumn":67},{"ruleId":"4094","severity":1,"message":"4281","line":65,"column":25,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4118","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":31},{"ruleId":"4133","severity":1,"message":"4134","line":21,"column":5,"nodeType":"4135","messageId":"4136","endLine":45,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4282","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4117","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":31,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":57,"column":24,"nodeType":"4107","messageId":"4108","endLine":57,"endColumn":26},{"ruleId":"4114","severity":1,"message":"4115","line":206,"column":51,"nodeType":"4116","endLine":206,"endColumn":108},{"ruleId":"4114","severity":1,"message":"4115","line":207,"column":51,"nodeType":"4116","endLine":207,"endColumn":111},{"ruleId":"4114","severity":1,"message":"4115","line":208,"column":51,"nodeType":"4116","endLine":208,"endColumn":110},{"ruleId":"4114","severity":1,"message":"4115","line":212,"column":51,"nodeType":"4116","endLine":212,"endColumn":113},{"ruleId":"4114","severity":1,"message":"4115","line":213,"column":51,"nodeType":"4116","endLine":213,"endColumn":114},{"ruleId":"4114","severity":1,"message":"4115","line":214,"column":51,"nodeType":"4116","endLine":214,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":221,"column":51,"nodeType":"4116","endLine":221,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":222,"column":51,"nodeType":"4116","endLine":222,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":223,"column":51,"nodeType":"4116","endLine":223,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":227,"column":51,"nodeType":"4116","endLine":227,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":228,"column":51,"nodeType":"4116","endLine":228,"endColumn":119},{"ruleId":"4114","severity":1,"message":"4115","line":229,"column":51,"nodeType":"4116","endLine":229,"endColumn":108},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4132","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":23},{"ruleId":"4114","severity":1,"message":"4115","line":29,"column":11,"nodeType":"4116","endLine":29,"endColumn":82},{"ruleId":"4133","severity":1,"message":"4134","line":73,"column":7,"nodeType":"4135","messageId":"4136","endLine":92,"endColumn":8},{"ruleId":"4137","severity":1,"message":"4138","line":108,"column":62,"nodeType":"4139","messageId":"4140","endLine":108,"endColumn":63},{"ruleId":"4141","severity":1,"message":"4142","line":310,"column":67,"nodeType":"4143","endLine":310,"endColumn":82},{"ruleId":"4141","severity":1,"message":"4142","line":314,"column":72,"nodeType":"4143","endLine":314,"endColumn":87},{"ruleId":"4141","severity":1,"message":"4142","line":318,"column":63,"nodeType":"4143","endLine":318,"endColumn":78},{"ruleId":"4094","severity":1,"message":"4144","line":18,"column":9,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4145","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":45,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":47},{"ruleId":"4146","severity":1,"message":"4147","line":195,"column":5,"nodeType":"4148","messageId":"4149","endLine":197,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4150","line":223,"column":11,"nodeType":"4096","messageId":"4097","endLine":223,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":239,"column":28,"nodeType":"4107","messageId":"4108","endLine":239,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":274,"column":29,"nodeType":"4107","messageId":"4108","endLine":274,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4283","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4276","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4284","line":98,"column":11,"nodeType":"4096","messageId":"4097","endLine":98,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":98,"column":24,"nodeType":"4107","messageId":"4108","endLine":98,"endColumn":26},{"ruleId":"4146","severity":1,"message":"4205","line":289,"column":1,"nodeType":"4148","messageId":"4206","endLine":314,"endColumn":16},{"ruleId":"4133","severity":1,"message":"4134","line":126,"column":5,"nodeType":"4135","messageId":"4136","endLine":132,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4151","line":150,"column":45,"nodeType":"4096","messageId":"4097","endLine":150,"endColumn":58},{"ruleId":"4105","severity":1,"message":"4152","line":164,"column":21,"nodeType":"4107","messageId":"4108","endLine":164,"endColumn":23},{"ruleId":"4105","severity":1,"message":"4106","line":165,"column":22,"nodeType":"4107","messageId":"4108","endLine":165,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":172,"column":22,"nodeType":"4107","messageId":"4108","endLine":172,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":172,"column":44,"nodeType":"4107","messageId":"4108","endLine":172,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":191,"column":33,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":191,"column":55,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":57},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":25,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":42,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":74,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":76},{"ruleId":"4105","severity":1,"message":"4106","line":204,"column":25,"nodeType":"4107","messageId":"4108","endLine":204,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4154","line":204,"column":36,"nodeType":"4155","messageId":"4156","endLine":204,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":204,"column":47,"nodeType":"4107","messageId":"4108","endLine":204,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4154","line":204,"column":57,"nodeType":"4155","messageId":"4156","endLine":204,"endColumn":59},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":44,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":75,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":77},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":103,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":105},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":128,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":130},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":160,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":162},{"ruleId":"4105","severity":1,"message":"4106","line":209,"column":192,"nodeType":"4107","messageId":"4108","endLine":209,"endColumn":194},{"ruleId":"4105","severity":1,"message":"4106","line":216,"column":44,"nodeType":"4107","messageId":"4108","endLine":216,"endColumn":46},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4276","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4307","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4308","line":8,"column":23,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4309","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4310","line":14,"column":25,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":38},{"ruleId":"4114","severity":1,"message":"4115","line":104,"column":15,"nodeType":"4116","endLine":104,"endColumn":105},{"ruleId":"4114","severity":1,"message":"4115","line":110,"column":17,"nodeType":"4116","endLine":110,"endColumn":75},{"ruleId":"4114","severity":1,"message":"4115","line":123,"column":49,"nodeType":"4116","endLine":123,"endColumn":106},{"ruleId":"4114","severity":1,"message":"4115","line":124,"column":49,"nodeType":"4116","endLine":124,"endColumn":116},{"ruleId":"4114","severity":1,"message":"4115","line":125,"column":17,"nodeType":"4116","endLine":125,"endColumn":84},{"ruleId":"4141","severity":1,"message":"4142","line":233,"column":185,"nodeType":"4143","endLine":233,"endColumn":200},{"ruleId":"4141","severity":1,"message":"4142","line":256,"column":22,"nodeType":"4143","endLine":256,"endColumn":37},{"ruleId":"4114","severity":1,"message":"4115","line":258,"column":23,"nodeType":"4116","endLine":258,"endColumn":88},{"ruleId":"4114","severity":1,"message":"4115","line":267,"column":49,"nodeType":"4116","endLine":267,"endColumn":118},{"ruleId":"4114","severity":1,"message":"4115","line":268,"column":17,"nodeType":"4116","endLine":268,"endColumn":80},{"ruleId":"4311","severity":1,"message":"4312","line":403,"column":19,"nodeType":"4116","endLine":403,"endColumn":75},{"ruleId":"4114","severity":1,"message":"4115","line":416,"column":51,"nodeType":"4116","endLine":416,"endColumn":108},{"ruleId":"4114","severity":1,"message":"4115","line":417,"column":51,"nodeType":"4116","endLine":417,"endColumn":111},{"ruleId":"4114","severity":1,"message":"4115","line":418,"column":51,"nodeType":"4116","endLine":418,"endColumn":110},{"ruleId":"4114","severity":1,"message":"4115","line":419,"column":51,"nodeType":"4116","endLine":419,"endColumn":113},{"ruleId":"4114","severity":1,"message":"4115","line":420,"column":51,"nodeType":"4116","endLine":420,"endColumn":114},{"ruleId":"4114","severity":1,"message":"4115","line":421,"column":51,"nodeType":"4116","endLine":421,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":423,"column":51,"nodeType":"4116","endLine":423,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":424,"column":51,"nodeType":"4116","endLine":424,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":425,"column":51,"nodeType":"4116","endLine":425,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":426,"column":51,"nodeType":"4116","endLine":426,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":427,"column":51,"nodeType":"4116","endLine":427,"endColumn":119},{"ruleId":"4114","severity":1,"message":"4115","line":428,"column":51,"nodeType":"4116","endLine":428,"endColumn":108},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4132","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4157","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":29},{"ruleId":"4114","severity":1,"message":"4115","line":29,"column":11,"nodeType":"4116","endLine":29,"endColumn":87},{"ruleId":"4128","severity":1,"message":"4129","line":71,"column":11,"nodeType":"4116","endLine":71,"endColumn":74},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4132","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4157","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":29},{"ruleId":"4114","severity":1,"message":"4115","line":29,"column":11,"nodeType":"4116","endLine":29,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4296","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4297","line":15,"column":8,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4298","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4299","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4300","line":23,"column":10,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4301","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4302","line":28,"column":8,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4117","line":30,"column":8,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":249,"column":77,"nodeType":"4107","messageId":"4108","endLine":249,"endColumn":79},{"ruleId":"4094","severity":1,"message":"4303","line":294,"column":88,"nodeType":"4096","messageId":"4097","endLine":294,"endColumn":105},{"ruleId":"4094","severity":1,"message":"4304","line":294,"column":107,"nodeType":"4096","messageId":"4097","endLine":294,"endColumn":114},{"ruleId":"4094","severity":1,"message":"4305","line":296,"column":13,"nodeType":"4096","messageId":"4097","endLine":296,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4306","line":491,"column":7,"nodeType":"4096","messageId":"4097","endLine":491,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4112","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4113","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4111","line":12,"column":7,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4131","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4276","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4307","line":10,"column":10,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4308","line":10,"column":23,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4309","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4310","line":16,"column":25,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":64,"column":47,"nodeType":"4107","messageId":"4108","endLine":64,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":208,"column":24,"nodeType":"4107","messageId":"4108","endLine":208,"endColumn":26},{"ruleId":"4114","severity":1,"message":"4115","line":234,"column":15,"nodeType":"4116","endLine":234,"endColumn":105},{"ruleId":"4114","severity":1,"message":"4115","line":240,"column":17,"nodeType":"4116","endLine":240,"endColumn":75},{"ruleId":"4114","severity":1,"message":"4115","line":253,"column":50,"nodeType":"4116","endLine":253,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":254,"column":50,"nodeType":"4116","endLine":254,"endColumn":117},{"ruleId":"4114","severity":1,"message":"4115","line":255,"column":17,"nodeType":"4116","endLine":255,"endColumn":84},{"ruleId":"4128","severity":1,"message":"4129","line":262,"column":19,"nodeType":"4116","endLine":262,"endColumn":62},{"ruleId":"4128","severity":1,"message":"4129","line":276,"column":19,"nodeType":"4116","endLine":276,"endColumn":62},{"ruleId":"4128","severity":1,"message":"4129","line":290,"column":19,"nodeType":"4116","endLine":290,"endColumn":62},{"ruleId":"4141","severity":1,"message":"4142","line":366,"column":158,"nodeType":"4143","endLine":366,"endColumn":173},{"ruleId":"4141","severity":1,"message":"4142","line":393,"column":22,"nodeType":"4143","endLine":393,"endColumn":37},{"ruleId":"4114","severity":1,"message":"4115","line":395,"column":23,"nodeType":"4116","endLine":395,"endColumn":88},{"ruleId":"4114","severity":1,"message":"4115","line":402,"column":51,"nodeType":"4116","endLine":402,"endColumn":120},{"ruleId":"4114","severity":1,"message":"4115","line":403,"column":17,"nodeType":"4116","endLine":403,"endColumn":80},{"ruleId":"4128","severity":1,"message":"4129","line":410,"column":19,"nodeType":"4116","endLine":410,"endColumn":63},{"ruleId":"4128","severity":1,"message":"4129","line":423,"column":19,"nodeType":"4116","endLine":423,"endColumn":63},{"ruleId":"4128","severity":1,"message":"4129","line":436,"column":19,"nodeType":"4116","endLine":436,"endColumn":63},{"ruleId":"4311","severity":1,"message":"4312","line":585,"column":19,"nodeType":"4116","endLine":586,"endColumn":67},{"ruleId":"4114","severity":1,"message":"4115","line":601,"column":51,"nodeType":"4116","endLine":601,"endColumn":108},{"ruleId":"4114","severity":1,"message":"4115","line":602,"column":51,"nodeType":"4116","endLine":602,"endColumn":111},{"ruleId":"4114","severity":1,"message":"4115","line":603,"column":51,"nodeType":"4116","endLine":603,"endColumn":110},{"ruleId":"4114","severity":1,"message":"4115","line":607,"column":51,"nodeType":"4116","endLine":607,"endColumn":113},{"ruleId":"4114","severity":1,"message":"4115","line":608,"column":51,"nodeType":"4116","endLine":608,"endColumn":114},{"ruleId":"4114","severity":1,"message":"4115","line":609,"column":51,"nodeType":"4116","endLine":609,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":616,"column":51,"nodeType":"4116","endLine":616,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":617,"column":51,"nodeType":"4116","endLine":617,"endColumn":107},{"ruleId":"4114","severity":1,"message":"4115","line":618,"column":51,"nodeType":"4116","endLine":618,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":622,"column":51,"nodeType":"4116","endLine":622,"endColumn":109},{"ruleId":"4114","severity":1,"message":"4115","line":623,"column":51,"nodeType":"4116","endLine":623,"endColumn":119},{"ruleId":"4114","severity":1,"message":"4115","line":624,"column":51,"nodeType":"4116","endLine":624,"endColumn":108},{"ruleId":"4163","severity":1,"message":"4164","line":4,"column":1,"nodeType":"4165","endLine":40,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4166","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4090","replacedBy":"4392"},{"ruleId":"4092","replacedBy":"4393"},{"ruleId":"4094","severity":1,"message":"4157","line":7,"column":64,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4117","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4141","severity":1,"message":"4142","line":22,"column":57,"nodeType":"4143","endLine":22,"endColumn":72},{"ruleId":"4141","severity":1,"message":"4142","line":23,"column":62,"nodeType":"4143","endLine":23,"endColumn":77},{"ruleId":"4141","severity":1,"message":"4142","line":24,"column":53,"nodeType":"4143","endLine":24,"endColumn":68},{"ruleId":"4094","severity":1,"message":"4102","line":28,"column":3,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4157","line":32,"column":3,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4167","line":33,"column":3,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":20},{"ruleId":"4168","severity":1,"message":"4169","line":98,"column":9,"nodeType":"4170","endLine":98,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":220,"column":18,"nodeType":"4107","messageId":"4108","endLine":220,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":222,"column":23,"nodeType":"4107","messageId":"4108","endLine":222,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":248,"column":30,"nodeType":"4107","messageId":"4108","endLine":248,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":248,"column":63,"nodeType":"4107","messageId":"4108","endLine":248,"endColumn":65},{"ruleId":"4094","severity":1,"message":"4171","line":279,"column":54,"nodeType":"4096","messageId":"4097","endLine":279,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4172","line":279,"column":79,"nodeType":"4096","messageId":"4097","endLine":279,"endColumn":100},{"ruleId":"4105","severity":1,"message":"4152","line":282,"column":18,"nodeType":"4107","messageId":"4108","endLine":282,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4152","line":282,"column":42,"nodeType":"4107","messageId":"4108","endLine":282,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4152","line":282,"column":70,"nodeType":"4107","messageId":"4108","endLine":282,"endColumn":72},{"ruleId":"4094","severity":1,"message":"4173","line":286,"column":11,"nodeType":"4096","messageId":"4097","endLine":286,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4195","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4159","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4158","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4168","severity":1,"message":"4169","line":67,"column":5,"nodeType":"4170","endLine":67,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4224","line":78,"column":7,"nodeType":"4096","messageId":"4097","endLine":78,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":44,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":157,"column":28,"nodeType":"4107","messageId":"4108","endLine":157,"endColumn":30},{"ruleId":"4121","severity":1,"message":"4122","line":250,"column":54,"nodeType":"4123","messageId":"4124","endLine":250,"endColumn":56},{"ruleId":"4141","severity":1,"message":"4142","line":254,"column":56,"nodeType":"4143","endLine":254,"endColumn":71},{"ruleId":"4105","severity":1,"message":"4106","line":254,"column":99,"nodeType":"4107","messageId":"4108","endLine":254,"endColumn":101},{"ruleId":"4094","severity":1,"message":"4201","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4222","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":20},{"ruleId":"4133","severity":1,"message":"4134","line":73,"column":7,"nodeType":"4135","messageId":"4136","endLine":77,"endColumn":8},{"ruleId":"4105","severity":1,"message":"4106","line":186,"column":35,"nodeType":"4107","messageId":"4108","endLine":186,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":382,"column":34,"nodeType":"4107","messageId":"4108","endLine":382,"endColumn":36},{"ruleId":"4105","severity":1,"message":"4106","line":383,"column":39,"nodeType":"4107","messageId":"4108","endLine":383,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4117","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4176","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":122,"column":35,"nodeType":"4107","messageId":"4108","endLine":122,"endColumn":37},{"ruleId":"4141","severity":1,"message":"4142","line":177,"column":47,"nodeType":"4143","endLine":177,"endColumn":62},{"ruleId":"4163","severity":1,"message":"4174","line":9,"column":1,"nodeType":"4165","endLine":20,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4322","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4323","line":15,"column":7,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":149,"column":31,"nodeType":"4107","messageId":"4108","endLine":149,"endColumn":33},{"ruleId":"4105","severity":1,"message":"4106","line":172,"column":35,"nodeType":"4107","messageId":"4108","endLine":172,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":31,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4251","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":91,"column":13,"nodeType":"4107","messageId":"4108","endLine":91,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4189","line":109,"column":11,"nodeType":"4096","messageId":"4097","endLine":109,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4256","line":1,"column":16,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4257","line":1,"column":30,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4258","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4191","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4259","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4145","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":99,"column":42,"nodeType":"4107","messageId":"4108","endLine":99,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4152","line":105,"column":17,"nodeType":"4107","messageId":"4108","endLine":105,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":125,"column":94,"nodeType":"4107","messageId":"4108","endLine":125,"endColumn":96},{"ruleId":"4105","severity":1,"message":"4106","line":138,"column":93,"nodeType":"4107","messageId":"4108","endLine":138,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":197,"column":32,"nodeType":"4107","messageId":"4108","endLine":197,"endColumn":34},{"ruleId":"4105","severity":1,"message":"4106","line":197,"column":62,"nodeType":"4107","messageId":"4108","endLine":197,"endColumn":64},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":36,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":199,"column":70,"nodeType":"4107","messageId":"4108","endLine":199,"endColumn":72},{"ruleId":"4105","severity":1,"message":"4152","line":208,"column":26,"nodeType":"4107","messageId":"4108","endLine":208,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4152","line":210,"column":35,"nodeType":"4107","messageId":"4108","endLine":210,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":322,"column":42,"nodeType":"4107","messageId":"4108","endLine":322,"endColumn":44},{"ruleId":"4105","severity":1,"message":"4106","line":330,"column":60,"nodeType":"4107","messageId":"4108","endLine":330,"endColumn":62},{"ruleId":"4094","severity":1,"message":"4173","line":477,"column":11,"nodeType":"4096","messageId":"4097","endLine":477,"endColumn":23},{"ruleId":"4121","severity":1,"message":"4122","line":481,"column":37,"nodeType":"4123","messageId":"4124","endLine":481,"endColumn":39},{"ruleId":"4105","severity":1,"message":"4106","line":484,"column":53,"nodeType":"4107","messageId":"4108","endLine":484,"endColumn":55},{"ruleId":"4114","severity":1,"message":"4115","line":576,"column":19,"nodeType":"4116","endLine":576,"endColumn":106},{"ruleId":"4094","severity":1,"message":"4254","line":377,"column":56,"nodeType":"4096","messageId":"4097","endLine":377,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4255","line":418,"column":71,"nodeType":"4096","messageId":"4097","endLine":418,"endColumn":90},{"ruleId":"4105","severity":1,"message":"4106","line":427,"column":85,"nodeType":"4107","messageId":"4108","endLine":427,"endColumn":87},{"ruleId":"4114","severity":1,"message":"4115","line":450,"column":13,"nodeType":"4116","endLine":450,"endColumn":74},{"ruleId":"4105","severity":1,"message":"4106","line":506,"column":44,"nodeType":"4107","messageId":"4108","endLine":506,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":515,"column":44,"nodeType":"4107","messageId":"4108","endLine":515,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":515,"column":80,"nodeType":"4107","messageId":"4108","endLine":515,"endColumn":82},{"ruleId":"4105","severity":1,"message":"4106","line":539,"column":44,"nodeType":"4107","messageId":"4108","endLine":539,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4152","line":547,"column":46,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4152","line":547,"column":80,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":82},{"ruleId":"4105","severity":1,"message":"4106","line":547,"column":116,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":118},{"ruleId":"4105","severity":1,"message":"4106","line":547,"column":152,"nodeType":"4107","messageId":"4108","endLine":547,"endColumn":154},{"ruleId":"4114","severity":1,"message":"4115","line":757,"column":29,"nodeType":"4116","endLine":757,"endColumn":148},{"ruleId":"4105","severity":1,"message":"4106","line":771,"column":28,"nodeType":"4107","messageId":"4108","endLine":771,"endColumn":30},{"ruleId":"4378","severity":1,"message":"4379","line":12,"column":23,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4338","line":7,"column":25,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4339","line":11,"column":21,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":33},{"ruleId":"4333","severity":1,"message":"4340","line":15,"column":6,"nodeType":"4335","endLine":15,"endColumn":13,"suggestions":"4395"},{"ruleId":"4105","severity":1,"message":"4106","line":18,"column":19,"nodeType":"4107","messageId":"4108","endLine":18,"endColumn":21},{"ruleId":"4105","severity":1,"message":"4106","line":20,"column":27,"nodeType":"4107","messageId":"4108","endLine":20,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":65,"column":36,"nodeType":"4107","messageId":"4108","endLine":65,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":36,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":67,"column":36,"nodeType":"4107","messageId":"4108","endLine":67,"endColumn":38},{"ruleId":"4105","severity":1,"message":"4106","line":7,"column":17,"nodeType":"4107","messageId":"4108","endLine":7,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":9,"column":23,"nodeType":"4107","messageId":"4108","endLine":9,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":22,"column":3,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":90,"column":13,"nodeType":"4107","messageId":"4108","endLine":90,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4145","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4267","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4268","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4263","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4269","line":70,"column":41,"nodeType":"4096","messageId":"4097","endLine":70,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4195","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4196","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4195","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4197","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4196","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4198","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4199","line":45,"column":13,"nodeType":"4096","messageId":"4097","endLine":45,"endColumn":23},{"ruleId":"4128","severity":1,"message":"4129","line":78,"column":17,"nodeType":"4116","endLine":78,"endColumn":20},{"ruleId":"4128","severity":1,"message":"4129","line":87,"column":17,"nodeType":"4116","endLine":87,"endColumn":20},{"ruleId":"4133","severity":1,"message":"4134","line":155,"column":7,"nodeType":"4135","messageId":"4136","endLine":159,"endColumn":8},{"ruleId":"4128","severity":1,"message":"4129","line":204,"column":17,"nodeType":"4116","endLine":204,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4159","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4270","line":41,"column":7,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":13},{"ruleId":"4168","severity":1,"message":"4169","line":75,"column":6,"nodeType":"4170","endLine":75,"endColumn":16},{"ruleId":"4105","severity":1,"message":"4106","line":109,"column":44,"nodeType":"4107","messageId":"4108","endLine":109,"endColumn":46},{"ruleId":"4141","severity":1,"message":"4142","line":318,"column":59,"nodeType":"4143","endLine":318,"endColumn":74},{"ruleId":"4207","severity":1,"message":"4208","line":5,"column":3,"nodeType":"4209","messageId":"4210","endLine":7,"endColumn":4},{"ruleId":"4311","severity":1,"message":"4312","line":13,"column":9,"nodeType":"4116","endLine":23,"endColumn":12},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4218","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4219","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4130","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":20},{"ruleId":"4207","severity":1,"message":"4208","line":13,"column":3,"nodeType":"4209","messageId":"4210","endLine":15,"endColumn":4},{"ruleId":"4121","severity":1,"message":"4380","line":32,"column":45,"nodeType":"4123","messageId":"4381","endLine":32,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4220","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4221","line":9,"column":13,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":25},{"ruleId":"4133","severity":1,"message":"4134","line":34,"column":7,"nodeType":"4135","messageId":"4136","endLine":41,"endColumn":8},{"ruleId":"4105","severity":1,"message":"4106","line":80,"column":34,"nodeType":"4107","messageId":"4108","endLine":80,"endColumn":36},{"ruleId":"4105","severity":1,"message":"4106","line":82,"column":44,"nodeType":"4107","messageId":"4108","endLine":82,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":51,"column":60,"nodeType":"4107","messageId":"4108","endLine":51,"endColumn":62},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":34,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":36},{"ruleId":"4105","severity":1,"message":"4106","line":85,"column":35,"nodeType":"4107","messageId":"4108","endLine":85,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4223","line":86,"column":9,"nodeType":"4096","messageId":"4097","endLine":86,"endColumn":19},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4181","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4182","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4183","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4184","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4185","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4186","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4187","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4188","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4105","severity":1,"message":"4106","line":98,"column":13,"nodeType":"4107","messageId":"4108","endLine":98,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4189","line":109,"column":11,"nodeType":"4096","messageId":"4097","endLine":109,"endColumn":22},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4163","severity":1,"message":"4174","line":14,"column":1,"nodeType":"4165","endLine":38,"endColumn":3},{"ruleId":"4163","severity":1,"message":"4174","line":11,"column":1,"nodeType":"4165","endLine":30,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4113","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4174","line":71,"column":1,"nodeType":"4165","endLine":224,"endColumn":2},{"ruleId":"4094","severity":1,"message":"4113","line":1,"column":8,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4174","line":24,"column":1,"nodeType":"4165","endLine":87,"endColumn":2},{"ruleId":"4094","severity":1,"message":"4104","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4157","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4190","line":17,"column":9,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4117","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4191","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4192","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4193","line":27,"column":12,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4194","line":27,"column":22,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4212","line":1,"column":9,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4213","line":4,"column":23,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4214","line":4,"column":41,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":51},{"ruleId":"4094","severity":1,"message":"4113","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":13},{"ruleId":"4105","severity":1,"message":"4106","line":54,"column":21,"nodeType":"4107","messageId":"4108","endLine":54,"endColumn":23},{"ruleId":"4207","severity":1,"message":"4208","line":8,"column":3,"nodeType":"4209","messageId":"4210","endLine":10,"endColumn":4},{"ruleId":"4094","severity":1,"message":"4117","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4130","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4346","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4282","line":1,"column":44,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4227","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4347","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4348","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4349","line":9,"column":31,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4350","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4225","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4226","line":46,"column":12,"nodeType":"4096","messageId":"4097","endLine":46,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4113","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4227","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4228","line":43,"column":11,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4229","line":47,"column":13,"nodeType":"4096","messageId":"4097","endLine":47,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4230","line":4,"column":9,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":15},{"ruleId":"4133","severity":1,"message":"4134","line":115,"column":5,"nodeType":"4135","messageId":"4136","endLine":133,"endColumn":6},{"ruleId":"4105","severity":1,"message":"4152","line":191,"column":24,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":193,"column":30,"nodeType":"4107","messageId":"4108","endLine":193,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":203,"column":24,"nodeType":"4107","messageId":"4108","endLine":203,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":205,"column":30,"nodeType":"4107","messageId":"4108","endLine":205,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":214,"column":53,"nodeType":"4107","messageId":"4108","endLine":214,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":216,"column":30,"nodeType":"4107","messageId":"4108","endLine":216,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":225,"column":24,"nodeType":"4107","messageId":"4108","endLine":225,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":227,"column":30,"nodeType":"4107","messageId":"4108","endLine":227,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":237,"column":24,"nodeType":"4107","messageId":"4108","endLine":237,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":239,"column":30,"nodeType":"4107","messageId":"4108","endLine":239,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4152","line":248,"column":24,"nodeType":"4107","messageId":"4108","endLine":248,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":250,"column":30,"nodeType":"4107","messageId":"4108","endLine":250,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":258,"column":30,"nodeType":"4107","messageId":"4108","endLine":258,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":270,"column":30,"nodeType":"4107","messageId":"4108","endLine":270,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":279,"column":30,"nodeType":"4107","messageId":"4108","endLine":279,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":291,"column":30,"nodeType":"4107","messageId":"4108","endLine":291,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":303,"column":30,"nodeType":"4107","messageId":"4108","endLine":303,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":316,"column":30,"nodeType":"4107","messageId":"4108","endLine":316,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":326,"column":30,"nodeType":"4107","messageId":"4108","endLine":326,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":338,"column":30,"nodeType":"4107","messageId":"4108","endLine":338,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":349,"column":30,"nodeType":"4107","messageId":"4108","endLine":349,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":357,"column":30,"nodeType":"4107","messageId":"4108","endLine":357,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":365,"column":30,"nodeType":"4107","messageId":"4108","endLine":365,"endColumn":32},{"ruleId":"4105","severity":1,"message":"4106","line":382,"column":58,"nodeType":"4107","messageId":"4108","endLine":382,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4177","line":2,"column":9,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4178","line":2,"column":21,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4179","line":4,"column":7,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4180","line":13,"column":7,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":19},{"ruleId":"4105","severity":1,"message":"4106","line":38,"column":24,"nodeType":"4107","messageId":"4108","endLine":38,"endColumn":26},{"ruleId":"4105","severity":1,"message":"4106","line":38,"column":49,"nodeType":"4107","messageId":"4108","endLine":38,"endColumn":51},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":22,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":47,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":52,"column":22,"nodeType":"4107","messageId":"4108","endLine":52,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":52,"column":47,"nodeType":"4107","messageId":"4108","endLine":52,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":28,"column":22,"nodeType":"4107","messageId":"4108","endLine":28,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":28,"column":47,"nodeType":"4107","messageId":"4108","endLine":28,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":34,"column":20,"nodeType":"4107","messageId":"4108","endLine":34,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":34,"column":45,"nodeType":"4107","messageId":"4108","endLine":34,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":22,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":47,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":44,"column":20,"nodeType":"4107","messageId":"4108","endLine":44,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":44,"column":45,"nodeType":"4107","messageId":"4108","endLine":44,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4200","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":22,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":47,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":94,"column":20,"nodeType":"4107","messageId":"4108","endLine":94,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":94,"column":45,"nodeType":"4107","messageId":"4108","endLine":94,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":20,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":45,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":31,"column":22,"nodeType":"4107","messageId":"4108","endLine":31,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":31,"column":47,"nodeType":"4107","messageId":"4108","endLine":31,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":39,"column":22,"nodeType":"4107","messageId":"4108","endLine":39,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":39,"column":47,"nodeType":"4107","messageId":"4108","endLine":39,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":46,"column":22,"nodeType":"4107","messageId":"4108","endLine":46,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":46,"column":47,"nodeType":"4107","messageId":"4108","endLine":46,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4221","line":6,"column":13,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4131","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4191","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4231","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4232","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4126","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":184,"column":51,"nodeType":"4107","messageId":"4108","endLine":184,"endColumn":53},{"ruleId":"4105","severity":1,"message":"4106","line":188,"column":113,"nodeType":"4107","messageId":"4108","endLine":188,"endColumn":115},{"ruleId":"4105","severity":1,"message":"4106","line":191,"column":43,"nodeType":"4107","messageId":"4108","endLine":191,"endColumn":45},{"ruleId":"4105","severity":1,"message":"4106","line":292,"column":26,"nodeType":"4107","messageId":"4108","endLine":292,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4106","line":292,"column":51,"nodeType":"4107","messageId":"4108","endLine":292,"endColumn":53},{"ruleId":"4105","severity":1,"message":"4106","line":292,"column":73,"nodeType":"4107","messageId":"4108","endLine":292,"endColumn":75},{"ruleId":"4105","severity":1,"message":"4106","line":302,"column":26,"nodeType":"4107","messageId":"4108","endLine":302,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4106","line":302,"column":51,"nodeType":"4107","messageId":"4108","endLine":302,"endColumn":53},{"ruleId":"4094","severity":1,"message":"4328","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4329","line":2,"column":23,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4330","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4331","line":39,"column":10,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4332","line":39,"column":20,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":31},{"ruleId":"4333","severity":1,"message":"4334","line":67,"column":5,"nodeType":"4335","endLine":67,"endColumn":39,"suggestions":"4396"},{"ruleId":"4094","severity":1,"message":"4337","line":86,"column":7,"nodeType":"4096","messageId":"4097","endLine":86,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":136,"column":23,"nodeType":"4107","messageId":"4108","endLine":136,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":138,"column":35,"nodeType":"4107","messageId":"4108","endLine":138,"endColumn":37},{"ruleId":"4114","severity":1,"message":"4115","line":140,"column":23,"nodeType":"4116","endLine":140,"endColumn":103},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":37,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":39},{"ruleId":"4114","severity":1,"message":"4115","line":146,"column":25,"nodeType":"4116","endLine":146,"endColumn":103},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4119","line":3,"column":9,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4114","severity":1,"message":"4115","line":45,"column":19,"nodeType":"4116","endLine":45,"endColumn":91},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4301","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":25},{"ruleId":"4121","severity":1,"message":"4122","line":38,"column":40,"nodeType":"4123","messageId":"4124","endLine":38,"endColumn":42},{"ruleId":"4121","severity":1,"message":"4122","line":45,"column":33,"nodeType":"4123","messageId":"4124","endLine":45,"endColumn":35},{"ruleId":"4121","severity":1,"message":"4122","line":52,"column":37,"nodeType":"4123","messageId":"4124","endLine":52,"endColumn":39},{"ruleId":"4114","severity":1,"message":"4115","line":118,"column":23,"nodeType":"4116","endLine":118,"endColumn":102},{"ruleId":"4114","severity":1,"message":"4115","line":136,"column":23,"nodeType":"4116","endLine":136,"endColumn":102},{"ruleId":"4114","severity":1,"message":"4115","line":173,"column":23,"nodeType":"4116","endLine":173,"endColumn":102},{"ruleId":"4094","severity":1,"message":"4316","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4119","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4317","line":9,"column":9,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4318","line":72,"column":13,"nodeType":"4096","messageId":"4097","endLine":72,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4319","line":72,"column":19,"nodeType":"4096","messageId":"4097","endLine":72,"endColumn":26},{"ruleId":"4114","severity":1,"message":"4115","line":102,"column":19,"nodeType":"4116","endLine":102,"endColumn":91},{"ruleId":"4094","severity":1,"message":"4117","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4130","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":20},{"ruleId":"4121","severity":1,"message":"4122","line":43,"column":40,"nodeType":"4123","messageId":"4124","endLine":43,"endColumn":42},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":81,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":83},{"ruleId":"4105","severity":1,"message":"4106","line":49,"column":91,"nodeType":"4107","messageId":"4108","endLine":49,"endColumn":93},{"ruleId":"4114","severity":1,"message":"4115","line":70,"column":19,"nodeType":"4116","endLine":70,"endColumn":91},{"ruleId":"4105","severity":1,"message":"4106","line":26,"column":13,"nodeType":"4107","messageId":"4108","endLine":26,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":28,"column":18,"nodeType":"4107","messageId":"4108","endLine":28,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":18,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":35,"column":18,"nodeType":"4107","messageId":"4108","endLine":35,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4225","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":16},{"ruleId":"4320","severity":1,"message":"4321","line":71,"column":46,"nodeType":"4143","endLine":71,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4119","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4146","severity":1,"message":"4147","line":18,"column":5,"nodeType":"4148","messageId":"4149","endLine":20,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":59,"column":22,"nodeType":"4107","messageId":"4108","endLine":59,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":59,"column":47,"nodeType":"4107","messageId":"4108","endLine":59,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":67,"column":20,"nodeType":"4107","messageId":"4108","endLine":67,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":67,"column":45,"nodeType":"4107","messageId":"4108","endLine":67,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":76,"column":20,"nodeType":"4107","messageId":"4108","endLine":76,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":76,"column":45,"nodeType":"4107","messageId":"4108","endLine":76,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":22,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":66,"column":47,"nodeType":"4107","messageId":"4108","endLine":66,"endColumn":49},{"ruleId":"4105","severity":1,"message":"4106","line":74,"column":20,"nodeType":"4107","messageId":"4108","endLine":74,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":74,"column":45,"nodeType":"4107","messageId":"4108","endLine":74,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":83,"column":20,"nodeType":"4107","messageId":"4108","endLine":83,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":83,"column":45,"nodeType":"4107","messageId":"4108","endLine":83,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4145","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4240","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4222","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4241","line":124,"column":13,"nodeType":"4096","messageId":"4097","endLine":124,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4242","line":125,"column":99,"nodeType":"4096","messageId":"4097","endLine":125,"endColumn":123},{"ruleId":"4094","severity":1,"message":"4243","line":126,"column":25,"nodeType":"4096","messageId":"4097","endLine":126,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4244","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4245","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4246","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":18},{"ruleId":"4247","severity":1,"message":"4248","line":61,"column":9,"nodeType":"4096","messageId":"4249","endLine":61,"endColumn":13},{"ruleId":"4105","severity":1,"message":"4106","line":77,"column":15,"nodeType":"4107","messageId":"4108","endLine":77,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4243","line":130,"column":37,"nodeType":"4096","messageId":"4097","endLine":130,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4152","line":30,"column":25,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4152","line":30,"column":53,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":76,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":78},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":101,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":103},{"ruleId":"4105","severity":1,"message":"4106","line":30,"column":124,"nodeType":"4107","messageId":"4108","endLine":30,"endColumn":126},{"ruleId":"4114","severity":1,"message":"4115","line":32,"column":17,"nodeType":"4116","endLine":32,"endColumn":97},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":29,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4152","line":37,"column":52,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":54},{"ruleId":"4114","severity":1,"message":"4115","line":39,"column":19,"nodeType":"4116","endLine":39,"endColumn":97},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":29,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":31},{"ruleId":"4105","severity":1,"message":"4106","line":45,"column":52,"nodeType":"4107","messageId":"4108","endLine":45,"endColumn":54},{"ruleId":"4105","severity":1,"message":"4106","line":50,"column":26,"nodeType":"4107","messageId":"4108","endLine":50,"endColumn":28},{"ruleId":"4105","severity":1,"message":"4106","line":50,"column":54,"nodeType":"4107","messageId":"4108","endLine":50,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":50,"column":74,"nodeType":"4107","messageId":"4108","endLine":50,"endColumn":76},{"ruleId":"4094","severity":1,"message":"4313","line":9,"column":55,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":62},{"ruleId":"4094","severity":1,"message":"4314","line":9,"column":64,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":73},{"ruleId":"4094","severity":1,"message":"4315","line":9,"column":75,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":83},{"ruleId":"4094","severity":1,"message":"4120","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4314","line":9,"column":64,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":73},{"ruleId":"4094","severity":1,"message":"4315","line":9,"column":75,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":83},{"ruleId":"4105","severity":1,"message":"4106","line":10,"column":70,"nodeType":"4107","messageId":"4108","endLine":10,"endColumn":72},{"ruleId":"4094","severity":1,"message":"4351","line":10,"column":9,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4253","line":74,"column":25,"nodeType":"4096","messageId":"4097","endLine":74,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":73,"column":15,"nodeType":"4107","messageId":"4108","endLine":73,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":76,"column":15,"nodeType":"4107","messageId":"4108","endLine":76,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":20,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":111,"column":45,"nodeType":"4107","messageId":"4108","endLine":111,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":126,"column":28,"nodeType":"4107","messageId":"4108","endLine":126,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":126,"column":53,"nodeType":"4107","messageId":"4108","endLine":126,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":131,"column":28,"nodeType":"4107","messageId":"4108","endLine":131,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":131,"column":53,"nodeType":"4107","messageId":"4108","endLine":131,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4152","line":42,"column":23,"nodeType":"4107","messageId":"4108","endLine":42,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":68,"column":109,"nodeType":"4107","messageId":"4108","endLine":68,"endColumn":111},{"ruleId":"4094","severity":1,"message":"4211","line":97,"column":26,"nodeType":"4096","messageId":"4097","endLine":97,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4200","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4201","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":17},{"ruleId":"4105","severity":1,"message":"4152","line":55,"column":18,"nodeType":"4107","messageId":"4108","endLine":55,"endColumn":20},{"ruleId":"4202","severity":1,"message":"4203","line":72,"column":9,"nodeType":"4204","messageId":"4108","endLine":72,"endColumn":20},{"ruleId":"4105","severity":1,"message":"4106","line":113,"column":22,"nodeType":"4107","messageId":"4108","endLine":113,"endColumn":24},{"ruleId":"4105","severity":1,"message":"4106","line":113,"column":46,"nodeType":"4107","messageId":"4108","endLine":113,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":124,"column":93,"nodeType":"4107","messageId":"4108","endLine":124,"endColumn":95},{"ruleId":"4105","severity":1,"message":"4106","line":101,"column":20,"nodeType":"4107","messageId":"4108","endLine":101,"endColumn":22},{"ruleId":"4105","severity":1,"message":"4106","line":101,"column":45,"nodeType":"4107","messageId":"4108","endLine":101,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":28,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":53,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":55},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":28,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":112,"column":53,"nodeType":"4107","messageId":"4108","endLine":112,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4352","line":1,"column":37,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4353","line":1,"column":50,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":56},{"ruleId":"4105","severity":1,"message":"4106","line":37,"column":25,"nodeType":"4107","messageId":"4108","endLine":37,"endColumn":27},{"ruleId":"4105","severity":1,"message":"4106","line":39,"column":33,"nodeType":"4107","messageId":"4108","endLine":39,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":41,"column":33,"nodeType":"4107","messageId":"4108","endLine":41,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4352","line":1,"column":37,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4353","line":1,"column":50,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":56},{"ruleId":"4094","severity":1,"message":"4276","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4182","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4251","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4357","line":264,"column":9,"nodeType":"4096","messageId":"4097","endLine":264,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4145","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4285","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4260","line":3,"column":3,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4261","line":4,"column":3,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4262","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4263","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4264","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4145","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4113","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4265","line":21,"column":3,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4266","line":25,"column":3,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":11},{"ruleId":"4105","severity":1,"message":"4106","line":61,"column":23,"nodeType":"4107","messageId":"4108","endLine":61,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":62,"column":45,"nodeType":"4107","messageId":"4108","endLine":62,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":65,"column":45,"nodeType":"4107","messageId":"4108","endLine":65,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":71,"column":23,"nodeType":"4107","messageId":"4108","endLine":71,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":46,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":72,"column":71,"nodeType":"4107","messageId":"4108","endLine":72,"endColumn":73},{"ruleId":"4105","severity":1,"message":"4106","line":78,"column":23,"nodeType":"4107","messageId":"4108","endLine":78,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":79,"column":45,"nodeType":"4107","messageId":"4108","endLine":79,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":86,"column":45,"nodeType":"4107","messageId":"4108","endLine":86,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":89,"column":45,"nodeType":"4107","messageId":"4108","endLine":89,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":95,"column":23,"nodeType":"4107","messageId":"4108","endLine":95,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":95,"column":102,"nodeType":"4107","messageId":"4108","endLine":95,"endColumn":104},{"ruleId":"4105","severity":1,"message":"4106","line":96,"column":46,"nodeType":"4107","messageId":"4108","endLine":96,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":96,"column":71,"nodeType":"4107","messageId":"4108","endLine":96,"endColumn":73},{"ruleId":"4105","severity":1,"message":"4106","line":102,"column":23,"nodeType":"4107","messageId":"4108","endLine":102,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":106,"column":23,"nodeType":"4107","messageId":"4108","endLine":106,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":46,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":107,"column":68,"nodeType":"4107","messageId":"4108","endLine":107,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":118,"column":27,"nodeType":"4107","messageId":"4108","endLine":118,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":130,"column":23,"nodeType":"4107","messageId":"4108","endLine":130,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":140,"column":23,"nodeType":"4107","messageId":"4108","endLine":140,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":46,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":144,"column":68,"nodeType":"4107","messageId":"4108","endLine":144,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":155,"column":27,"nodeType":"4107","messageId":"4108","endLine":155,"endColumn":29},{"ruleId":"4105","severity":1,"message":"4106","line":162,"column":23,"nodeType":"4107","messageId":"4108","endLine":162,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":163,"column":46,"nodeType":"4107","messageId":"4108","endLine":163,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":163,"column":68,"nodeType":"4107","messageId":"4108","endLine":163,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":174,"column":28,"nodeType":"4107","messageId":"4108","endLine":174,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":181,"column":23,"nodeType":"4107","messageId":"4108","endLine":181,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":189,"column":45,"nodeType":"4107","messageId":"4108","endLine":189,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":46,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":195,"column":68,"nodeType":"4107","messageId":"4108","endLine":195,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":205,"column":28,"nodeType":"4107","messageId":"4108","endLine":205,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":212,"column":23,"nodeType":"4107","messageId":"4108","endLine":212,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":212,"column":107,"nodeType":"4107","messageId":"4108","endLine":212,"endColumn":109},{"ruleId":"4105","severity":1,"message":"4106","line":213,"column":45,"nodeType":"4107","messageId":"4108","endLine":213,"endColumn":47},{"ruleId":"4105","severity":1,"message":"4106","line":227,"column":46,"nodeType":"4107","messageId":"4108","endLine":227,"endColumn":48},{"ruleId":"4105","severity":1,"message":"4106","line":227,"column":68,"nodeType":"4107","messageId":"4108","endLine":227,"endColumn":70},{"ruleId":"4105","severity":1,"message":"4106","line":238,"column":28,"nodeType":"4107","messageId":"4108","endLine":238,"endColumn":30},{"ruleId":"4105","severity":1,"message":"4106","line":245,"column":23,"nodeType":"4107","messageId":"4108","endLine":245,"endColumn":25},{"ruleId":"4105","severity":1,"message":"4106","line":249,"column":23,"nodeType":"4107","messageId":"4108","endLine":249,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4159","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":18},{"ruleId":"4105","severity":1,"message":"4106","line":102,"column":35,"nodeType":"4107","messageId":"4108","endLine":102,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4378","severity":1,"message":"4310","line":6,"column":25,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":38},{"ruleId":"4382","severity":1,"message":"4383","line":109,"column":13,"nodeType":"4384","endLine":110,"endColumn":15},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":39,"column":1,"nodeType":"4148","messageId":"4206","endLine":58,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4385","line":3,"column":21,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4310","line":7,"column":25,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4386","line":18,"column":10,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4387","line":18,"column":25,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4388","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4389","line":19,"column":24,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":39},{"ruleId":"4333","severity":1,"message":"4390","line":25,"column":6,"nodeType":"4335","endLine":25,"endColumn":21,"suggestions":"4397"},{"ruleId":"4105","severity":1,"message":"4106","line":87,"column":33,"nodeType":"4107","messageId":"4108","endLine":87,"endColumn":35},{"ruleId":"4105","severity":1,"message":"4106","line":109,"column":35,"nodeType":"4107","messageId":"4108","endLine":109,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":132,"column":31,"nodeType":"4107","messageId":"4108","endLine":132,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4159","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4175","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4145","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4117","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4369","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4158","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4370","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4162","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4120","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4371","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4372","line":27,"column":7,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4252","line":37,"column":7,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":21},{"ruleId":"4168","severity":1,"message":"4169","line":72,"column":5,"nodeType":"4170","endLine":72,"endColumn":15},{"ruleId":"4105","severity":1,"message":"4106","line":123,"column":44,"nodeType":"4107","messageId":"4108","endLine":123,"endColumn":46},{"ruleId":"4105","severity":1,"message":"4106","line":171,"column":28,"nodeType":"4107","messageId":"4108","endLine":171,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4229","line":258,"column":13,"nodeType":"4096","messageId":"4097","endLine":258,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4215","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4216","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4217","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":9},{"ruleId":"4146","severity":1,"message":"4205","line":19,"column":1,"nodeType":"4148","messageId":"4206","endLine":22,"endColumn":6},{"ruleId":"4146","severity":1,"message":"4205","line":42,"column":1,"nodeType":"4148","messageId":"4206","endLine":61,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4113","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4373","line":3,"column":9,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4374","line":3,"column":14,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4375","line":3,"column":23,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4376","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4301","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":25},{"ruleId":"4121","severity":1,"message":"4122","line":36,"column":32,"nodeType":"4123","messageId":"4124","endLine":36,"endColumn":34},{"ruleId":"4114","severity":1,"message":"4115","line":61,"column":23,"nodeType":"4116","endLine":61,"endColumn":102},{"ruleId":"4094","severity":1,"message":"4162","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4342","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4343","line":5,"column":29,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4377","line":10,"column":40,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":47},{"ruleId":"4333","severity":1,"message":"4361","line":95,"column":6,"nodeType":"4335","endLine":95,"endColumn":8,"suggestions":"4398"},{"ruleId":"4333","severity":1,"message":"4363","line":99,"column":6,"nodeType":"4335","endLine":99,"endColumn":38,"suggestions":"4399"},{"ruleId":"4365","severity":1,"message":"4366","line":42,"column":9,"nodeType":"4116","endLine":42,"endColumn":81},{"ruleId":"4133","severity":1,"message":"4134","line":29,"column":5,"nodeType":"4135","messageId":"4136","endLine":33,"endColumn":6},{"ruleId":"4105","severity":1,"message":"4106","line":118,"column":35,"nodeType":"4107","messageId":"4108","endLine":118,"endColumn":37},{"ruleId":"4105","severity":1,"message":"4106","line":119,"column":40,"nodeType":"4107","messageId":"4108","endLine":119,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4233","line":56,"column":13,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4234","line":56,"column":31,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":46},{"ruleId":"4094","severity":1,"message":"4235","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4236","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4237","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4117","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},"no-native-reassign",["4400"],"no-negated-in-lhs",["4401"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'asyncComponent' is defined but never used.","'ScrollToTop' is defined but never used.","'NotFound' is defined but never used.","'ABOVE_THE_HEADER' is defined but never used.","'BELOW_THE_HEADER' is defined but never used.","'COLLAPSED_DRAWER' is defined but never used.","'FIXED_DRAWER' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["4400"],["4401"],"'composeEnhancers' is assigned a value but never used.","'UPDATE_USER' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'HORIZONTAL_NAVIGATION' is defined but never used.","'Link' is defined but never used.","'moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ProfilePicture' is defined but never used.","'requestInitUser' is defined but never used.","'JOBSLAB_ICON_URL' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'IntlMessages' is defined but never used.","'connect' is defined but never used.","'ContainerHeader' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'ResponsiveContainer' is defined but never used.","'Widget' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'myData' is assigned a value but never used.","'refererReward' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'VERTICAL_NAVIGATION' is defined but never used.","'TableBody' is defined but never used.","'Modal' is defined but never used.","'SearchBox' is defined but never used.","'exposeCompanyName' is assigned a value but never used.","'numberWithCommas' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'INSIDE_THE_HEADER' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'locale' is assigned a value but never used.","'horizontalNavPosition' is assigned a value but never used.","'isMobileView' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","'modalStyle' is defined but never used.","'LinkedinFollow' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'getDisplayString' is assigned a value but never used.","'getUrlString' is assigned a value but never used.","'Fragment' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'FormHelperText' is defined but never used.","'Expand' is defined but never used.","'Main' is defined but never used.","'BoxExpand' is defined but never used.","'ExpandBoxes' is defined but never used.","'transitions' is assigned a value but never used.","'DARK_INDIGO' is defined but never used.","'IconButton' is defined but never used.","'CardMenu' is defined but never used.","'anchorEl' is assigned a value but never used.","'menuState' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'activeStep' is assigned a value but never used.","'Textarea' is defined but never used.","'InputBase' is defined but never used.","no-dupe-keys","Duplicate key 'description'.","ObjectExpression","Block is redundant.","redundantBlock","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'institutionText' is assigned a value but never used.","'requestUploadCV' is defined but never used.","'updateUserStatus' is defined but never used.","'updateUser' is defined but never used.","'Header' is defined but never used.","'BoxToggle' is defined but never used.","'BoxExpand1' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'LinkedInLoginButton' is defined but never used.","'notification' is defined but never used.","'UploadButton' is defined but never used.","'targetName' is assigned a value but never used.","'applicationStateList' is assigned a value but never used.","'Status' is defined but never used.","'expertList' is assigned a value but never used.","'CircularProgress' is defined but never used.","'appId' is assigned a value but never used.","'userType' is assigned a value but never used.","'Tablet' is defined but never used.","'TextField' is defined but never used.","'store' is defined but never used.","'isFirstNameInput' is assigned a value but never used.","'isLastNameInput' is assigned a value but never used.","'AvatarEditor' is defined but never used.","'Dropzone' is defined but never used.","'InputRange' is defined but never used.","'Checkbox' is defined but never used.","'isAgreeTC' is assigned a value but never used.","'SkillTag' is defined but never used.","'acceptedFiles' is assigned a value but never used.","'isUploadedSpecialityEdit' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","no-redeclare","'name' is already defined.","redeclared","'handleBack' is assigned a value but never used.","'Switch' is defined but never used.","'StyledTableRow' is assigned a value but never used.","'skill' is assigned a value but never used.","'city' is assigned a value but never used.","'referralModalIsOpen' is assigned a value but never used.","'cloneElement' is defined but never used.","'Component' is defined but never used.","'Divider' is defined but never used.","'ClearIcon' is defined but never used.","'EmailIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'LinkedinIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'CANDIDATE_INTERVIEW_SUBMITTED' is defined but never used.","'SELECTED' is defined but never used.","'CountUp' is defined but never used.","'TelegramShareButton' is defined but never used.","'refCount' is assigned a value but never used.","'dialog' is assigned a value but never used.","'Home' is defined but never used.","'Test' is defined but never used.","'TestRecorder' is defined but never used.","'TestHome' is defined but never used.","'ComingSoon' is defined but never used.","'PropTypes' is defined but never used.","'WhatsappIcon' is defined but never used.","'Grid' is defined but never used.","'WelcomeCard' is defined but never used.","'Tooltip' is defined but never used.","'redirectUrl' is assigned a value but never used.","'useState' is defined but never used.","'Fade' is defined but never used.","'fade' is assigned a value but never used.","'Autocomplete' is defined but never used.","'Select' is defined but never used.","'queryString' is assigned a value but never used.","'getSuggestionValue' is assigned a value but never used.","'renderSuggestion' is assigned a value but never used.","'useTextFieldStyles' is assigned a value but never used.","'company' is assigned a value but never used.","'suggestions' is assigned a value but never used.","'dialList' is assigned a value but never used.","'companyList' is assigned a value but never used.","'filterOptions' is assigned a value but never used.","'SimpleRadarChart' is defined but never used.","'InterestedJobCard' is defined but never used.","'ReferralCard' is defined but never used.","'CompetitivenessGauge' is defined but never used.","'radarChartData' is defined but never used.","'arraySortByDate' is defined but never used.","'Tour' is defined but never used.","'interestedJobList' is assigned a value but never used.","'refList' is assigned a value but never used.","'isTourOpen' is assigned a value but never used.","'steps' is assigned a value but never used.","'detailCards' is defined but never used.","'recentActivity' is defined but never used.","'IconWithTextCard' is defined but never used.","'WEB_VIDEO_URL' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'yearMin' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'isPublic' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Badge' is defined but never used.","'rows' is assigned a value but never used.","'columns' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'captureUserMedia' is defined but never used.","'hasGetUserMedia' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'CANDIDATE_WITHDRAWN_1' is defined but never used.","'CLIENT_REJECTED' is defined but never used.","'CANDIDATE_WITHDRAWN_2' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Recorder' is defined but never used.","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getVideo'. Either include it or remove the dependency array.","ArrayExpression",["4402"],"'finishedSubmission' is assigned a value but never used.","'setCountdownTime' is assigned a value but never used.","'setDirection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateTimer'. Either include it or remove the dependency array.",["4403"],"'INDUSTRY_ICON_URL' is defined but never used.","'COMPANY_ICON_URL' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AVATAR_DEFAULT_URL' is defined but never used.","'useLayoutEffect' is defined but never used.","'Typography' is defined but never used.","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'ProgressBar' is defined but never used.","'SPECIALITY_LENGTH' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'AlertTable' is defined but never used.","React Hook useEffect has a missing dependency: 'initJobAlertData'. Either include it or remove the dependency array.",["4404"],"'handleChangeDense' is assigned a value but never used.","'CmtCardHeader' is defined but never used.","'Box' is defined but never used.","'AddIcon' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'windowSized'. Either include it or remove the dependency array.",["4405"],"React Hook useEffect has a missing dependency: 'windowSized'. Either include it or remove the dependency array.",["4406"],"react/jsx-pascal-case","Imported JSX component type must be in PascalCase or SCREAMING_SNAKE_CASE",["4400"],["4401"],"'Table' is defined but never used.","'TableHead' is defined but never used.","'ClientApplicantList' is defined but never used.","'StyledTableCell' is assigned a value but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'classnames' is defined but never used.","'jobInfo' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'paramsSearch' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'invokeSaveAsDialog' is defined but never used.","'uploadSuccess' is assigned a value but never used.","'setUploadSuccess' is assigned a value but never used.","'uploadFailed' is assigned a value but never used.","'setUploadFailed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleRecording'. Either include it or remove the dependency array.",["4407"],["4400"],["4401"],["4408"],["4409"],["4410"],["4411"],["4412"],["4413"],"no-global-assign","no-unsafe-negation",{"desc":"4414","fix":"4415"},{"desc":"4416","fix":"4417"},{"desc":"4418","fix":"4419"},{"desc":"4420","fix":"4421"},{"desc":"4422","fix":"4423"},{"desc":"4424","fix":"4425"},{"desc":"4418","fix":"4426"},{"desc":"4416","fix":"4427"},{"desc":"4414","fix":"4428"},{"desc":"4424","fix":"4429"},{"desc":"4420","fix":"4430"},{"desc":"4422","fix":"4431"},"Update the dependencies array to be: [setVideoUrl, setIsVideoProcessed, getVideo]",{"range":"4432","text":"4433"},"Update the dependencies array to be: [props, updateTimer]",{"range":"4434","text":"4435"},"Update the dependencies array to be: [updateHeaderStyle, listLoading, initJobAlertData]",{"range":"4436","text":"4437"},"Update the dependencies array to be: [windowSized]",{"range":"4438","text":"4439"},"Update the dependencies array to be: [actionsPos, actionsShowOnHover, windowSized]",{"range":"4440","text":"4441"},"Update the dependencies array to be: [handleRecording, stepRecording]",{"range":"4442","text":"4443"},{"range":"4444","text":"4437"},{"range":"4445","text":"4435"},{"range":"4446","text":"4433"},{"range":"4447","text":"4443"},{"range":"4448","text":"4439"},{"range":"4449","text":"4441"},[2009,2043],"[setVideoUrl, setIsVideoProcessed, getVideo]",[589,596],"[props, updateTimer]",[1411,1443],"[updateHeaderStyle, listLoading, initJobAlertData]",[3095,3097],"[windowSized]",[3149,3181],"[actionsPos, actionsShowOnHover, windowSized]",[1148,1163],"[handleRecording, stepRecording]",[1411,1443],[589,596],[2009,2043],[1148,1163],[3095,3097],[3149,3181]]